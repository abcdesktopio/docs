{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"abcdesktop.io is a desktopless system abcdesktop.io is a cloud native desktopless system and a complete work environment accessible from a simple HTML 5 web browser, without any installation. Like serverless does, desktopless computing allocates desktop resources on demand. Each user\u2019s application runs as a container to reduce attack surface. abcdeskop.io is an open source and free solution that offer seamless access to secure desktops and applications on any device, follow the https://github.com/abcdesktopio links. This flexible working environment simplifies usage like Telecommuting Remote virtual desktop Give temporary access to other contractors or guests Training BYOD, Bring Your Own Device Desktop On Demand, Desktop as a service Quick online preview You can discover abcdesktop.io desktopless services on the demo website. https://demo.abcdesktop.io instance is a quick example to illustrate how the abcdesktop.io project works. Your desktopless is ready to run for 10 minutes, and will be terminated by the garbage collector after 10 minutes. It requires an OpenID Connect provider to sign-in like (Google, Facebook, Github). The security policy for Internet network prevents requests from your abcdesktop being allowed. Printer service (using cups) and sound service (using pulseaudio) inside the kubernetes pods are enabled. To reach the demo website, follow the link https://demo.abcdesktop.io abcdesktop.io: a docker VDI service abcdesktop.io provides a way to run graphics software securely isolated in a docker container, and use a web browser HTML5 as display device. Because docker containers are lightweight and run without the extra load of an operating system, you can run many graphical applications on a single kernel or even on a kubernetes cluster. Quick installation for kubernetes You can watch the youtube video sample. This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS) or read the step by step installation process abcdesktop for kubernetes curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.sh | sh - Quick installation for docker (personal use, Non-cluster mode) You can watch the youtube video sample. This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS) or read the step by step installation process abcdesktop for docker curl -L https://raw.githubusercontent.com/abcdesktopio/conf/main/docker/install.sh | sh - Features Complete native cloud desktop, workspace environment Authentification OAuth 2.0, LDAP, LDAPS, Active Directory, Kerberos Access to the user home directory (homeDirectory support in Active Directory) Legacy CIFS FlexVolume using kubernetes driver All applications run inside an isolated docker container Local and remote printing support Off-line sessions are maintained No need to install applications any more Application update, run latest docker image Accounting and reporting (Graylog, Prometheus Grafana) Clipboard syncing Sound support with Janus WebRTC Gateway and RTP stream Applications Native support GNU/Linux console native support Native support GNU/Linux X11 applications native support Support Microsoft Windows applications using wine Supported web browser HTML abcdesktop.io uses many modern web technologies. However these are the minimum versions we are currently aware of: Chrome 49, Firefox 58, Safari 11, Opera 36, Microsoft Edge (based on Chromium) copy and paste features To fully use copy and paste features, from your local device to your abcdesktop (and vice versa), choose Chrome , Chromium or Microsoft Edge Chromium. The copy and paste feature is also supported on Firefox with a dedicated abcdesktop extension . Web browser Clipboard sync Chrome Yes, built in support Chromium Yes, built in support Microsoft Edge Chromium Yes, built in support Firefox Yes, install the dedicated abcdesktop extension Safari No, the clipboard access is not allowed by the user agent or the platform in the current context, possibly because the user denied permission Not supported web browser abcdesktop.io does NOT support Microsoft Internet Explorer from version 1.x to 11.x. If you need a Microsoft web browser use Microsoft Edge. Edge is based on the Chromium open-source project. Chromium forms the basis of Google Chrome, so the new Edge feels very similar to Google Chrome. Release history Release Status Date Requirements Applications Documentation 1.1 stable 09/15/2021 dockerd for personnal use and kubernetes An application is a docker container Ready 2.9 Release candidate 9 29/08/2022 require kubernetes < 1.24 and dockerd as container engine An application is a pod or a docker container Started 3.0 Beta 09/03/2022 kubernetes >= 1.24, all container engine An application is a pod or an ephemeral container Started Github repositories abcdesktop has 36 repositories available. Follow the code on GitHub https://github.com/abcdesktopio to get the source code.","title":"Home"},{"location":"#abcdesktopio-is-a-desktopless-system","text":"abcdesktop.io is a cloud native desktopless system and a complete work environment accessible from a simple HTML 5 web browser, without any installation. Like serverless does, desktopless computing allocates desktop resources on demand. Each user\u2019s application runs as a container to reduce attack surface. abcdeskop.io is an open source and free solution that offer seamless access to secure desktops and applications on any device, follow the https://github.com/abcdesktopio links. This flexible working environment simplifies usage like Telecommuting Remote virtual desktop Give temporary access to other contractors or guests Training BYOD, Bring Your Own Device Desktop On Demand, Desktop as a service","title":"abcdesktop.io is a desktopless system"},{"location":"#quick-online-preview","text":"You can discover abcdesktop.io desktopless services on the demo website. https://demo.abcdesktop.io instance is a quick example to illustrate how the abcdesktop.io project works. Your desktopless is ready to run for 10 minutes, and will be terminated by the garbage collector after 10 minutes. It requires an OpenID Connect provider to sign-in like (Google, Facebook, Github). The security policy for Internet network prevents requests from your abcdesktop being allowed. Printer service (using cups) and sound service (using pulseaudio) inside the kubernetes pods are enabled. To reach the demo website, follow the link https://demo.abcdesktop.io","title":"Quick online preview"},{"location":"#abcdesktopio-a-docker-vdi-service","text":"abcdesktop.io provides a way to run graphics software securely isolated in a docker container, and use a web browser HTML5 as display device. Because docker containers are lightweight and run without the extra load of an operating system, you can run many graphical applications on a single kernel or even on a kubernetes cluster.","title":"abcdesktop.io:\u00a0a docker VDI service"},{"location":"#quick-installation-for-kubernetes","text":"You can watch the youtube video sample. This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS) or read the step by step installation process abcdesktop for kubernetes curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.sh | sh -","title":"Quick installation for kubernetes"},{"location":"#quick-installation-for-docker-personal-use-non-cluster-mode","text":"You can watch the youtube video sample. This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS) or read the step by step installation process abcdesktop for docker curl -L https://raw.githubusercontent.com/abcdesktopio/conf/main/docker/install.sh | sh -","title":"Quick installation for docker (personal use, Non-cluster mode)"},{"location":"#features","text":"Complete native cloud desktop, workspace environment Authentification OAuth 2.0, LDAP, LDAPS, Active Directory, Kerberos Access to the user home directory (homeDirectory support in Active Directory) Legacy CIFS FlexVolume using kubernetes driver All applications run inside an isolated docker container Local and remote printing support Off-line sessions are maintained No need to install applications any more Application update, run latest docker image Accounting and reporting (Graylog, Prometheus Grafana) Clipboard syncing Sound support with Janus WebRTC Gateway and RTP stream","title":"Features"},{"location":"#applications","text":"Native support GNU/Linux console native support Native support GNU/Linux X11 applications native support Support Microsoft Windows applications using wine","title":"Applications"},{"location":"#supported-web-browser-html","text":"abcdesktop.io uses many modern web technologies. However these are the minimum versions we are currently aware of: Chrome 49, Firefox 58, Safari 11, Opera 36, Microsoft Edge (based on Chromium)","title":"Supported web browser HTML"},{"location":"#copy-and-paste-features","text":"To fully use copy and paste features, from your local device to your abcdesktop (and vice versa), choose Chrome , Chromium or Microsoft Edge Chromium. The copy and paste feature is also supported on Firefox with a dedicated abcdesktop extension . Web browser Clipboard sync Chrome Yes, built in support Chromium Yes, built in support Microsoft Edge Chromium Yes, built in support Firefox Yes, install the dedicated abcdesktop extension Safari No, the clipboard access is not allowed by the user agent or the platform in the current context, possibly because the user denied permission","title":"copy and paste features"},{"location":"#not-supported-web-browser","text":"abcdesktop.io does NOT support Microsoft Internet Explorer from version 1.x to 11.x. If you need a Microsoft web browser use Microsoft Edge. Edge is based on the Chromium open-source project. Chromium forms the basis of Google Chrome, so the new Edge feels very similar to Google Chrome.","title":"Not supported web browser"},{"location":"#release-history","text":"Release Status Date Requirements Applications Documentation 1.1 stable 09/15/2021 dockerd for personnal use and kubernetes An application is a docker container Ready 2.9 Release candidate 9 29/08/2022 require kubernetes < 1.24 and dockerd as container engine An application is a pod or a docker container Started 3.0 Beta 09/03/2022 kubernetes >= 1.24, all container engine An application is a pod or an ephemeral container Started","title":"Release history"},{"location":"#github-repositories","text":"abcdesktop has 36 repositories available. Follow the code on GitHub https://github.com/abcdesktopio to get the source code.","title":"Github repositories"},{"location":"applicationsformat/","text":"Application image format abcdesktop.io uses OCI container image format and add some labels to describe the application. Labels add metadata to the container image. Requirements A running container enegine (like dockerd) An access to the docker public registry Labels Docker images applications for abcdesktop use docker's LABELS as metadata. To select only abcdesktop applications from standard docker images, all abcdesktop's applications must have a label 'oc.type' set to the value 'app'. LABEL oc.type=app Label descriptions Label name Type Description Sample oc.icon string icon filename use by the web interface for the application, MUST suffix in .svg format writer.svg oc.icondata string icon file SVG data uuencoded PD94b...C9zdmc+Cg== oc.keyword string keywords use by the web application search engine separated by comma(,) firefox,mozilla,web,internet oc.desktopfile string .desktop gnome file name /usr/share/applications/firefox.desktop oc.cat string category use by the web application store, choose one value of the default list [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] office oc.launch string X11 Windows Class name . It MUST be unique use the command 'wmctrl -lx' to can the right name oc.template string Template name to use FROM in the DockerFile oc.template.gtk.firefox oc.path string Path to the application binary /usr/bin/firefox oc.args string arguments added to the command --open oc.name string Name of the application Firefox oc.displayname string Display Name show by Web interface Firefox oc.type string Always set to the value 'app' app oc.mimetype string MimeType supported by the application separated by semicolon(;) text/html;text/xml;application/xml;application/rss+xml;video/webm oc.showinview string Set to the dock to add this app in dock dock oc.fileextensions string Supported extensions file, separated by semicolon(;) htm;html;xml;gif oc.legacyfileextensions string Legacy file extensions, separated by semicolon(;) htm;html;xml oc.host_config dict dictionary of resources (see resources details) { 'shm_size': '1g' } Example for Firefox application LABEL oc.icon=\"firefox.svg\" LABEL oc.keyword=\"firefox,mozilla,internet\" LABEL oc.cat=\"office\" LABEL oc.launch=\"Navigator.Firefox\" LABEL oc.template=\"oc.template.gtk.firefox\" LABEL oc.name=\"Firefox\" LABEL oc.displayname=\"Firefox\" LABEL oc.path=\"/usr/bin/firefox\" LABEL oc.type=app LABEL oc.showinview=\"dock\" LABEL oc.mimetype=\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml\" LABEL oc.fileextensions=\"html;xml;gif\" LABEL oc.legacyfileextensions=\"html;xml\" host_config resource description host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" } Read the dedicated chapter for resource description, to get more informations on host_config Inspect an abcdesktop docker images To download an abcdesktop docker image, run the command docker pull abcdesktopio/firefox.d To inspect the labels in the docker image, run docker inspect docker inspect abcdesktopio/firefox.d:latest Read the labels section : \"Labels\": { \"architecture\": \"x86_64\", \"oc.cat\": \"office\", \"oc.desktopfile\": \"firefox.desktop\", \"oc.displayname\": \"Firefox\", \"oc.fileextensions\": \"htm;html;xml;gif\", \"oc.icon\": \"firefox.svg\", \"oc.icondata\": \"PD94b.. CUT HERE ...C9zdmc+Cg==\", \"oc.keyword\": \"firefox,mozilla,web,internet\", \"oc.launch\": \"Navigator.Firefox\", \"oc.legacyfileextensions\": \"htm;html;xml\", \"oc.mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"oc.name\": \"Firefox\", \"oc.path\": \"/usr/bin/firefox\", \"oc.showinview\": \"dock\", \"oc.template\": \"oc.template.gtk.firefox\", \"oc.type\": \"app\", \"oc.usedefaultapplication\": \"true\", \"release\": \"5\", \"vcs-ref\": \"master\", \"vcs-type\": \"git\", \"version\": \"1.2\" } The inheritance of the images All abcdesktop applications use by default the oc.template.gtk images name. The inheritance of the classes. By default, oc.templace.gtk is the main image for all applications. For example oc.template.gtk.firefox use the oc.template.gtk image. oc.template.gtk.firefox.acme use the oc.template.gtk.firefox . The oc.template.gtk.firefox contains the Mozilla Firefox application. The oc.template.gtk.firefox.acme may contain custom set for Mozilla Firefox application, like Root CA, proxy values or policy.json files for the acme. +------------------------------+ |oc.template.gtk.firefox.acme | +---------------+--------------+ | | +---------------+--------------+ |oc.template.gtk.firefox | +---------------+--------------+ | | +---------------+--------------+ |oc.template.gtk | +---------------+--------------+","title":"Application image format"},{"location":"applicationsformat/#application-image-format","text":"abcdesktop.io uses OCI container image format and add some labels to describe the application. Labels add metadata to the container image.","title":"Application image format"},{"location":"applicationsformat/#requirements","text":"A running container enegine (like dockerd) An access to the docker public registry","title":"Requirements"},{"location":"applicationsformat/#labels","text":"Docker images applications for abcdesktop use docker's LABELS as metadata. To select only abcdesktop applications from standard docker images, all abcdesktop's applications must have a label 'oc.type' set to the value 'app'. LABEL oc.type=app","title":"Labels"},{"location":"applicationsformat/#label-descriptions","text":"Label name Type Description Sample oc.icon string icon filename use by the web interface for the application, MUST suffix in .svg format writer.svg oc.icondata string icon file SVG data uuencoded PD94b...C9zdmc+Cg== oc.keyword string keywords use by the web application search engine separated by comma(,) firefox,mozilla,web,internet oc.desktopfile string .desktop gnome file name /usr/share/applications/firefox.desktop oc.cat string category use by the web application store, choose one value of the default list [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] office oc.launch string X11 Windows Class name . It MUST be unique use the command 'wmctrl -lx' to can the right name oc.template string Template name to use FROM in the DockerFile oc.template.gtk.firefox oc.path string Path to the application binary /usr/bin/firefox oc.args string arguments added to the command --open oc.name string Name of the application Firefox oc.displayname string Display Name show by Web interface Firefox oc.type string Always set to the value 'app' app oc.mimetype string MimeType supported by the application separated by semicolon(;) text/html;text/xml;application/xml;application/rss+xml;video/webm oc.showinview string Set to the dock to add this app in dock dock oc.fileextensions string Supported extensions file, separated by semicolon(;) htm;html;xml;gif oc.legacyfileextensions string Legacy file extensions, separated by semicolon(;) htm;html;xml oc.host_config dict dictionary of resources (see resources details) { 'shm_size': '1g' } Example for Firefox application LABEL oc.icon=\"firefox.svg\" LABEL oc.keyword=\"firefox,mozilla,internet\" LABEL oc.cat=\"office\" LABEL oc.launch=\"Navigator.Firefox\" LABEL oc.template=\"oc.template.gtk.firefox\" LABEL oc.name=\"Firefox\" LABEL oc.displayname=\"Firefox\" LABEL oc.path=\"/usr/bin/firefox\" LABEL oc.type=app LABEL oc.showinview=\"dock\" LABEL oc.mimetype=\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml\" LABEL oc.fileextensions=\"html;xml;gif\" LABEL oc.legacyfileextensions=\"html;xml\"","title":"Label descriptions"},{"location":"applicationsformat/#host_config-resource-description","text":"host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" } Read the dedicated chapter for resource description, to get more informations on host_config","title":"host_config resource description"},{"location":"applicationsformat/#inspect-an-abcdesktop-docker-images","text":"To download an abcdesktop docker image, run the command docker pull abcdesktopio/firefox.d To inspect the labels in the docker image, run docker inspect docker inspect abcdesktopio/firefox.d:latest Read the labels section : \"Labels\": { \"architecture\": \"x86_64\", \"oc.cat\": \"office\", \"oc.desktopfile\": \"firefox.desktop\", \"oc.displayname\": \"Firefox\", \"oc.fileextensions\": \"htm;html;xml;gif\", \"oc.icon\": \"firefox.svg\", \"oc.icondata\": \"PD94b.. CUT HERE ...C9zdmc+Cg==\", \"oc.keyword\": \"firefox,mozilla,web,internet\", \"oc.launch\": \"Navigator.Firefox\", \"oc.legacyfileextensions\": \"htm;html;xml\", \"oc.mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"oc.name\": \"Firefox\", \"oc.path\": \"/usr/bin/firefox\", \"oc.showinview\": \"dock\", \"oc.template\": \"oc.template.gtk.firefox\", \"oc.type\": \"app\", \"oc.usedefaultapplication\": \"true\", \"release\": \"5\", \"vcs-ref\": \"master\", \"vcs-type\": \"git\", \"version\": \"1.2\" }","title":"Inspect an abcdesktop docker images"},{"location":"applicationsformat/#the-inheritance-of-the-images","text":"All abcdesktop applications use by default the oc.template.gtk images name.","title":"The inheritance of the images"},{"location":"applicationsformat/#the-inheritance-of-the-classes","text":"By default, oc.templace.gtk is the main image for all applications. For example oc.template.gtk.firefox use the oc.template.gtk image. oc.template.gtk.firefox.acme use the oc.template.gtk.firefox . The oc.template.gtk.firefox contains the Mozilla Firefox application. The oc.template.gtk.firefox.acme may contain custom set for Mozilla Firefox application, like Root CA, proxy values or policy.json files for the acme. +------------------------------+ |oc.template.gtk.firefox.acme | +---------------+--------------+ | | +---------------+--------------+ |oc.template.gtk.firefox | +---------------+--------------+ | | +---------------+--------------+ |oc.template.gtk | +---------------+--------------+","title":"The inheritance of the classes."},{"location":"architecture/","text":"Architecture in docker mode abcdesktop workflow (with LDAP Auth) User login, get a user JWT Create a user POD (or a container) and retrieve a Desktop JWT Run, the user is connected to his own POD (or container) All JWT are signed with RSA keys. All JWT payload are encrypted with RSA keys Services Infrastructure The service infrastructure is based on : WebServer Nginx container Database service MongoDB Memcached service Memcached Pyos Core service (abcdesktop engine) Pyos The user creates a pod user Roles summary pyos pyos is the core abcdesktop service act as a control plane. Pyos is a stateless services, Pyos's roles are : Authenticate user on authenticate providers OAuth 2.0 Provider : Google, Facebook, Orange LDAP and LDAPS Active Directory Start/Stop user container in docker mode and Pod in Kubernetes mode Start/Stop application container When a new user is authenticated, a dedicated user container is created. When the user starts an application (like LibreOffice for example) a dedicated application container is created. nginx nginx container act as web server and websocket reverse proxy. mongo mongo is used by pyos to store user profil informations. The profil informations are : Login history Dock configuration Image and background colors configuration memcached memcache is use to store progress text message information during login process. memcache datas are set and get only by the control plane. oc.user oc.user is the name of the user's container image. oc.user runs the X11 graphical service. oc.user is based on ubuntu distribution. The abcdesktopio/oc.user.18.04 is based on ubuntu distribution 18.04 The abcdesktopio/oc.user.20.04 is based on ubuntu distribution 20.04 applications All applications are containers or pods, and share a graphical socket with the user's container","title":"Overview"},{"location":"architecture/#architecture-in-docker-mode","text":"","title":"Architecture in docker mode"},{"location":"architecture/#abcdesktop-workflow-with-ldap-auth","text":"User login, get a user JWT Create a user POD (or a container) and retrieve a Desktop JWT Run, the user is connected to his own POD (or container) All JWT are signed with RSA keys. All JWT payload are encrypted with RSA keys","title":"abcdesktop workflow (with LDAP Auth)"},{"location":"architecture/#services-infrastructure","text":"The service infrastructure is based on : WebServer Nginx container Database service MongoDB Memcached service Memcached Pyos Core service (abcdesktop engine) Pyos The user creates a pod user","title":"Services Infrastructure"},{"location":"architecture/#roles-summary","text":"","title":"Roles summary"},{"location":"architecture/#pyos","text":"pyos is the core abcdesktop service act as a control plane. Pyos is a stateless services, Pyos's roles are : Authenticate user on authenticate providers OAuth 2.0 Provider : Google, Facebook, Orange LDAP and LDAPS Active Directory Start/Stop user container in docker mode and Pod in Kubernetes mode Start/Stop application container When a new user is authenticated, a dedicated user container is created. When the user starts an application (like LibreOffice for example) a dedicated application container is created.","title":"pyos"},{"location":"architecture/#nginx","text":"nginx container act as web server and websocket reverse proxy.","title":"nginx"},{"location":"architecture/#mongo","text":"mongo is used by pyos to store user profil informations. The profil informations are : Login history Dock configuration Image and background colors configuration","title":"mongo"},{"location":"architecture/#memcached","text":"memcache is use to store progress text message information during login process. memcache datas are set and get only by the control plane.","title":"memcached"},{"location":"architecture/#ocuser","text":"oc.user is the name of the user's container image. oc.user runs the X11 graphical service. oc.user is based on ubuntu distribution. The abcdesktopio/oc.user.18.04 is based on ubuntu distribution 18.04 The abcdesktopio/oc.user.20.04 is based on ubuntu distribution 20.04","title":"oc.user"},{"location":"architecture/#applications","text":"All applications are containers or pods, and share a graphical socket with the user's container","title":"applications"},{"location":"buildapplications.wine/","text":"Build abcdesktop docker image for Microsoft Windows using Wine Requirements Read the chapter Edit your configuration file in docker mode is mandatory Read the chapter Build abcdesktop docker image is mandatory. A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host. abcdesktop can run Microsoft Windows applications using Wine. wine embedded in oc.template.gtk.wine image To run Windows applications abcdesktop use wine. A dedicated image template source is ready to use as source of others Windows applications. This template is named abcdesktopio/oc.template.gtk.wine. Start pulling this template image, if you don't have already done in the previous exercice : docker pull abcdesktopio/oc.template.gtk.wine This image embeded the architecture format win32 win64 . By default the WINEARCH is set to win32 . The playonlinux package is all ready installed. Change the od.config configuration file The homedirectorytype option To share the home directory /home/balloon volume data between containers, set the desktop.homedirectorytype to 'volume' in your od.config file. Edit your own od.config file as described in the chapter Edit your configuration file in docker mode , and make sure that desktop.homedirectorytype is set to 'volume' desktop.homedirectorytype: 'volume' If need, run the docker-compose restart command in your abcdesktop directory where the od.config and the docker-compose.yml are located. docker-compose restart Build a new windows putty inside a docker container In this exercice we are going to install and run putty.exe for Windows inside a docker container for abcdesktop. PuTTY is an SSH and telnet client, developed originally by Simon Tatham for the Microsoft Windows platform. Start an abcdesktop session. You can use an authenticated session using an authentication provider external or explicit , or you can do this exercice using Anonymous Authentification also know as the authentication provider implicit . In this exercice we choose an Anonymous authentification, DO NOT CLOSE YOUR WEB BROWSER , you should not be able de reconnect with the same user context, and have to restart this exercice again. Login using the Anonymous authentification provider. Click on the menu and choose settings options On the Settings dialog box, choose System option Choose the User container tabs, and select the hostname value. Copy this value into your clipboard. The hostname use the docker containerid value. Keep your web browser open, and open a terminal shell on your server, to run docker shell commmand. Run the docker inspect -f \"{{ .HostConfig.Binds }}\" and add your CONTAINER ID as parameter. CONTAINER_ID=5719b77d3f2a docker inspect -f \"{{ .HostConfig.Binds }}\" $CONTAINER_ID where CONTAINER_ID is your own containerid value. For example docker inspect -f \"{{ .HostConfig.Binds }}\" 5719b77d3f2a You should read the volume name starting by the prefix tmp- with your uuid value, and a second volume name starting by the prefix home- with your uuid: [tmp-57be1e5b-0b14-4c05-ae79-75e9a03c77be:/tmp home-57be1e5b-0b14-4c05-ae79-75e9a03c77be:/home/balloon] We are using the /tmp volume and the /home/balloon volume of your container. If your are using an anonymous authentification, the name of your container id is formated as an uuid, for example a32deda7-324f-4ee4-9e51-51c1aaf66bcf . The name of the tmp volume is tmp-a32deda7-324f-4ee4-9e51-51c1aaf66bcf and the name of tmp volume is home-a32deda7-324f-4ee4-9e51-51c1aaf66bcf If your are using an LDAP authentification, the name of your container id is a string equal to the username, for example hermes . The name of the tmp volume is tmp-hermes and the name of tmp volume is home-hermes . Replace in the command the string TMP_VOLUMENAME by your own tmp volume name. Replace in the command the string HOME_VOLUMENAME by your own home volume name. docker run -it -v TMP_VOLUMENAME:/tmp -v HOME_VOLUMENAME:/home/balloon --user balloon abcdesktopio/oc.template.gtk.wine bash For example with an anonymous user: docker run -it -v tmp-a32deda7-324f-4ee4-9e51-51c1aaf66bcf:/tmp -v home-a32deda7-324f-4ee4-9e51-51c1aaf66bcf:/home/balloon --user balloon abcdesktopio/oc.template.gtk.wine bash Great, you have started a new docker container. The oc.user container and your new container is sharing the same volume mounted as /tmp . You get a prompt inside the new docker container. To run a command as administrator (user \"root\"), use \"sudo <command>\". See \"man sudo_root\" for details. balloon@721263d5dece:~$ Init the wine directory wineboot --init After few seconds you should read on the standard error 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0014:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0014:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0014:err:ole:get_local_server_stream Failed: 80004002 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0012:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0012:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0012:err:ole:get_local_server_stream Failed: 80004002 Could not find Wine Gecko. HTML rendering will be disabled. Could not find Wine Gecko. HTML rendering will be disabled. wine: configuration in L\"/composer/.wine\" has been updated. And now download putty.exe from the web site https://www.putty.org/. In this example, we use the 64 bits binary format balloon@8e48719ae72f:~$ wget https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe Start the putty.exe with wine, with the command wine putty.exe balloon@5719b77d3f2a:~$ wine putty.exe After few seconds you should read on the standard error 0009:err:winediag:SECUR32_initNTLMSP ntlm_auth was not found or is outdated. Make sure that ntlm_auth >= 3.0.25 is in your path. Usually, you can find it in the winbind package of your distribution. The wine prefix is WINEPREFIX=/composer/.wine , all files used by wine are stored in /composer/.wine directory. On abcdesktop display, wine is starting the application putty, after few seconds, Putty is running : You can use this Putty Windows application to connect to another host using ssh or telnet protocol. The application Putty is opened and is running in the background. At the right corner, write in the search bar the keyword shell Click on the Web Shell icon, a new Terminal WebShell is now opened : Run the command to list each X11 windows and get the WMClass name. wmctrl -lx Read the WM_CLASS of the Putty Wine application: putty.exe.Wine Then exit the web shell and quit on the Putty application. Wine has created a configuration directory in the default directory /composer/.wine . Build the new putty.d image for abcdesktop In this chapter we are going to build a new docker image for abcdesktop The new image is the putty. Create a directory named build , and create a directory icons inside build mkdir build mkdir build/icons cd build To build your own json file. Create a json file named applist.json , inside build directory, and add the content to the json file. [ { \"template\": \"abcdesktopio/oc.template.gtk.wine\", \"preruncommands\": [ \"ENV WINEARCH=win64\", \"USER $BUSER\", \"RUN wineboot --init\", \"RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe\", \"RUN echo disable > $WINEPREFIX/.update-timestamp\" ], \"args\": \"/composer/bin/putty.exe\", \"cat\": \"utilities\", \"debpackage\": \"\", \"icon\": \"putty.svg\", \"keyword\": \"putty,ssh,terminal\", \"launch\": \"putty.exe.Wine\", \"name\": \"putty-wine\", \"displayname\": \"Putty Wine\", \"path\": \"/usr/bin/wine\" } ] To fill the data inside the json file : name Type Data cat string utilities icon string putty.svg keyword string putty,ssh,terminal launch string putty.exe.Wine name string putty path string /usr/bin/wine args string /composer/bin/putty.exe template string abcdesktopio/oc.template.gtk.wine You can read the following help lines. cat is the category, choose the most appropriate value in the list : [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] icon is the name of the icon. abcdesktop support only svg icon file format. To get the icon file, look at the link https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/putty.svg keyword is a list of the keywords to find the application. Set the value to putty,ssh,terminal . launch is the X11 Class name of the window. To get this value, we need to run the application on GNU/Linux (read the dedicated chapter below). name is the name of the application. Set the value to putty. path is the binary path to run the application. template is the name of the parent image. The default image parent for wine is abcdesktopio/oc.template.gtk.wine . Save the putty icon file on SVG format to the icons directory. wget -O icons/putty.svg https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/putty.svg Build putty your from applist.json To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can not download this file. Save make.js it to you build directory. make.js is a nodejs JavaScript file. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript. If you don't have already nodejs installed on your system, go to the website nodejs download website and follow the instructions to install nodejs. wget https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/make.js In the build directory, you should have drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 . drwxr-xr-x+ 31 devuser staff 992 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 497 Mar 11 15:15 applist.json drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 icons -rw-r--r-- 1 devuser staff 6112 Mar 11 15:12 make.js ./icons: total 8 drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 . drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 1909 Oct 31 2015 putty.svg Run the command make.js node make.js make.js build a new DockerFile for putty application. Remember, all application images use container images. You should get the output { template: 'abcdesktopio/oc.template.gtk.wine', preruncommands: [ 'ENV WINEARCH=win64', 'USER $BUSER', 'RUN wineboot --init', 'RUN echo disable > $WINEPREFIX/.update-timestamp', 'RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe' ], args: '/composer/bin/putty.exe', cat: 'utilities', debpackage: '', icon: 'putty.svg', keyword: 'putty,ssh,terminal', launch: 'putty.exe.Wine', name: 'putty-wine', displayname: 'Putty Wine', path: '/usr/bin/wine' } The new files putty-wine.d has been generated : putty-wine.d is the Dockerfile for your putty abcdesktop application Read the content of the Dockerfile putty-wine.d . List all labels, and confirm that the icon file is uuencoded format. Uuencoding is a form of binary-to-text encoding. Now it's time to build your putty app. Run the command docker build command. docker build --build-arg TAG=latest -f putty-wine.d -t putty-wine.d . You should read on the standard ouput [+] Building 21.6s (10/10) FINISHED => [internal] load build definition from putty-wine.d 0.0s => => transferring dockerfile: 12.46kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk.wine:dev 0.0s => CACHED [1/6] FROM docker.io/abcdesktopio/oc.template.gtk.wine:dev 0.0s => [2/6] RUN wineboot --init 10.9s => [3/6] RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe 0.6s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 9.2s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.4s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.4s => => exporting layers 0.3s => => writing image sha256:2cbe019726e67ecb83af74e944ff932705086e632ab4a57dec719be5e7e654cd 0.0s => => naming to docker.io/library/putty-wine.d 0.0s Now, your new image is ready to run. Run your putty for abcdesktop The API server does not know that you have built your new 2048 application. You have to send a message to the API server, to update the API Server images cache list. Using your web browser or a curl command, call a http request to notify the API Server http://localhost/API/manager/buildapplist This http request return a json object, with all docker images details : Reloead your web browser connected on the abcdesktop website, and log your again as anonymous. In the search area, type putty . Click on the Putty Application. Wine is starting your Putty application : Great, you have build a abcdesktop image for Putty , build the application image Putty . You can push this image to your own private docker registry. Optional add a persistant user.reg and system.reg windows registry files This is a quick and dirty solution, but it works fine Your wine configuration is stored in /composer/.wine , and by default user.reg and system.reg are located in the WINEPREFIX directory. The user.reg and system.reg files build when wine starts. To make a copy of fresh running putty-wine.d image. Start your putty-wine.d image and using a shell located the new user.reg and system.reg files docker ps -a | grep putty-wine 65d95f4e7717 putty-wine.d:latest \"/composer/appli-doc\u2026\" 16 seconds ago Up 15 seconds anonymous-putty-wine-7877d100de0b4363ad24240d67032c8c Then copy files using the docker cp command CONTAINERID=65d95f4e7717 docker cp $CONTAINERID:/composer/.wine/user.reg . docker cp $CONTAINERID:/composer/.wine/system.reg . Add them to your default putty-wine.d image using applist.json file : [ { \"template\": \"abcdesktopio/oc.template.gtk.wine\", \"preruncommands\": [ \"ENV WINEARCH=win64\", \"USER $BUSER\", \"RUN wineboot --init\", \"RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe\", \"RUN echo disable > $WINEPREFIX/.update-timestamp\", \"COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine\" ], \"args\": \"/composer/bin/putty.exe\", \"cat\": \"utilities\", \"debpackage\": \"\", \"icon\": \"putty.svg\", \"keyword\": \"putty,ssh,terminal\", \"launch\": \"putty.exe.Wine\", \"name\": \"putty-wine\", \"displayname\": \"Putty Wine\", \"path\": \"/usr/bin/wine\" } ] Rebuild your Dockerfile node make.js { template: 'abcdesktopio/oc.template.gtk.wine', preruncommands: [ 'ENV WINEARCH=win64', 'USER $BUSER', 'RUN wineboot --init', 'RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe', 'RUN echo disable > $WINEPREFIX/.update-timestamp', 'COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine' ], args: '/composer/bin/putty.exe', cat: 'utilities', debpackage: '', icon: 'putty.svg', keyword: 'putty,ssh,terminal', launch: 'putty.exe.Wine', name: 'putty-wine', displayname: 'Putty Wine', path: '/usr/bin/wine' } Building putty.exe.Wine Run the command docker build command. docker build --build-arg TAG=latest -f putty-wine.d -t putty-wine.d . Now your wine keep your registry's updates.","title":"Build your own abcdesktop MsWindows Image"},{"location":"buildapplications.wine/#build-abcdesktop-docker-image-for-microsoft-windows-using-wine","text":"","title":"Build abcdesktop docker image for Microsoft Windows using Wine"},{"location":"buildapplications.wine/#requirements","text":"Read the chapter Edit your configuration file in docker mode is mandatory Read the chapter Build abcdesktop docker image is mandatory. A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host. abcdesktop can run Microsoft Windows applications using Wine.","title":"Requirements"},{"location":"buildapplications.wine/#wine-embedded-in-octemplategtkwine-image","text":"To run Windows applications abcdesktop use wine. A dedicated image template source is ready to use as source of others Windows applications. This template is named abcdesktopio/oc.template.gtk.wine. Start pulling this template image, if you don't have already done in the previous exercice : docker pull abcdesktopio/oc.template.gtk.wine This image embeded the architecture format win32 win64 . By default the WINEARCH is set to win32 . The playonlinux package is all ready installed.","title":"wine embedded in oc.template.gtk.wine image"},{"location":"buildapplications.wine/#change-the-odconfig-configuration-file","text":"","title":"Change the od.config configuration file"},{"location":"buildapplications.wine/#the-homedirectorytype-option","text":"To share the home directory /home/balloon volume data between containers, set the desktop.homedirectorytype to 'volume' in your od.config file. Edit your own od.config file as described in the chapter Edit your configuration file in docker mode , and make sure that desktop.homedirectorytype is set to 'volume' desktop.homedirectorytype: 'volume' If need, run the docker-compose restart command in your abcdesktop directory where the od.config and the docker-compose.yml are located. docker-compose restart","title":"The homedirectorytype option"},{"location":"buildapplications.wine/#build-a-new-windows-putty-inside-a-docker-container","text":"In this exercice we are going to install and run putty.exe for Windows inside a docker container for abcdesktop. PuTTY is an SSH and telnet client, developed originally by Simon Tatham for the Microsoft Windows platform. Start an abcdesktop session. You can use an authenticated session using an authentication provider external or explicit , or you can do this exercice using Anonymous Authentification also know as the authentication provider implicit . In this exercice we choose an Anonymous authentification, DO NOT CLOSE YOUR WEB BROWSER , you should not be able de reconnect with the same user context, and have to restart this exercice again. Login using the Anonymous authentification provider. Click on the menu and choose settings options On the Settings dialog box, choose System option Choose the User container tabs, and select the hostname value. Copy this value into your clipboard. The hostname use the docker containerid value. Keep your web browser open, and open a terminal shell on your server, to run docker shell commmand. Run the docker inspect -f \"{{ .HostConfig.Binds }}\" and add your CONTAINER ID as parameter. CONTAINER_ID=5719b77d3f2a docker inspect -f \"{{ .HostConfig.Binds }}\" $CONTAINER_ID where CONTAINER_ID is your own containerid value. For example docker inspect -f \"{{ .HostConfig.Binds }}\" 5719b77d3f2a You should read the volume name starting by the prefix tmp- with your uuid value, and a second volume name starting by the prefix home- with your uuid: [tmp-57be1e5b-0b14-4c05-ae79-75e9a03c77be:/tmp home-57be1e5b-0b14-4c05-ae79-75e9a03c77be:/home/balloon] We are using the /tmp volume and the /home/balloon volume of your container. If your are using an anonymous authentification, the name of your container id is formated as an uuid, for example a32deda7-324f-4ee4-9e51-51c1aaf66bcf . The name of the tmp volume is tmp-a32deda7-324f-4ee4-9e51-51c1aaf66bcf and the name of tmp volume is home-a32deda7-324f-4ee4-9e51-51c1aaf66bcf If your are using an LDAP authentification, the name of your container id is a string equal to the username, for example hermes . The name of the tmp volume is tmp-hermes and the name of tmp volume is home-hermes . Replace in the command the string TMP_VOLUMENAME by your own tmp volume name. Replace in the command the string HOME_VOLUMENAME by your own home volume name. docker run -it -v TMP_VOLUMENAME:/tmp -v HOME_VOLUMENAME:/home/balloon --user balloon abcdesktopio/oc.template.gtk.wine bash For example with an anonymous user: docker run -it -v tmp-a32deda7-324f-4ee4-9e51-51c1aaf66bcf:/tmp -v home-a32deda7-324f-4ee4-9e51-51c1aaf66bcf:/home/balloon --user balloon abcdesktopio/oc.template.gtk.wine bash Great, you have started a new docker container. The oc.user container and your new container is sharing the same volume mounted as /tmp . You get a prompt inside the new docker container. To run a command as administrator (user \"root\"), use \"sudo <command>\". See \"man sudo_root\" for details. balloon@721263d5dece:~$ Init the wine directory wineboot --init After few seconds you should read on the standard error 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0014:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0014:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0014:err:ole:get_local_server_stream Failed: 80004002 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0012:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0012:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0012:err:ole:get_local_server_stream Failed: 80004002 Could not find Wine Gecko. HTML rendering will be disabled. Could not find Wine Gecko. HTML rendering will be disabled. wine: configuration in L\"/composer/.wine\" has been updated. And now download putty.exe from the web site https://www.putty.org/. In this example, we use the 64 bits binary format balloon@8e48719ae72f:~$ wget https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe Start the putty.exe with wine, with the command wine putty.exe balloon@5719b77d3f2a:~$ wine putty.exe After few seconds you should read on the standard error 0009:err:winediag:SECUR32_initNTLMSP ntlm_auth was not found or is outdated. Make sure that ntlm_auth >= 3.0.25 is in your path. Usually, you can find it in the winbind package of your distribution. The wine prefix is WINEPREFIX=/composer/.wine , all files used by wine are stored in /composer/.wine directory. On abcdesktop display, wine is starting the application putty, after few seconds, Putty is running : You can use this Putty Windows application to connect to another host using ssh or telnet protocol. The application Putty is opened and is running in the background. At the right corner, write in the search bar the keyword shell Click on the Web Shell icon, a new Terminal WebShell is now opened : Run the command to list each X11 windows and get the WMClass name. wmctrl -lx Read the WM_CLASS of the Putty Wine application: putty.exe.Wine Then exit the web shell and quit on the Putty application. Wine has created a configuration directory in the default directory /composer/.wine .","title":"Build a new windows putty inside a docker container"},{"location":"buildapplications.wine/#build-the-new-puttyd-image-for-abcdesktop","text":"In this chapter we are going to build a new docker image for abcdesktop The new image is the putty. Create a directory named build , and create a directory icons inside build mkdir build mkdir build/icons cd build To build your own json file. Create a json file named applist.json , inside build directory, and add the content to the json file. [ { \"template\": \"abcdesktopio/oc.template.gtk.wine\", \"preruncommands\": [ \"ENV WINEARCH=win64\", \"USER $BUSER\", \"RUN wineboot --init\", \"RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe\", \"RUN echo disable > $WINEPREFIX/.update-timestamp\" ], \"args\": \"/composer/bin/putty.exe\", \"cat\": \"utilities\", \"debpackage\": \"\", \"icon\": \"putty.svg\", \"keyword\": \"putty,ssh,terminal\", \"launch\": \"putty.exe.Wine\", \"name\": \"putty-wine\", \"displayname\": \"Putty Wine\", \"path\": \"/usr/bin/wine\" } ] To fill the data inside the json file : name Type Data cat string utilities icon string putty.svg keyword string putty,ssh,terminal launch string putty.exe.Wine name string putty path string /usr/bin/wine args string /composer/bin/putty.exe template string abcdesktopio/oc.template.gtk.wine You can read the following help lines. cat is the category, choose the most appropriate value in the list : [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] icon is the name of the icon. abcdesktop support only svg icon file format. To get the icon file, look at the link https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/putty.svg keyword is a list of the keywords to find the application. Set the value to putty,ssh,terminal . launch is the X11 Class name of the window. To get this value, we need to run the application on GNU/Linux (read the dedicated chapter below). name is the name of the application. Set the value to putty. path is the binary path to run the application. template is the name of the parent image. The default image parent for wine is abcdesktopio/oc.template.gtk.wine . Save the putty icon file on SVG format to the icons directory. wget -O icons/putty.svg https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/putty.svg","title":"Build the new putty.d image for abcdesktop"},{"location":"buildapplications.wine/#build-putty-your-from-applistjson","text":"To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can not download this file. Save make.js it to you build directory. make.js is a nodejs JavaScript file. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript. If you don't have already nodejs installed on your system, go to the website nodejs download website and follow the instructions to install nodejs. wget https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/make.js In the build directory, you should have drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 . drwxr-xr-x+ 31 devuser staff 992 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 497 Mar 11 15:15 applist.json drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 icons -rw-r--r-- 1 devuser staff 6112 Mar 11 15:12 make.js ./icons: total 8 drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 . drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 1909 Oct 31 2015 putty.svg Run the command make.js node make.js make.js build a new DockerFile for putty application. Remember, all application images use container images. You should get the output { template: 'abcdesktopio/oc.template.gtk.wine', preruncommands: [ 'ENV WINEARCH=win64', 'USER $BUSER', 'RUN wineboot --init', 'RUN echo disable > $WINEPREFIX/.update-timestamp', 'RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe' ], args: '/composer/bin/putty.exe', cat: 'utilities', debpackage: '', icon: 'putty.svg', keyword: 'putty,ssh,terminal', launch: 'putty.exe.Wine', name: 'putty-wine', displayname: 'Putty Wine', path: '/usr/bin/wine' } The new files putty-wine.d has been generated : putty-wine.d is the Dockerfile for your putty abcdesktop application Read the content of the Dockerfile putty-wine.d . List all labels, and confirm that the icon file is uuencoded format. Uuencoding is a form of binary-to-text encoding. Now it's time to build your putty app. Run the command docker build command. docker build --build-arg TAG=latest -f putty-wine.d -t putty-wine.d . You should read on the standard ouput [+] Building 21.6s (10/10) FINISHED => [internal] load build definition from putty-wine.d 0.0s => => transferring dockerfile: 12.46kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk.wine:dev 0.0s => CACHED [1/6] FROM docker.io/abcdesktopio/oc.template.gtk.wine:dev 0.0s => [2/6] RUN wineboot --init 10.9s => [3/6] RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe 0.6s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 9.2s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.4s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.4s => => exporting layers 0.3s => => writing image sha256:2cbe019726e67ecb83af74e944ff932705086e632ab4a57dec719be5e7e654cd 0.0s => => naming to docker.io/library/putty-wine.d 0.0s Now, your new image is ready to run.","title":"Build putty your from applist.json"},{"location":"buildapplications.wine/#run-your-putty-for-abcdesktop","text":"The API server does not know that you have built your new 2048 application. You have to send a message to the API server, to update the API Server images cache list. Using your web browser or a curl command, call a http request to notify the API Server http://localhost/API/manager/buildapplist This http request return a json object, with all docker images details : Reloead your web browser connected on the abcdesktop website, and log your again as anonymous. In the search area, type putty . Click on the Putty Application. Wine is starting your Putty application : Great, you have build a abcdesktop image for Putty , build the application image Putty . You can push this image to your own private docker registry.","title":"Run your putty for abcdesktop"},{"location":"buildapplications.wine/#optional-add-a-persistant-userreg-and-systemreg-windows-registry-files","text":"This is a quick and dirty solution, but it works fine Your wine configuration is stored in /composer/.wine , and by default user.reg and system.reg are located in the WINEPREFIX directory. The user.reg and system.reg files build when wine starts. To make a copy of fresh running putty-wine.d image. Start your putty-wine.d image and using a shell located the new user.reg and system.reg files docker ps -a | grep putty-wine 65d95f4e7717 putty-wine.d:latest \"/composer/appli-doc\u2026\" 16 seconds ago Up 15 seconds anonymous-putty-wine-7877d100de0b4363ad24240d67032c8c Then copy files using the docker cp command CONTAINERID=65d95f4e7717 docker cp $CONTAINERID:/composer/.wine/user.reg . docker cp $CONTAINERID:/composer/.wine/system.reg . Add them to your default putty-wine.d image using applist.json file : [ { \"template\": \"abcdesktopio/oc.template.gtk.wine\", \"preruncommands\": [ \"ENV WINEARCH=win64\", \"USER $BUSER\", \"RUN wineboot --init\", \"RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe\", \"RUN echo disable > $WINEPREFIX/.update-timestamp\", \"COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine\" ], \"args\": \"/composer/bin/putty.exe\", \"cat\": \"utilities\", \"debpackage\": \"\", \"icon\": \"putty.svg\", \"keyword\": \"putty,ssh,terminal\", \"launch\": \"putty.exe.Wine\", \"name\": \"putty-wine\", \"displayname\": \"Putty Wine\", \"path\": \"/usr/bin/wine\" } ] Rebuild your Dockerfile node make.js { template: 'abcdesktopio/oc.template.gtk.wine', preruncommands: [ 'ENV WINEARCH=win64', 'USER $BUSER', 'RUN wineboot --init', 'RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe', 'RUN echo disable > $WINEPREFIX/.update-timestamp', 'COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine' ], args: '/composer/bin/putty.exe', cat: 'utilities', debpackage: '', icon: 'putty.svg', keyword: 'putty,ssh,terminal', launch: 'putty.exe.Wine', name: 'putty-wine', displayname: 'Putty Wine', path: '/usr/bin/wine' } Building putty.exe.Wine Run the command docker build command. docker build --build-arg TAG=latest -f putty-wine.d -t putty-wine.d . Now your wine keep your registry's updates.","title":"Optional add a persistant user.reg and system.reg windows registry files"},{"location":"buildapplicationsgnulinux/","text":"Build your own application image abcdesktop use docker image format with some labels to describe the application. Requirements A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host. The root password of the oc.user docker image. The default password is lmdpocpetit , but this value may have been changed. Build your own application image In this chapter we are going to build a new docker image for abcdesktop The new image is the game 2048. Create a directory named build , and create a directory icons inside build mkdir build mkdir build/icons cd build To build your own image create first a json file. Create a json file named applist.json , inside build directory, and add the content to the json file. [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" } ] To fill the data inside the json file : name Type Data cat string games debpackage string 2048-qt icon string 2048_logo.svg keyword string 2048 launch string 2048-qt.2048-qt name string 2048 path string /usr/games/2048-qt template string abcdesktopio/oc.template.gtk You can read the following help lines, or fill the json missing value by yourself. cat is the category, choose the most appropriate value in the list : [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] debpackage is the name of the 2048 ubuntu package. To find the package name, look at the link 2048 Ubuntu Package . icon is the name of the icon. abcdesktop support only svg icon file format. To get the icon file, look at the link https://upload.wikimedia.org/wikipedia/commons/1/18/2048_logo.svg keyword is a list of the keywords to find the application. Set the value to 2048. launch is the X11 Class name of the window. To get this value, we need to run the application on GNU/Linux (read the dedicated chapter below). name is the name of the application. Set the value to 2048. path is the binary path to run the application. template is the name of the parent image. The default image parent is abcdesktopio/oc.template.gtk . You will learn how to customize your own template image, in next chapter. Save the 2048 icon file on SVG format to the icons directory. You should have this file in the icons directory as the output of the ls icons command : 2048_logo.svg Build your new image 2048 To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can not download this file. Save make.js it to you build directory. make.js is a nodejs JavaScript file. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript. If you don't have already nodejs installed on your system, go to the website nodejs download website and follow the instructions to install nodejs. In the build directory, you should have drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 . drwxr-xr-x+ 31 devuser staff 992 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 265 Mar 11 15:15 applist.json drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 img -rw-r--r-- 1 devuser staff 8036 Mar 11 15:12 make.js ./img: total 8 drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 . drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 1909 Oct 31 2015 2048_logo.svg Run the command make.js node make.js make.js build a new DockerFile for the 2048 application. Remember, all application images use container images. You should get the output { cat: 'games', debpackage: '2048-qt', icon: '2048_logo.svg', keyword: '2048', launch: '2048-qt.2048-qt', name: '2048', displayname: '2048', path: '/usr/games/2048-qt', template: 'abcdesktopio/oc.template.gtk' } Building 2048-qt.2048-qt { cat: 'games', debpackage: '2048-qt', icon: '2048_logo.svg', keyword: '2048', launch: '2048-qt.2048-qt', name: '2048', displayname: '2048', path: '/usr/games/2048-qt', template: 'abcdesktopio/oc.template.gtk' } Building documentation 2048-qt.2048-qt - '2048' : '2048.md' The new files 2048.d and 2048.md have been generated : 2048.d is the Dockerfile for your 2048 abcdesktop application 2048.md is the documentation file for your 2048 abcdesktop application Read the content of the Dockerfile 2048.d . List all labels, and confirm that the icon file is uuencoded format. Uuencoding is a form of binary-to-text encoding. Now it's time to build your 2048 app. Run the command docker build command. docker build --build-arg TAG=latest -f 2048.d -t 2048.d . You should read the output : [+] Building 32.0s (10/10) FINISHED => [internal] load build definition from 2048.d 0.0s => => transferring dockerfile: 33B 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:latest 1.4s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:latest@sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 0.4s => => resolve docker.io/abcdesktopio/oc.template.gtk:latest@sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 0.0s => => sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 4.50kB / 4.50kB 0.0s => => sha256:f3c3f03bd0b5cda9f56703a4ba1b9d96d5ff2be3c03bee1831ce30dc98bb3b62 8.93kB / 8.93kB 0.0s => [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends 2048-qt && apt-get clean 27.5s => [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.5s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.5s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.4s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 1.1s => => exporting layers 1.1s => => writing image sha256:a861af06b7f0dfa19fcde19ee8848bfee65807f852b082d9314e68676966895a 0.0s => => naming to docker.io/library/2048.d Check that your image is ready on your system: Run the docker images command docker images You should read on the stdout more lines, only 2048.d is listed here : REPOSITORY TAG IMAGE ID CREATED SIZE 2048.d latest a861af06b7f0 About a minute ago 1.17GB The total image size of 2048.d is 1.17GB. The 2048.d does not use 1.17GB, but only the difference between the 2048 image and the source image abcdesktopio/oc.template.gtk . Update the cache application list The API server receives a new image event from docker. To run the new applications just refresh you web browser page. Run your new application Return to your abcdesktop website http://localhost and log in as Anonymous. At the right corner, write in the search bar the keyword 2048 Click on the 2048 icon, and start your first abcdesktop application : Great it's a good job, you have build your own abcdesktop 2048 application. Now you can spent a lot of time to reach the 2048 score. Have fun ! Get launch and path values To get the X11 class name of the 2048 game, we need to install it on a Linux host. You can use abcdesktop as a Linux host or choose your own. If you want to use abcdesktop as a GNU/Linux host Open the url http://localhost, in your web browser, to start a simple abcdesktop container. You will use this container to install the 2048 application and fill the missing values launch and path . http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right corner, write in the search bar the keyword shell Click on the Web Shell icon, a new Terminal WebShell is now opened : Run the command sudo apt-get update The default password is lmdpocpetit ( if your admin did not change it, otherwise ask to the administrator ) Run the installation command sudo apt-get install -y 2048-qt You should read the output, during the installation process On Ubuntu, the games are installed in a dedicated directory /usr/games . Read the file list of the 2048-qt Ubuntu package /usr/games/2048-qt /usr/share/applications/2048-qt.desktop /usr/share/doc/2048-qt/changelog.Debian.gz /usr/share/doc/2048-qt/copyright /usr/share/man/man6/2048-qt.6.gz /usr/share/menu/2048-qt /usr/share/pixmaps/2048-qt.xpm Start the 2048 game binary 2048-qt in background. /usr/games/2048-qt & The new 2048 window is opening in the background. You can minimise the shell window to play to the 2048 game, but this is not the goal of this chapter. To show the shell window again, click on the shell icon on the upper right corner . Run the command to list each X11 windows and get the WMClass name. wmctrl -lx wmctrl is a command that can be used to interact with an X Window manager, and can query the window manager for information, and it can request that certain window management actions be taken. -l list the windows being managed by the window manager. -x include WM_CLASS in the window list Great, look at the third value, this is what we are looking for : The launch is 2048-qt.2048-qt The path is /usr/games/2048-qt You can now close your web browser and fill your json file, by yourself GIMP The applist.json is a array of application object. Add a new application object in the array, and fill the value for the new application. By yourself, you have to run this exercice again, for the Gimp application. Gimp is Gnu Image Manipulation Program . New applist.json data, and build your own Gimp abcdesktop.io application. [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" }, { \"cat\": \"\", \"debpackage\": \"\", \"icon\": \"\", \"keyword\": \"\", \"launch\": \"t\", \"name\": \"\", \"displayname\": \"\", \"path\": \"\", \"template\": \"\" } ] You should get data entries like: The GIMP icon SVG file is avalaible on wikipedia website The_GIMP_icon_-_gnome.svg The wmctrl show the WM_CLASS gimp.Gimp The path is /usr/bin/gimp [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" }, { \"cat\": \"graphics\", \"debpackage\": \"gimp\", \"icon\": \"gimp.svg\", \"keyword\": \"gimp,image,gif,tiff,png,jpeg,bmp,tga,pcx,bitmap,jpg,pixmap\", \"launch\": \"gimp.Gimp\", \"name\": \"Gimp\", \"path\": \"/usr/bin/gimp\", \"template\": \"abcdesktopio/oc.template.gtk\" } ] Add MimeType, FileExtensions and desktopfile entries abcdesktop support MimeType, File Extensions and Desktop Entry Specification entries from Gnome. \"mimetype\": \"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\", \"fileextensions\": \"dds\", \"legacyfileextensions\":\"dds\", \"desktopfile\":\"/usr/share/applications/gimp.desktop\" These entries allow user to use the file manager choice Open with and Open with Other Application and list Recommended Applications The Gimp Json data shows { \"cat\": \"graphics\", \"debpackage\": \"gimp\", \"icon\": \"gimp.svg\", \"keyword\": \"gimp,image,gif,tiff,png,jpeg,bmp,tga,pcx,bitmap,jpg,pixmap\", \"launch\": \"gimp.Gimp\", \"name\": \"Gimp\", \"path\": \"/usr/bin/gimp\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\", \"fileextensions\": \"dds\", \"legacyfileextensions\":\"dds\", \"desktopfile\":\"/usr/share/applications/gimp.desktop\" } Have a look to the complete applist.json file. abcdesktop applist.json contains description to build all default abcdesktop applications.","title":"Build your own abcdesktop GNU/Linux Image"},{"location":"buildapplicationsgnulinux/#build-your-own-application-image","text":"abcdesktop use docker image format with some labels to describe the application.","title":"Build your own application image"},{"location":"buildapplicationsgnulinux/#requirements","text":"A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host. The root password of the oc.user docker image. The default password is lmdpocpetit , but this value may have been changed.","title":"Requirements"},{"location":"buildapplicationsgnulinux/#build-your-own-application-image_1","text":"In this chapter we are going to build a new docker image for abcdesktop The new image is the game 2048. Create a directory named build , and create a directory icons inside build mkdir build mkdir build/icons cd build To build your own image create first a json file. Create a json file named applist.json , inside build directory, and add the content to the json file. [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" } ] To fill the data inside the json file : name Type Data cat string games debpackage string 2048-qt icon string 2048_logo.svg keyword string 2048 launch string 2048-qt.2048-qt name string 2048 path string /usr/games/2048-qt template string abcdesktopio/oc.template.gtk You can read the following help lines, or fill the json missing value by yourself. cat is the category, choose the most appropriate value in the list : [ 'office', 'games', 'graphics', 'development', 'utilities', 'education' ] debpackage is the name of the 2048 ubuntu package. To find the package name, look at the link 2048 Ubuntu Package . icon is the name of the icon. abcdesktop support only svg icon file format. To get the icon file, look at the link https://upload.wikimedia.org/wikipedia/commons/1/18/2048_logo.svg keyword is a list of the keywords to find the application. Set the value to 2048. launch is the X11 Class name of the window. To get this value, we need to run the application on GNU/Linux (read the dedicated chapter below). name is the name of the application. Set the value to 2048. path is the binary path to run the application. template is the name of the parent image. The default image parent is abcdesktopio/oc.template.gtk . You will learn how to customize your own template image, in next chapter. Save the 2048 icon file on SVG format to the icons directory. You should have this file in the icons directory as the output of the ls icons command : 2048_logo.svg","title":"Build your own application image"},{"location":"buildapplicationsgnulinux/#build-your-new-image-2048","text":"To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can not download this file. Save make.js it to you build directory. make.js is a nodejs JavaScript file. Node.js\u00ae is a JavaScript runtime built on Chrome's V8 JavaScript. If you don't have already nodejs installed on your system, go to the website nodejs download website and follow the instructions to install nodejs. In the build directory, you should have drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 . drwxr-xr-x+ 31 devuser staff 992 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 265 Mar 11 15:15 applist.json drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 img -rw-r--r-- 1 devuser staff 8036 Mar 11 15:12 make.js ./img: total 8 drwxr-xr-x 3 devuser staff 96 Mar 11 15:02 . drwxr-xr-x 5 devuser staff 160 Mar 11 15:15 .. -rw-r--r-- 1 devuser staff 1909 Oct 31 2015 2048_logo.svg Run the command make.js node make.js make.js build a new DockerFile for the 2048 application. Remember, all application images use container images. You should get the output { cat: 'games', debpackage: '2048-qt', icon: '2048_logo.svg', keyword: '2048', launch: '2048-qt.2048-qt', name: '2048', displayname: '2048', path: '/usr/games/2048-qt', template: 'abcdesktopio/oc.template.gtk' } Building 2048-qt.2048-qt { cat: 'games', debpackage: '2048-qt', icon: '2048_logo.svg', keyword: '2048', launch: '2048-qt.2048-qt', name: '2048', displayname: '2048', path: '/usr/games/2048-qt', template: 'abcdesktopio/oc.template.gtk' } Building documentation 2048-qt.2048-qt - '2048' : '2048.md' The new files 2048.d and 2048.md have been generated : 2048.d is the Dockerfile for your 2048 abcdesktop application 2048.md is the documentation file for your 2048 abcdesktop application Read the content of the Dockerfile 2048.d . List all labels, and confirm that the icon file is uuencoded format. Uuencoding is a form of binary-to-text encoding. Now it's time to build your 2048 app. Run the command docker build command. docker build --build-arg TAG=latest -f 2048.d -t 2048.d . You should read the output : [+] Building 32.0s (10/10) FINISHED => [internal] load build definition from 2048.d 0.0s => => transferring dockerfile: 33B 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:latest 1.4s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:latest@sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 0.4s => => resolve docker.io/abcdesktopio/oc.template.gtk:latest@sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 0.0s => => sha256:f3c98362fb80f5edde423b895422fc183e2728257de1d4352c4f70c7b43835fb 4.50kB / 4.50kB 0.0s => => sha256:f3c3f03bd0b5cda9f56703a4ba1b9d96d5ff2be3c03bee1831ce30dc98bb3b62 8.93kB / 8.93kB 0.0s => [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends 2048-qt && apt-get clean 27.5s => [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.5s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.5s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.4s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 1.1s => => exporting layers 1.1s => => writing image sha256:a861af06b7f0dfa19fcde19ee8848bfee65807f852b082d9314e68676966895a 0.0s => => naming to docker.io/library/2048.d Check that your image is ready on your system: Run the docker images command docker images You should read on the stdout more lines, only 2048.d is listed here : REPOSITORY TAG IMAGE ID CREATED SIZE 2048.d latest a861af06b7f0 About a minute ago 1.17GB The total image size of 2048.d is 1.17GB. The 2048.d does not use 1.17GB, but only the difference between the 2048 image and the source image abcdesktopio/oc.template.gtk .","title":"Build your new image 2048"},{"location":"buildapplicationsgnulinux/#update-the-cache-application-list","text":"The API server receives a new image event from docker. To run the new applications just refresh you web browser page.","title":"Update the cache application list"},{"location":"buildapplicationsgnulinux/#run-your-new-application","text":"Return to your abcdesktop website http://localhost and log in as Anonymous. At the right corner, write in the search bar the keyword 2048 Click on the 2048 icon, and start your first abcdesktop application : Great it's a good job, you have build your own abcdesktop 2048 application. Now you can spent a lot of time to reach the 2048 score. Have fun !","title":"Run your new application"},{"location":"buildapplicationsgnulinux/#get-launch-and-path-values","text":"To get the X11 class name of the 2048 game, we need to install it on a Linux host. You can use abcdesktop as a Linux host or choose your own. If you want to use abcdesktop as a GNU/Linux host Open the url http://localhost, in your web browser, to start a simple abcdesktop container. You will use this container to install the 2048 application and fill the missing values launch and path . http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right corner, write in the search bar the keyword shell Click on the Web Shell icon, a new Terminal WebShell is now opened : Run the command sudo apt-get update The default password is lmdpocpetit ( if your admin did not change it, otherwise ask to the administrator ) Run the installation command sudo apt-get install -y 2048-qt You should read the output, during the installation process On Ubuntu, the games are installed in a dedicated directory /usr/games . Read the file list of the 2048-qt Ubuntu package /usr/games/2048-qt /usr/share/applications/2048-qt.desktop /usr/share/doc/2048-qt/changelog.Debian.gz /usr/share/doc/2048-qt/copyright /usr/share/man/man6/2048-qt.6.gz /usr/share/menu/2048-qt /usr/share/pixmaps/2048-qt.xpm Start the 2048 game binary 2048-qt in background. /usr/games/2048-qt & The new 2048 window is opening in the background. You can minimise the shell window to play to the 2048 game, but this is not the goal of this chapter. To show the shell window again, click on the shell icon on the upper right corner . Run the command to list each X11 windows and get the WMClass name. wmctrl -lx wmctrl is a command that can be used to interact with an X Window manager, and can query the window manager for information, and it can request that certain window management actions be taken. -l list the windows being managed by the window manager. -x include WM_CLASS in the window list Great, look at the third value, this is what we are looking for : The launch is 2048-qt.2048-qt The path is /usr/games/2048-qt You can now close your web browser and fill your json file, by yourself","title":"Get launch and path values"},{"location":"buildapplicationsgnulinux/#gimp","text":"The applist.json is a array of application object. Add a new application object in the array, and fill the value for the new application. By yourself, you have to run this exercice again, for the Gimp application. Gimp is Gnu Image Manipulation Program . New applist.json data, and build your own Gimp abcdesktop.io application. [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" }, { \"cat\": \"\", \"debpackage\": \"\", \"icon\": \"\", \"keyword\": \"\", \"launch\": \"t\", \"name\": \"\", \"displayname\": \"\", \"path\": \"\", \"template\": \"\" } ] You should get data entries like: The GIMP icon SVG file is avalaible on wikipedia website The_GIMP_icon_-_gnome.svg The wmctrl show the WM_CLASS gimp.Gimp The path is /usr/bin/gimp [ { \"cat\": \"games\", \"debpackage\": \"2048-qt\", \"icon\": \"2048_logo.svg\", \"keyword\": \"2048\", \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"displayname\": \"2048\", \"path\": \"/usr/games/2048-qt\", \"template\": \"abcdesktopio/oc.template.gtk\" }, { \"cat\": \"graphics\", \"debpackage\": \"gimp\", \"icon\": \"gimp.svg\", \"keyword\": \"gimp,image,gif,tiff,png,jpeg,bmp,tga,pcx,bitmap,jpg,pixmap\", \"launch\": \"gimp.Gimp\", \"name\": \"Gimp\", \"path\": \"/usr/bin/gimp\", \"template\": \"abcdesktopio/oc.template.gtk\" } ]","title":"GIMP"},{"location":"buildapplicationsgnulinux/#add-mimetype-fileextensions-and-desktopfile-entries","text":"abcdesktop support MimeType, File Extensions and Desktop Entry Specification entries from Gnome. \"mimetype\": \"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\", \"fileextensions\": \"dds\", \"legacyfileextensions\":\"dds\", \"desktopfile\":\"/usr/share/applications/gimp.desktop\" These entries allow user to use the file manager choice Open with and Open with Other Application and list Recommended Applications The Gimp Json data shows { \"cat\": \"graphics\", \"debpackage\": \"gimp\", \"icon\": \"gimp.svg\", \"keyword\": \"gimp,image,gif,tiff,png,jpeg,bmp,tga,pcx,bitmap,jpg,pixmap\", \"launch\": \"gimp.Gimp\", \"name\": \"Gimp\", \"path\": \"/usr/bin/gimp\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\", \"fileextensions\": \"dds\", \"legacyfileextensions\":\"dds\", \"desktopfile\":\"/usr/share/applications/gimp.desktop\" } Have a look to the complete applist.json file. abcdesktop applist.json contains description to build all default abcdesktop applications.","title":"Add MimeType, FileExtensions and desktopfile entries"},{"location":"guiappsoddocker/","text":"GUI Application in docker Related Projets on VDI with docker abcdesktop, or YAVDI (Yet Another VDI docker projet) A lot of different projets already exists using docker containers as a VDI. abcdesktop is just another one. I just write list of projets, you can explore them : https://github.com/mviereck/x11docker x11docker allows to run graphical desktop applications (and entire desktops) in Docker Linux containers. https://www.digitalocean.com/community/tutorials/how-to-remotely-access-gui-applications-using-docker-and-caddy-on-ubuntu-18-04 By using noVNC and TigerVNC, you can run native applications inside a Docker container and access them remotely using a web browser. HW accelerated GUI apps on Docker Describe How to containerizing a GUI app. Really easy to understand, a good article. https://github.com/fcwu/docker-ubuntu-vnc-desktop docker-ubuntu-vnc-desktop is a Docker image to provide web VNC interface to access Ubuntu LXDE/LxQT desktop environment. Dockerize GUI app This project dockerize typical GUI app so that you can visit it in browser. Really good technical solutions. Docker and Wine Docker image that includes Wine and Winetricks for running Windows applications on Linux and macOS n.eko This app uses Web RTC to stream a desktop inside of a docker container (doesn't use VNC) X11 window system architecture In a *nix system a GUI application has the role of \u201cX client\u201d. Each time it redraws its content a sequence of graphics commands is encoded into the X protocol using a library (usually Xlib) and transmitted into the X11 socket. At the other end an X server reads such commands from the socket and renders them onto a display. [ source HW accelerated GUI apps on Docker ] Containerizing a GUI app Taking a look at the X window system architecture it\u2019s clear that in order to make our containerized GUI apps capable of drawing on a screen we need to give it write access to the X11 socket, and we need an X server to consume and render the graphics commands onto a display. We can approach this problem from three angles: All in one container we can bundle X11 server with our container image. All process run inside the same container. Separated container we can share the X11 server socket with the X11 client container as unix file socket on an external shared volume. Applications and X11 server run in dedicated containers. we can share the X11 server socket with the container using TCP. X11 uses TCP as its transport protocol. Applications and X11 server run in dedicated containers. abcdesktop choice To guarantee isolation, abcdesktop/io.io run X11 server and X11 client in separated container. X11 server and X11 client share the socket as unix file socket on a dedicated external shared volume. The unix file socket reduce the network tcp overhead. The unix file socket garantes no latency troubleshooting. X11 uses a chatty protocol so that the network latency has a large impact when using X11 Local is best , thus server and application need to run on the same node. HTML5 Web Browser as remote DISPLAY The Web Browser does not support X11 protocol. We need a graphical desktop system to paint the virtual DISPLAY in a <canvas> HTML element. Replace X11 Server from X.org, by a Xvnc. Xvnc is the X VNC (Virtual Network Computing) server. It is based on a standard X server, but it has a virtual screen rather than a physical one. X applications display themselves on it as if they were using a normal X display, but they can only be accessed via a VNC. So Xvnc is really two servers in one. To the applications it is an X server, and to the remote VNC users it is a VNC server. Convert VNC TCP socket in to a WebSocket The web browser does not support VNC (RFB Protocol) and the TCP socket natively. We need to translate TCP socket, into a WebSocket. This can be done using : websockify Websockify just translates WebSockets traffic to normal socket traffic. Websockify accepts the WebSockets handshake, parses it, and then begins forwarding traffic between the client and the target in both directions. ws-tcp-bridge A websocket to tcp proxy server, using nodejs which bridges websockets and tcp servers in either direction. Use a VNC Javascript client The web browser receives the RFB protocol in the WebSocket and then paints the data into a canvas. noVNC is VNC client JavaScript library. noVNC follows the standard VNC protocol, but unlike other VNC clients it requires WebSockets support.","title":"VDI on Docker, related projets"},{"location":"guiappsoddocker/#gui-application-in-docker","text":"","title":"GUI Application in docker"},{"location":"guiappsoddocker/#related-projets-on-vdi-with-docker","text":"abcdesktop, or YAVDI (Yet Another VDI docker projet) A lot of different projets already exists using docker containers as a VDI. abcdesktop is just another one. I just write list of projets, you can explore them : https://github.com/mviereck/x11docker x11docker allows to run graphical desktop applications (and entire desktops) in Docker Linux containers. https://www.digitalocean.com/community/tutorials/how-to-remotely-access-gui-applications-using-docker-and-caddy-on-ubuntu-18-04 By using noVNC and TigerVNC, you can run native applications inside a Docker container and access them remotely using a web browser. HW accelerated GUI apps on Docker Describe How to containerizing a GUI app. Really easy to understand, a good article. https://github.com/fcwu/docker-ubuntu-vnc-desktop docker-ubuntu-vnc-desktop is a Docker image to provide web VNC interface to access Ubuntu LXDE/LxQT desktop environment. Dockerize GUI app This project dockerize typical GUI app so that you can visit it in browser. Really good technical solutions. Docker and Wine Docker image that includes Wine and Winetricks for running Windows applications on Linux and macOS n.eko This app uses Web RTC to stream a desktop inside of a docker container (doesn't use VNC)","title":"Related Projets on VDI with docker"},{"location":"guiappsoddocker/#x11-window-system-architecture","text":"In a *nix system a GUI application has the role of \u201cX client\u201d. Each time it redraws its content a sequence of graphics commands is encoded into the X protocol using a library (usually Xlib) and transmitted into the X11 socket. At the other end an X server reads such commands from the socket and renders them onto a display. [ source HW accelerated GUI apps on Docker ]","title":"X11 window system architecture"},{"location":"guiappsoddocker/#containerizing-a-gui-app","text":"Taking a look at the X window system architecture it\u2019s clear that in order to make our containerized GUI apps capable of drawing on a screen we need to give it write access to the X11 socket, and we need an X server to consume and render the graphics commands onto a display. We can approach this problem from three angles:","title":"Containerizing a GUI app"},{"location":"guiappsoddocker/#all-in-one-container","text":"we can bundle X11 server with our container image. All process run inside the same container.","title":"All in one container"},{"location":"guiappsoddocker/#separated-container","text":"we can share the X11 server socket with the X11 client container as unix file socket on an external shared volume. Applications and X11 server run in dedicated containers. we can share the X11 server socket with the container using TCP. X11 uses TCP as its transport protocol. Applications and X11 server run in dedicated containers.","title":"Separated container"},{"location":"guiappsoddocker/#abcdesktop-choice","text":"To guarantee isolation, abcdesktop/io.io run X11 server and X11 client in separated container. X11 server and X11 client share the socket as unix file socket on a dedicated external shared volume. The unix file socket reduce the network tcp overhead. The unix file socket garantes no latency troubleshooting. X11 uses a chatty protocol so that the network latency has a large impact when using X11 Local is best , thus server and application need to run on the same node.","title":"abcdesktop choice"},{"location":"guiappsoddocker/#html5-web-browser-as-remote-display","text":"The Web Browser does not support X11 protocol. We need a graphical desktop system to paint the virtual DISPLAY in a <canvas> HTML element.","title":"HTML5 Web Browser as remote DISPLAY"},{"location":"guiappsoddocker/#replace-x11-server-from-xorg-by-a-xvnc","text":"Xvnc is the X VNC (Virtual Network Computing) server. It is based on a standard X server, but it has a virtual screen rather than a physical one. X applications display themselves on it as if they were using a normal X display, but they can only be accessed via a VNC. So Xvnc is really two servers in one. To the applications it is an X server, and to the remote VNC users it is a VNC server.","title":"Replace X11 Server from X.org, by a Xvnc."},{"location":"guiappsoddocker/#convert-vnc-tcp-socket-in-to-a-websocket","text":"The web browser does not support VNC (RFB Protocol) and the TCP socket natively. We need to translate TCP socket, into a WebSocket. This can be done using : websockify Websockify just translates WebSockets traffic to normal socket traffic. Websockify accepts the WebSockets handshake, parses it, and then begins forwarding traffic between the client and the target in both directions. ws-tcp-bridge A websocket to tcp proxy server, using nodejs which bridges websockets and tcp servers in either direction.","title":"Convert VNC TCP socket in to a WebSocket"},{"location":"guiappsoddocker/#use-a-vnc-javascript-client","text":"The web browser receives the RFB protocol in the WebSocket and then paints the data into a canvas. noVNC is VNC client JavaScript library. noVNC follows the standard VNC protocol, but unlike other VNC clients it requires WebSockets support.","title":"Use a VNC Javascript client"},{"location":"overview/","text":"abcdesktop overview abcdesktop is based on docker, from the service infrastructure to the user applications. At the login page, the user chooses a login provider and authenticates himself, then abcdesktop engine creates a graphical user container. abcdesktop services nginx : container act as static web server and reverse proxy router pyos : container abcdesktop core engine memcached : container cache service mongo : container database service to store user profil information abcdesktop User user : user container, one container per connected user applications : each graphical application runs inside a dedicated container. You need to create an docker image for each application","title":"Overview"},{"location":"overview/#abcdesktop-overview","text":"abcdesktop is based on docker, from the service infrastructure to the user applications. At the login page, the user chooses a login provider and authenticates himself, then abcdesktop engine creates a graphical user container.","title":"abcdesktop overview"},{"location":"overview/#abcdesktop-services","text":"nginx : container act as static web server and reverse proxy router pyos : container abcdesktop core engine memcached : container cache service mongo : container database service to store user profil information","title":"abcdesktop services"},{"location":"overview/#abcdesktop-user","text":"user : user container, one container per connected user applications : each graphical application runs inside a dedicated container. You need to create an docker image for each application","title":"abcdesktop User"},{"location":"rdgp/","text":"Privacy Notice: protecting your personal data The changes to the French and European regulation on the protection of personal data come into force on 25 May 2018. If you want to interact with abcdesktop via www.abcdesktop.io and other corporate sites, personal data will be collected about you in order to process your request and/or send you the desired information. In this case, abcdesktop is committed to the protection, confidentiality and security of personal data. This Privacy Notice provides information on how abcdesktop, and its potential subcontractors or partners, process your personal data in this context. This document may be supplemented by specific information in the case of a specific service where appropriate (e.g. shareholders club) or in a commercial context. If you are an abcdesktop customer, you will also find a dedicated personal data protection policy on the website demo.abcdesktop.io. Why does abcdesktop process your personal data collected on abcdesktop.io and on its corporate websites? On demo.abcdesktop.io, you can ask a question or receive specific abcdesktop information (for example a press release). abcdesktop processes the personal data collected via the contact forms in place for these purposes. Some websites may require additional information which is processed specifically to enable access to a private or dedicated space, such as shareholders club. We only process your personal data once we have your consent in the context of you request. Your data is only kept for the length of time needed to fulfil your request. This takes into account your unsubscription to certain newsletters or sending out press releases. What types of data are processed? abcdesktop may be required to process your personal data which we collect directly via the online form. It includes identity data, such as your name, surname, email address and sometimes your telephone number and postal address if necessary. Who can see your data? Data collected about you is intended for abcdesktop\u2019s internal services and if any, service providers. In the case of a legal procedure, processed data may also be communicated to the relevant authorities. Is your data processed outside the European Union? The data collected may be processed outside the European Union if deemed necessary and according to the nature of your request. In this case, abcdesktop will take all necessary steps to protect your data. What are your rights? You have the right to withdraw your consent and stop any future use of your data. You can exercise your right to obtain information and access to the data, to rectify them in case of inaccurate data related to you and to delete the data when conditions are fulfilled. How can you contact the Data Protection Officer? If you wish to exercise your rights over your data, you can write to the following address along with proof of identity: Orange Sa Attention: Data Protection Officer (DPO) 78 rue Olivier de Serres 75505 Paris Cedex 15 Possibility to make a request to the Data protection authority, the CNIL in France: If your interaction with abcdesktop is not satisfactory, you can also lodge a complaint with the Commission Nationale de l\u2019Informatique et des Libert\u00e9s (CNIL), which is the regulatory authority in charge of personal data protection in France. How is your data secured? Orange ensures your data remains secure and confidential, including certain processing carried out by subprocessor. For this purpose, the appropriate technical and organisational measures are in place to prevent the loss, misuse, alteration and deletion of your personal data. These measures are adapted according to the level of sensitivity of this processed data and the level of risk that the processing or implementation of it presents. Modification of the personal data protection notice This Privacy Notice is subject to change.","title":"Rdgp"},{"location":"requirements/","text":"Requirements Prerequisites for setup abcdesktop Architecture x86-64 ( arm-64 is not yet available) 15 GB of free space to store sample applications ( gimp, libreoffice writer, libreoffice calc, libreoffice math, libreoffice impress, firefox ) and core image services Release 1.0 docker instance (version 18 and above). abcdesktop.io 1.0 need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 ( if you use kubernetes release 1.24 or above, you must use abcdesktop.io release 3.0 ) Release 2.0 docker instance (version 18 and above). abcdesktop.io 2.0 need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 ( if you use kubernetes release 1.24 or above, you must use abcdesktop.io release 3.0 ) an application runs as docker container or as kubernetes pod Release 3.0 Kubernetes release greater or equal to 1.24 No depend to docker, an application runs as pod or as an ephermeral container Supported Architectures Our images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest GNU/Linux The recommended distrubution is Ubuntu 20.04 LTS (Focal Fossa) MacOS/X Docker For Mac embeds a hypervisor (based on xhyve ), a Linux distribution which runs on LinuxKit and filesystem & network sharing that is much more Mac native. Docker For Mac is a Mac native application in /Applications. At installation time, it creates symlinks in /usr/local/bin for docker and docker-compose, to the commands in the application bundle, in /Applications/Docker.app/Contents/Resources/bin. To install dockerd on MacOS/X, use Docker for Desktop. Get Docker for MacOS on the docker website docker-for-mac To get a shell to the LinuxKit docker-desktop , run the docker command docker run -it --rm --privileged --pid=host justincormack/nsenter1 more info: https://github.com/justincormack/nsenter1 Microsoft Windows When you install Docker Desktop on Windows, it requires and automatically enables Hyper-V, a hypervisor from Microsoft. Hyper-V replaces your Windows OS as the host on the computer, and your Windows OS becomes a virtual machine. System Requirements Windows 10 64-bit: Pro, Enterprise, or Education (Build 15063 or later). Hyper-V and Containers Windows features must be enabled. 64 bit processor with Second Level Address Translation (SLAT) 4GB system RAM BIOS-level hardware virtualization support must be enabled in the BIOS settings. To install dockerd on Microsoft windows, use Docker for Desktop. Get Docker for Windows on the docker website docker-for-windows You need to configure your Docker Desktop on Windows to use Linux containers . abcdesktop.io does NOT support Windows container . You can switch the Docker Desktop on Windows to use Linux containers, using the docker window tray icon. Switch to Linux containers","title":"Requirements"},{"location":"requirements/#requirements","text":"","title":"Requirements"},{"location":"requirements/#prerequisites-for-setup-abcdesktop","text":"Architecture x86-64 ( arm-64 is not yet available) 15 GB of free space to store sample applications ( gimp, libreoffice writer, libreoffice calc, libreoffice math, libreoffice impress, firefox ) and core image services","title":"Prerequisites for setup abcdesktop"},{"location":"requirements/#release-10","text":"docker instance (version 18 and above). abcdesktop.io 1.0 need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 ( if you use kubernetes release 1.24 or above, you must use abcdesktop.io release 3.0 )","title":"Release 1.0"},{"location":"requirements/#release-20","text":"docker instance (version 18 and above). abcdesktop.io 2.0 need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 ( if you use kubernetes release 1.24 or above, you must use abcdesktop.io release 3.0 ) an application runs as docker container or as kubernetes pod","title":"Release 2.0"},{"location":"requirements/#release-30","text":"Kubernetes release greater or equal to 1.24 No depend to docker, an application runs as pod or as an ephermeral container","title":"Release 3.0"},{"location":"requirements/#supported-architectures","text":"Our images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest","title":"Supported Architectures"},{"location":"requirements/#gnulinux","text":"The recommended distrubution is Ubuntu 20.04 LTS (Focal Fossa)","title":"GNU/Linux"},{"location":"requirements/#macosx","text":"Docker For Mac embeds a hypervisor (based on xhyve ), a Linux distribution which runs on LinuxKit and filesystem & network sharing that is much more Mac native. Docker For Mac is a Mac native application in /Applications. At installation time, it creates symlinks in /usr/local/bin for docker and docker-compose, to the commands in the application bundle, in /Applications/Docker.app/Contents/Resources/bin. To install dockerd on MacOS/X, use Docker for Desktop. Get Docker for MacOS on the docker website docker-for-mac To get a shell to the LinuxKit docker-desktop , run the docker command docker run -it --rm --privileged --pid=host justincormack/nsenter1 more info: https://github.com/justincormack/nsenter1","title":"MacOS/X"},{"location":"requirements/#microsoft-windows","text":"When you install Docker Desktop on Windows, it requires and automatically enables Hyper-V, a hypervisor from Microsoft. Hyper-V replaces your Windows OS as the host on the computer, and your Windows OS becomes a virtual machine.","title":"Microsoft Windows"},{"location":"requirements/#system-requirements","text":"Windows 10 64-bit: Pro, Enterprise, or Education (Build 15063 or later). Hyper-V and Containers Windows features must be enabled. 64 bit processor with Second Level Address Translation (SLAT) 4GB system RAM BIOS-level hardware virtualization support must be enabled in the BIOS settings. To install dockerd on Microsoft windows, use Docker for Desktop. Get Docker for Windows on the docker website docker-for-windows You need to configure your Docker Desktop on Windows to use Linux containers . abcdesktop.io does NOT support Windows container . You can switch the Docker Desktop on Windows to use Linux containers, using the docker window tray icon. Switch to Linux containers","title":"System Requirements"},{"location":"runapplications.wine/","text":"Run docker image for Windows using Wine Requirements Read the previous chapter Build abcdesktop docker image Read the Chapter Authentification explicit for LDAP Directory Services is recommended but not mandatory. WineHQ Wine (originally an acronym for \"Wine Is Not an Emulator\") is a compatibility layer capable of running Windows applications on several POSIX-compliant operating systems, such as Linux, macOS, & BSD. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows API calls into POSIX calls on-the-fly, eliminating the performance and memory penalties of other methods and allowing you to cleanly integrate Windows applications into your desktop. To run Windows applications abcdesktop.io use WineHQ. A dedicated image template source is ready to use as source of others Windows applications. This image template is named abcdesktopio/oc.template.gtk.wine.50 Start pulling this template image : docker pull abcdesktopio/oc.template.gtk.wine Look at the Dockerfile to build the abcdesktopio/oc.template.gtk.wine on the https://hub.docker.com/ web site. For a better support, we are using the 32 bits library, as i386 libs on GNU/Linux. Your can read in the Dockerfile, how the abcdesktopio/oc.template.gtk.wine is created. Dockerfile information : dpkg --add-architecture i386 aptitude install -y wine Run notepad.exe for Windows in a Docker container In this chapter we are going to run notepad.exe for Windows inside a docker container for abcdesktop.io. Start an abcdesktop session. You can use an authenticated session using an authentication provider external or explicit , or you can do this exercice using Anonymous Authentification also know as the authentication provider implicit . In this chapter we choose an Anonymous, DO NOT CLOSE YOUR WEB BROWSER , you should not be able de reconnect with the same user context, and have to restart this exercice at the begining, else you can choose to configure abcdesktop with ldap authentification. Login using the Anonymous authentification provider. Keep your web browser open, then on your host, open a terminal shell window and run the command docker ps --filter ancestor=abcdesktopio/oc.user.18.04 The option --filter ancestor=abcdesktopio/oc.user.18.04 ask to filter only container with the image ancestor set with value abcdesktopio/oc.user.18.04 You should read the container with the image named abcdesktopio/oc.user.18.04 docker ps --filter ancestor=abcdesktopio/oc.user.18.04 CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 86df3ff126ac abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 3 minutes ago Up 3 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp g-5f4300d2-7c8e-43c6-89ab-f85bd8b68138 Read the values CONTAINER ID and NAMES In this example, the CONTAINER ID is 86df3ff126ac and the NAME is g-5f4300d2-7c8e-43c6-89ab-f85bd8b68138 . We are using the /tmp volume of this CONTAINER ID 86df3ff126ac Using an anonymous authnetification, the name of your container id is an UUID , for example 57be1e5b-0b14-4c05-ae79-75e9a03c77be . The name of the tmp volume is tmp-57be1e5b-0b14-4c05-ae79-75e9a03c77be Run a docker inspect -f \"{{ .HostConfig.Binds }}\" and add your CONTAINER ID as parameter. docker inspect -f \"{{ .HostConfig.Binds }}\" CONTAINER_ID For example docker inspect -f \"{{ .HostConfig.Binds }}\" 86df3ff126ac You should read the volume name starting by tmp- with your uuid concatened [tmp-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/tmp home-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/home/balloon] Note: if your are using an LDAP authentification, the name of your container id is the username, for example hermes . The name of the tmp volume is tmp-hermes Now, start a new docker container with the same HostConfig.Bings as your oc.user container. The -v parameter is the first entry of the result in the previous command docker inspect -f \"{{ .HostConfig.Binds }}\" docker run -it -v TMP_VOLUMENAME:/tmp --user balloon abcdesktopio/oc.template.gtk.wine bash For example with an Anonymous user: docker run -it -v tmp-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/tmp --user balloon abcdesktopio/oc.template.gtk.wine bash Great, you have started a new docker container. The oc.user containter and your new container are sharing the same volume mounted as /tmp . You get a prompt inside the new docker container. To run a command as administrator (user \"root\"), use \"sudo <command>\". See \"man sudo_root\" for details. balloon@8684ae888f74:~$ And now start the notepad.exe with wine balloon@8684ae888f74:/$ wine notepad After few seconds you should read on the standard error balloon@8684ae888f74:/$ wine notepad 0015:err:clipboard:convert_selection Timed out waiting for SelectionNotify event 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0014:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0014:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0014:err:ole:get_local_server_stream Failed: 80004002 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0012:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0012:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0012:err:ole:get_local_server_stream Failed: 80004002 Could not find Wine Gecko. HTML rendering will be disabled. wine: configuration in L\"/composer/.wine\" has been updated. And the notepad window should be open inside your Web browser This Windows application is running inside a docker container on abcdesktop.io desktop. In the Terminal shell press CTRL+C to stop the wine notepad process, then type exit to quit your shell in container. ^C0032:fixme:console:CONSOLE_DefaultHandler Terminating process 8 on event 0 balloon@4c4d806557dc:~$ exit exit It's time to build your own abcdesktop application image. Read the next chapter Build abcdesktop.io docker image for Windows using Wine .","title":"Runapplications.wine"},{"location":"runapplications.wine/#run-docker-image-for-windows-using-wine","text":"","title":"Run docker image for Windows using Wine"},{"location":"runapplications.wine/#requirements","text":"Read the previous chapter Build abcdesktop docker image Read the Chapter Authentification explicit for LDAP Directory Services is recommended but not mandatory.","title":"Requirements"},{"location":"runapplications.wine/#winehq","text":"Wine (originally an acronym for \"Wine Is Not an Emulator\") is a compatibility layer capable of running Windows applications on several POSIX-compliant operating systems, such as Linux, macOS, & BSD. Instead of simulating internal Windows logic like a virtual machine or emulator, Wine translates Windows API calls into POSIX calls on-the-fly, eliminating the performance and memory penalties of other methods and allowing you to cleanly integrate Windows applications into your desktop. To run Windows applications abcdesktop.io use WineHQ. A dedicated image template source is ready to use as source of others Windows applications. This image template is named abcdesktopio/oc.template.gtk.wine.50 Start pulling this template image : docker pull abcdesktopio/oc.template.gtk.wine Look at the Dockerfile to build the abcdesktopio/oc.template.gtk.wine on the https://hub.docker.com/ web site. For a better support, we are using the 32 bits library, as i386 libs on GNU/Linux. Your can read in the Dockerfile, how the abcdesktopio/oc.template.gtk.wine is created. Dockerfile information : dpkg --add-architecture i386 aptitude install -y wine","title":"WineHQ"},{"location":"runapplications.wine/#run-notepadexe-for-windows-in-a-docker-container","text":"In this chapter we are going to run notepad.exe for Windows inside a docker container for abcdesktop.io. Start an abcdesktop session. You can use an authenticated session using an authentication provider external or explicit , or you can do this exercice using Anonymous Authentification also know as the authentication provider implicit . In this chapter we choose an Anonymous, DO NOT CLOSE YOUR WEB BROWSER , you should not be able de reconnect with the same user context, and have to restart this exercice at the begining, else you can choose to configure abcdesktop with ldap authentification. Login using the Anonymous authentification provider. Keep your web browser open, then on your host, open a terminal shell window and run the command docker ps --filter ancestor=abcdesktopio/oc.user.18.04 The option --filter ancestor=abcdesktopio/oc.user.18.04 ask to filter only container with the image ancestor set with value abcdesktopio/oc.user.18.04 You should read the container with the image named abcdesktopio/oc.user.18.04 docker ps --filter ancestor=abcdesktopio/oc.user.18.04 CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 86df3ff126ac abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 3 minutes ago Up 3 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp g-5f4300d2-7c8e-43c6-89ab-f85bd8b68138 Read the values CONTAINER ID and NAMES In this example, the CONTAINER ID is 86df3ff126ac and the NAME is g-5f4300d2-7c8e-43c6-89ab-f85bd8b68138 . We are using the /tmp volume of this CONTAINER ID 86df3ff126ac Using an anonymous authnetification, the name of your container id is an UUID , for example 57be1e5b-0b14-4c05-ae79-75e9a03c77be . The name of the tmp volume is tmp-57be1e5b-0b14-4c05-ae79-75e9a03c77be Run a docker inspect -f \"{{ .HostConfig.Binds }}\" and add your CONTAINER ID as parameter. docker inspect -f \"{{ .HostConfig.Binds }}\" CONTAINER_ID For example docker inspect -f \"{{ .HostConfig.Binds }}\" 86df3ff126ac You should read the volume name starting by tmp- with your uuid concatened [tmp-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/tmp home-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/home/balloon] Note: if your are using an LDAP authentification, the name of your container id is the username, for example hermes . The name of the tmp volume is tmp-hermes Now, start a new docker container with the same HostConfig.Bings as your oc.user container. The -v parameter is the first entry of the result in the previous command docker inspect -f \"{{ .HostConfig.Binds }}\" docker run -it -v TMP_VOLUMENAME:/tmp --user balloon abcdesktopio/oc.template.gtk.wine bash For example with an Anonymous user: docker run -it -v tmp-5f4300d2-7c8e-43c6-89ab-f85bd8b68138:/tmp --user balloon abcdesktopio/oc.template.gtk.wine bash Great, you have started a new docker container. The oc.user containter and your new container are sharing the same volume mounted as /tmp . You get a prompt inside the new docker container. To run a command as administrator (user \"root\"), use \"sudo <command>\". See \"man sudo_root\" for details. balloon@8684ae888f74:~$ And now start the notepad.exe with wine balloon@8684ae888f74:/$ wine notepad After few seconds you should read on the standard error balloon@8684ae888f74:/$ wine notepad 0015:err:clipboard:convert_selection Timed out waiting for SelectionNotify event 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0014:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0014:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0014:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0014:err:ole:get_local_server_stream Failed: 80004002 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {00000131-0000-0000-c000-000000000046} 0012:err:ole:marshal_object couldn't get IPSFactory buffer for interface {6d5140c1-7436-11ce-8034-00aa006009fa} 0012:err:ole:StdMarshalImpl_MarshalInterface Failed to create ifstub, hres=0x80004002 0012:err:ole:CoMarshalInterface Failed to marshal the interface {6d5140c1-7436-11ce-8034-00aa006009fa}, 80004002 0012:err:ole:get_local_server_stream Failed: 80004002 Could not find Wine Gecko. HTML rendering will be disabled. wine: configuration in L\"/composer/.wine\" has been updated. And the notepad window should be open inside your Web browser This Windows application is running inside a docker container on abcdesktop.io desktop. In the Terminal shell press CTRL+C to stop the wine notepad process, then type exit to quit your shell in container. ^C0032:fixme:console:CONSOLE_DefaultHandler Terminating process 8 on event 0 balloon@4c4d806557dc:~$ exit exit It's time to build your own abcdesktop application image. Read the next chapter Build abcdesktop.io docker image for Windows using Wine .","title":"Run notepad.exe for Windows in a Docker container"},{"location":"1.0/features/","text":"abcdesktop release 1.0 The abcdesktop release 1.0 has started in May 2015 docker instance version 18 and above. abcdesktop 1.0 (pyos) need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 (if you use kubernetes release 1.24 or above, you must use abcdesktop release 3.0) abcdesktop release 1.0 is deprecated","title":"Notes and Features"},{"location":"1.0/features/#abcdesktop-release-10","text":"The abcdesktop release 1.0 has started in May 2015 docker instance version 18 and above. abcdesktop 1.0 (pyos) need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 (if you use kubernetes release 1.24 or above, you must use abcdesktop release 3.0) abcdesktop release 1.0 is deprecated","title":"abcdesktop release 1.0"},{"location":"1.0/config/authentification-rules/","text":"Authentification rules configuration All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to ) The rule object A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } The conditions object conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value. Examples: Example (TRUE and TRUE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True Example (TRUE and TRUE) expected FALSE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False Example (TRUE and FALSE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True Example (FALSE and TRUE) expected TRUE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True The condition value name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513' condition boolean This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' } condition httpheader This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' } condition network This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' } IPv4 and IPv6 subnets support To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } } condition memberof This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' } condition primarygroupid This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"rules"},{"location":"1.0/config/authentification-rules/#authentification-rules-configuration","text":"All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to )","title":"Authentification rules configuration"},{"location":"1.0/config/authentification-rules/#the-rule-object","text":"A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' }","title":"The rule object"},{"location":"1.0/config/authentification-rules/#the-conditions-object","text":"conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value.","title":"The conditions object"},{"location":"1.0/config/authentification-rules/#examples","text":"","title":"Examples:"},{"location":"1.0/config/authentification-rules/#example-true-and-true-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and TRUE) expected TRUE:"},{"location":"1.0/config/authentification-rules/#example-true-and-true-expected-false","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False","title":"Example (TRUE and TRUE) expected FALSE:"},{"location":"1.0/config/authentification-rules/#example-true-and-false-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and FALSE) expected TRUE:"},{"location":"1.0/config/authentification-rules/#example-false-and-true-expected-true","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True","title":"Example (FALSE and TRUE) expected TRUE:"},{"location":"1.0/config/authentification-rules/#the-condition-value","text":"name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513'","title":"The condition value"},{"location":"1.0/config/authentification-rules/#condition-boolean","text":"This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' }","title":"condition boolean"},{"location":"1.0/config/authentification-rules/#condition-httpheader","text":"This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' }","title":"condition httpheader"},{"location":"1.0/config/authentification-rules/#condition-network","text":"This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' }","title":"condition network"},{"location":"1.0/config/authentification-rules/#ipv4-and-ipv6-subnets-support","text":"To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } }","title":"IPv4 and IPv6 subnets support"},{"location":"1.0/config/authentification-rules/#condition-memberof","text":"This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' }","title":"condition memberof"},{"location":"1.0/config/authentification-rules/#condition-primarygroupid","text":"This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"condition primarygroupid"},{"location":"1.0/config/authentification/","text":"Authentification Configuration file The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for docker, or edit the abcdesktop.yaml file for kubernetes cluster. The dictionary authmanagers The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines 3 kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification implicit : use for Anonymous Authentification Related authmanagers authmanagers type Description external OAuth 2.0 Authentification explicit LDAP, LDAPS and Active Directory Authentification implicit Anonymous Authentification Hands-on Requirements You should have read the hands-on : Edit your configuration file in docker mode Change authmanagers configuration Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to ake sure that the od.py the your new od.config file. docker-compose restart Start your web browser and open the URL http://localhost The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users. authmanagers implicit : implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers implicit Section. authmanagers explicit : explicit is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers explicit Section. authmanagers external : external is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers external Section. Authmanagers configuration sample In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionnary as described for example : authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.1.12', '192.168.1.13' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True }}","title":"config"},{"location":"1.0/config/authentification/#authentification","text":"","title":"Authentification"},{"location":"1.0/config/authentification/#configuration-file","text":"The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for docker, or edit the abcdesktop.yaml file for kubernetes cluster.","title":"Configuration file"},{"location":"1.0/config/authentification/#the-dictionary-authmanagers","text":"The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines 3 kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification implicit : use for Anonymous Authentification","title":"The dictionary authmanagers"},{"location":"1.0/config/authentification/#related-authmanagers","text":"authmanagers type Description external OAuth 2.0 Authentification explicit LDAP, LDAPS and Active Directory Authentification implicit Anonymous Authentification","title":"Related authmanagers"},{"location":"1.0/config/authentification/#hands-on","text":"","title":"Hands-on"},{"location":"1.0/config/authentification/#requirements","text":"You should have read the hands-on : Edit your configuration file in docker mode","title":"Requirements"},{"location":"1.0/config/authentification/#change-authmanagers-configuration","text":"Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to ake sure that the od.py the your new od.config file. docker-compose restart Start your web browser and open the URL http://localhost The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users.","title":"Change authmanagers configuration"},{"location":"1.0/config/authentification/#authmanagers-implicit","text":"implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers implicit Section.","title":"authmanagers implicit:"},{"location":"1.0/config/authentification/#authmanagers-explicit","text":"explicit is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers explicit Section.","title":"authmanagers explicit:"},{"location":"1.0/config/authentification/#authmanagers-external","text":"external is the easyest configuration mode, and is used as 'Anonymous' authentification. Read the authmanagers external Section.","title":"authmanagers external:"},{"location":"1.0/config/authentification/#authmanagers-configuration-sample","text":"In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionnary as described for example : authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.1.12', '192.168.1.13' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True }}","title":"Authmanagers configuration sample"},{"location":"1.0/config/authexplicit-activedirectory/","text":"Authentification explicit for Microsoft Active Directory services authmanagers explicit object The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL Service Account The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com) Site This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location'] Printers This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Active Directory"},{"location":"1.0/config/authexplicit-activedirectory/#authentification-explicit-for-microsoft-active-directory-services","text":"","title":"Authentification explicit for Microsoft Active Directory services"},{"location":"1.0/config/authexplicit-activedirectory/#authmanagers-explicit-object","text":"The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"1.0/config/authexplicit-activedirectory/#providers-configuration","text":"The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL","title":"providers configuration"},{"location":"1.0/config/authexplicit-activedirectory/#service-account","text":"The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com)","title":"Service Account"},{"location":"1.0/config/authexplicit-activedirectory/#site","text":"This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location']","title":"Site"},{"location":"1.0/config/authexplicit-activedirectory/#printers","text":"This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Printers"},{"location":"1.0/config/authexplicit-ldap/","text":"Authentification explicit for LDAP Directory Services authmanagers explicit object explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string not used by ldap, only used by Active Directory providers dictionnary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set with the same value in providers configuration and config_ref . Providers : The provider is formated as a dictionnary { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The ldapconfig is a dictionnary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.8.195' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} } ldap configuration reference Variable name Type Description Example default boolean Use this domain as default domain True ldap_protocol string protocol type. ldap or ldaps for LDAP directory services ldap tls_require_cert boolean The default value is False. tls_require_cert apply only if ldap_protocol is set to ldaps . Allow LDAPS connection if the ldaps server hostname does not match CommonName peer certificate. In production, set this value to True This will disable the ldap option call : ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER) False basedn string LDAP Base Distinguished Names ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. [ '192.168.1.12', '192.168.1.13' ] IP Address or FQDN values scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos auth credentials. the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) Hands-on : Configure Auth using an OpenLDAP for Docker Requirements You should have all read and done the hands-on : Setup abcdesktop.io in docker mode Edit your configuration file in docker mode OpenLDAP Docker Image for testing To configure abcdesktop.io to use an explicit authentification, we need a directory service. We use an OpenLDAP Docker Image for testing with provioned values. Read the OpenLDAP Docker Image for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing Update the docker-compose.yml file Update the docker-compose.yml file to add an ldap as directory server The specific openldap section is describe as a service. The new complete docker-compose.yml file is now : version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /Users/alexandredevely/src/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback openldap: image: abcdesktopio/oc.openldap networks: - netback networks: netuser: driver: bridge netback: internal: true Update the od.config configuration file Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionnary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} Note: the server name is the name of the service entry Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to make sure that the od.py the your new od.config file. docker-compose restart Open the URL: http://localhost The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. The LDAP structure of OpenLDAP Docker Image for testing BaseDN The basedn is dc=planetexpress,dc=com admin account The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone OU Users The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com Users cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes cn=Turanga Leela,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela Groups cn=admin_staff,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com cn=ship_crew,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com Insert the user credentials Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela : Applications remainted Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"LDAP"},{"location":"1.0/config/authexplicit-ldap/#authentification-explicit-for-ldap-directory-services","text":"","title":"Authentification explicit for LDAP Directory Services"},{"location":"1.0/config/authexplicit-ldap/#authmanagers-explicit-object","text":"explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string not used by ldap, only used by Active Directory providers dictionnary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"1.0/config/authexplicit-ldap/#providers-configuration","text":"The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set with the same value in providers configuration and config_ref . Providers : The provider is formated as a dictionnary { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The ldapconfig is a dictionnary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.8.195' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} }","title":"providers configuration"},{"location":"1.0/config/authexplicit-ldap/#ldap-configuration-reference","text":"Variable name Type Description Example default boolean Use this domain as default domain True ldap_protocol string protocol type. ldap or ldaps for LDAP directory services ldap tls_require_cert boolean The default value is False. tls_require_cert apply only if ldap_protocol is set to ldaps . Allow LDAPS connection if the ldaps server hostname does not match CommonName peer certificate. In production, set this value to True This will disable the ldap option call : ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER) False basedn string LDAP Base Distinguished Names ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. [ '192.168.1.12', '192.168.1.13' ] IP Address or FQDN values scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos auth credentials. the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s))","title":"ldap configuration reference"},{"location":"1.0/config/authexplicit-ldap/#hands-on-configure-auth-using-an-openldap-for-docker","text":"","title":"Hands-on : Configure Auth using  an OpenLDAP for Docker"},{"location":"1.0/config/authexplicit-ldap/#requirements","text":"You should have all read and done the hands-on : Setup abcdesktop.io in docker mode Edit your configuration file in docker mode","title":"Requirements"},{"location":"1.0/config/authexplicit-ldap/#openldap-docker-image-for-testing","text":"To configure abcdesktop.io to use an explicit authentification, we need a directory service. We use an OpenLDAP Docker Image for testing with provioned values. Read the OpenLDAP Docker Image for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing","title":"OpenLDAP Docker Image for testing"},{"location":"1.0/config/authexplicit-ldap/#update-the-docker-composeyml-file","text":"Update the docker-compose.yml file to add an ldap as directory server The specific openldap section is describe as a service. The new complete docker-compose.yml file is now : version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /Users/alexandredevely/src/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback openldap: image: abcdesktopio/oc.openldap networks: - netback networks: netuser: driver: bridge netback: internal: true","title":"Update the docker-compose.yml file"},{"location":"1.0/config/authexplicit-ldap/#update-the-odconfig-configuration-file","text":"Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionnary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} Note: the server name is the name of the service entry Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to make sure that the od.py the your new od.config file. docker-compose restart Open the URL: http://localhost The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Update the od.config configuration file"},{"location":"1.0/config/authexplicit-ldap/#the-ldap-structure-of-openldap-docker-image-for-testing","text":"","title":"The LDAP structure of OpenLDAP Docker Image for testing"},{"location":"1.0/config/authexplicit-ldap/#basedn","text":"The basedn is dc=planetexpress,dc=com","title":"BaseDN"},{"location":"1.0/config/authexplicit-ldap/#admin-account","text":"The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone","title":"admin account"},{"location":"1.0/config/authexplicit-ldap/#ou-users","text":"The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com","title":"OU Users"},{"location":"1.0/config/authexplicit-ldap/#users","text":"","title":"Users"},{"location":"1.0/config/authexplicit-ldap/#cnhubert-j-farnsworthoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor","title":"cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#cnphilip-j-fryoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry","title":"cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#cnjohn-a-zoidbergoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg","title":"cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#cnhermes-conradoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes","title":"cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#cnturanga-leelaoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela","title":"cn=Turanga Leela,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#groups","text":"","title":"Groups"},{"location":"1.0/config/authexplicit-ldap/#cnadmin_staffoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com","title":"cn=admin_staff,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#cnship_crewoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com","title":"cn=ship_crew,ou=people,dc=planetexpress,dc=com"},{"location":"1.0/config/authexplicit-ldap/#insert-the-user-credentials","text":"Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela :","title":"Insert the user credentials"},{"location":"1.0/config/authexplicit-ldap/#applications-remainted","text":"Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"Applications remainted"},{"location":"1.0/config/authexplicit/","text":"Authentification explicit authmanagers explicit : explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. The explicit authentification support the directory services ldap , ldaps , and Microsoft Active Directory . Configuration sample for Microsoft Active Directory For example : 'explicit': { 'show_domains': True, 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } Home page authentification If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. LDAP authmanagers : Read the specific chapter on LDAP LDAP and LDAPS explicit authmanagers Microsoft Active Directory authmanagers : Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Directory services"},{"location":"1.0/config/authexplicit/#authentification-explicit","text":"","title":"Authentification explicit"},{"location":"1.0/config/authexplicit/#authmanagers-explicit","text":"explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. The explicit authentification support the directory services ldap , ldaps , and Microsoft Active Directory . Configuration sample for Microsoft Active Directory For example : 'explicit': { 'show_domains': True, 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } }","title":"authmanagers explicit:"},{"location":"1.0/config/authexplicit/#home-page-authentification","text":"If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Home page authentification"},{"location":"1.0/config/authexplicit/#ldap-authmanagers","text":"Read the specific chapter on LDAP LDAP and LDAPS explicit authmanagers","title":"LDAP authmanagers :"},{"location":"1.0/config/authexplicit/#microsoft-active-directory-authmanagers","text":"Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Microsoft Active Directory authmanagers :"},{"location":"1.0/config/authexternal/","text":"Authentification external Requirements To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https. Library abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients. authmanagers external : external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring . Orange OAuth 2.0 Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation. Orange Application Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', } Facebook OAuth 2.0 Facebook's OAuth is supported for authentication. Facebook Application Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } Google OAuth 2.0 Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret. Google Application Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"external"},{"location":"1.0/config/authexternal/#authentification-external","text":"","title":"Authentification external"},{"location":"1.0/config/authexternal/#requirements","text":"To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https.","title":"Requirements"},{"location":"1.0/config/authexternal/#library","text":"abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients.","title":"Library"},{"location":"1.0/config/authexternal/#authmanagers-external","text":"external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring .","title":"authmanagers external:"},{"location":"1.0/config/authexternal/#orange-oauth-20","text":"Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation.","title":"Orange OAuth 2.0"},{"location":"1.0/config/authexternal/#orange-application","text":"Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', }","title":"Orange Application"},{"location":"1.0/config/authexternal/#facebook-oauth-20","text":"Facebook's OAuth is supported for authentication.","title":"Facebook OAuth 2.0"},{"location":"1.0/config/authexternal/#facebook-application","text":"Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' }","title":"Facebook Application"},{"location":"1.0/config/authexternal/#google-oauth-20","text":"Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret.","title":"Google OAuth 2.0"},{"location":"1.0/config/authexternal/#google-application","text":"Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"Google Application"},{"location":"1.0/config/authimplicit/","text":"Authentification implicit authmanagers implicit : implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionnary object and contains an anononymous provider. anononymous provider always permit authentification, and create a uuid as userid. anononymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anononymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionnary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Press the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command docker ps -a docker ps -a Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When the anonymous container is removed, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"implicit"},{"location":"1.0/config/authimplicit/#authentification-implicit","text":"","title":"Authentification implicit"},{"location":"1.0/config/authimplicit/#authmanagers-implicit","text":"implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionnary object and contains an anononymous provider. anononymous provider always permit authentification, and create a uuid as userid. anononymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anononymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionnary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Press the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command docker ps -a docker ps -a Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When the anonymous container is removed, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"authmanagers implicit:"},{"location":"1.0/config/balloon/","text":"balloon user entry in od.config balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"1.0/config/balloon/#balloon-user-entry-in-odconfig","text":"balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"1.0/config/controllers/","text":"Controllers Controllers abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information Access Permission The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Overview"},{"location":"1.0/config/controllers/#controllers","text":"","title":"Controllers"},{"location":"1.0/config/controllers/#controllers_1","text":"abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information","title":"Controllers"},{"location":"1.0/config/controllers/#access-permission","text":"The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Access Permission"},{"location":"1.0/config/desktop/","text":"desktop options in od.config The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode . desktop.options All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.usex11unixsocket boolean True desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'volume' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.allowPrivilegeEscalation boolean False desktop.securityopt list [ 'no-new-privileges', 'seccomp=unconfined' ] desktop.imagePullSecret string None desktop.image string 'abcdesktopio/oc.user.18.04:latest' desktop.imageprinter string 'abcdesktopio/oc.cupsd.18.04:latest' desktop.useprintercontainer boolean False desktop.soundimage string 'abcdesktopio/oc.pulseaudio.18.04' desktop.usesoundcontainer boolean False desktop.usecontainerimage boolean False desktop.initcontainerimage string 'abcdesktopio/oc.busybox' desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' } desktop.usex11unixsocket The desktop.usex11unixsocket force the X11 server to use local unix socket. The name of the X11 unix socket is /tmp/.X11-unix/X0 If this feature is enable : A container application need a the DISPLAY. The DISPLAY is in this case :0.0 . The container application and the oc.user container share the same volume /tmp , and share the X11 unix socket is /tmp/.X11-unix/X0 . If this feature is disable : A container application need a DISPLAY. The DISPLAY is :0.0 (don't think at IPADDRESS_OF_X11_SERVER:0.0 to protect X11 access control). The two containers share the same network stack by default. The X11 server NEED to listen to a TCP or UDP port. You can disable this features, but you have to replace the default TigerVNC by another X11 Server and a VNC Server. You can choose (x.org + x11vnc) for example, but you need more CPU ressource than TigerVNC. TigerVNC does not support to listen on TCP Port. TigerVNC is a X11 and a VNC Server. Set the desktop.usex11unixsocket value to True in most case, and this should not be changed. desktop.shareipcnamespace The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system\u2019s IPC namespace. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access \"container: \". Default value desktop.shareipcnamespace : 'shareable' desktop.homedirectory This option describes how the default home directory for user user ballon should be created : None : no dedicated volume is created, the oc.user container use a directory inside the container. All user data will be removed at logout. 'volume' : This value is only recommended in docker mode. 'volume' option create a dedicated volume, the oc.user container and applications may share this volume. User home data are persistent. 'persistentVolumeClaim' : This value is only avalaible in kubernetes. PersistentVolumeClaim option use a persistentVolumeClaim to create the user home directory. The persistentVolumeClaim can be mapped to differents storage data (like NFS, iSCSI, RBD...). Read more about persistentVolumeClaim on the kubernetes.io website. You need the set the value of desktop.persistentvolumeclaim or create a default Persistent Volume Claim named 'abcdesktop-pvc' desktop.persistentvolumeclaim This value is only avalaible in kubernetes mode. desktop.persistentvolumeclaim is the name of the Persistent Volume Claim if the desktop.homedirectory is set to 'persistentVolumeClaim' . The PVC (Persistent Volume Claim) must exist. Run the kubectl get pvc command to list the persistent volume claim NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE abcdesktop-pvc Bound abcdesktop-pv 5Gi RWO abcdesktop-standard 170d desktop.remotehomedirectorytype desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory . desktop.allowPrivilegeEscalation The desktop.allowPrivilegeEscalation option allow a user to run a sudo command. The execve system call can grant a newly-started program privileges that its parent did not have, such as the setuid or setgid Linux flags. The default value is False You should only set desktop.allowPrivilegeEscalation to run sudo command. In production this value MUST be set to False desktop.defaultbackgroundcolors The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example : desktop.imagePullSecret The desktop.imagePullSecret is the name of the secret used by Kubernetes to access to the private registry. The type of desktop.imagePullSecret is a string. This option is only available in Kubernetes mode, and anly used if you need to store the abcdesktop docker image on a private registry. Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU desktop.image The desktop.image is the name of the X11 server container The default value is abcdesktopio/oc.user.18.04 desktop.printerimage The desktop.printerimage is the name of the printer container The default value is abcdesktopio.oc.cupds.18.04 desktop.useprintercontainer The desktop.useprintercontainer is boolean, to use printer cupsd service as an separated container. This value is only available in kubernetes mode. The default value is False . desktop.soundimage The desktop.soundimage is the name of the sound container image The default value is abcdesktopio/oc.pulseaudio.18.04 desktop.usesoundcontainer The desktop.usesoundcontainer is boolean, to use pulseaudio service as a separated container. This value is only available in kubernetes mode. The default value is False . desktop.useinitcontainer The desktop.useinitcontainer is boolean, to use init container. The default value is False . The code call the desktop.initcontainercommand list . The initcontainerimage is a busybox shell, for example to make sure that the home directory belongs to user balloon . /home/balloon must belong to balloon default user and balloon default group. desktop.initcontainercommand The desktop.initcontainercommand runs the command at init container. The default value is None , the default type is list . desktop.initcontainercommand example : desktop.initcontainercommand : [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] This option is used when presistent volume data mount a nfs storage. The uid and gid of /home/balloon must be set to the default value of (balloon:balloon) (4096:4096) . desktop.initcontainerimage The desktop.initcontainerimage is the name of the init container image. The default value is busybox . desktop.envlocal desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'WINEARCH': 'win32', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon', 'PULSE_SERVER: '/tmp/.pulse.sock', 'CUPS_SERVER': '/tmp/.cups.sock' } Add 'CUPS_SERVER: '/tmp/.cups.sock' only if desktop.useprintercontainer is True. Add 'PULSE_SERVER: '/tmp/.pulse.sock' only if desktop.usesoundcontainer is True. desktop.nodeselector desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' } desktop.username desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userid desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.groupid desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userhomedirectory desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.uselocaltime The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime . desktop.policies The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 } desktop.application_config Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations desktop.host_config Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations desktop.webhookdict desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects. Experimental features desktop.desktopuseinternalfqdn WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"Desktop"},{"location":"1.0/config/desktop/#desktop-options-in-odconfig","text":"The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode .","title":"desktop options in od.config"},{"location":"1.0/config/desktop/#desktopoptions","text":"All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.usex11unixsocket boolean True desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'volume' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.allowPrivilegeEscalation boolean False desktop.securityopt list [ 'no-new-privileges', 'seccomp=unconfined' ] desktop.imagePullSecret string None desktop.image string 'abcdesktopio/oc.user.18.04:latest' desktop.imageprinter string 'abcdesktopio/oc.cupsd.18.04:latest' desktop.useprintercontainer boolean False desktop.soundimage string 'abcdesktopio/oc.pulseaudio.18.04' desktop.usesoundcontainer boolean False desktop.usecontainerimage boolean False desktop.initcontainerimage string 'abcdesktopio/oc.busybox' desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' }","title":"desktop.options"},{"location":"1.0/config/desktop/#desktopusex11unixsocket","text":"The desktop.usex11unixsocket force the X11 server to use local unix socket. The name of the X11 unix socket is /tmp/.X11-unix/X0 If this feature is enable : A container application need a the DISPLAY. The DISPLAY is in this case :0.0 . The container application and the oc.user container share the same volume /tmp , and share the X11 unix socket is /tmp/.X11-unix/X0 . If this feature is disable : A container application need a DISPLAY. The DISPLAY is :0.0 (don't think at IPADDRESS_OF_X11_SERVER:0.0 to protect X11 access control). The two containers share the same network stack by default. The X11 server NEED to listen to a TCP or UDP port. You can disable this features, but you have to replace the default TigerVNC by another X11 Server and a VNC Server. You can choose (x.org + x11vnc) for example, but you need more CPU ressource than TigerVNC. TigerVNC does not support to listen on TCP Port. TigerVNC is a X11 and a VNC Server. Set the desktop.usex11unixsocket value to True in most case, and this should not be changed.","title":"desktop.usex11unixsocket"},{"location":"1.0/config/desktop/#desktopshareipcnamespace","text":"The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system\u2019s IPC namespace. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access \"container: \". Default value desktop.shareipcnamespace : 'shareable'","title":"desktop.shareipcnamespace"},{"location":"1.0/config/desktop/#desktophomedirectory","text":"This option describes how the default home directory for user user ballon should be created : None : no dedicated volume is created, the oc.user container use a directory inside the container. All user data will be removed at logout. 'volume' : This value is only recommended in docker mode. 'volume' option create a dedicated volume, the oc.user container and applications may share this volume. User home data are persistent. 'persistentVolumeClaim' : This value is only avalaible in kubernetes. PersistentVolumeClaim option use a persistentVolumeClaim to create the user home directory. The persistentVolumeClaim can be mapped to differents storage data (like NFS, iSCSI, RBD...). Read more about persistentVolumeClaim on the kubernetes.io website. You need the set the value of desktop.persistentvolumeclaim or create a default Persistent Volume Claim named 'abcdesktop-pvc'","title":"desktop.homedirectory"},{"location":"1.0/config/desktop/#desktoppersistentvolumeclaim","text":"This value is only avalaible in kubernetes mode. desktop.persistentvolumeclaim is the name of the Persistent Volume Claim if the desktop.homedirectory is set to 'persistentVolumeClaim' . The PVC (Persistent Volume Claim) must exist. Run the kubectl get pvc command to list the persistent volume claim NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE abcdesktop-pvc Bound abcdesktop-pv 5Gi RWO abcdesktop-standard 170d","title":"desktop.persistentvolumeclaim"},{"location":"1.0/config/desktop/#desktopremotehomedirectorytype","text":"desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory .","title":"desktop.remotehomedirectorytype"},{"location":"1.0/config/desktop/#desktopallowprivilegeescalation","text":"The desktop.allowPrivilegeEscalation option allow a user to run a sudo command. The execve system call can grant a newly-started program privileges that its parent did not have, such as the setuid or setgid Linux flags. The default value is False You should only set desktop.allowPrivilegeEscalation to run sudo command. In production this value MUST be set to False","title":"desktop.allowPrivilegeEscalation"},{"location":"1.0/config/desktop/#desktopdefaultbackgroundcolors","text":"The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example :","title":"desktop.defaultbackgroundcolors"},{"location":"1.0/config/desktop/#desktopimagepullsecret","text":"The desktop.imagePullSecret is the name of the secret used by Kubernetes to access to the private registry. The type of desktop.imagePullSecret is a string. This option is only available in Kubernetes mode, and anly used if you need to store the abcdesktop docker image on a private registry. Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU","title":"desktop.imagePullSecret"},{"location":"1.0/config/desktop/#desktopimage","text":"The desktop.image is the name of the X11 server container The default value is abcdesktopio/oc.user.18.04","title":"desktop.image"},{"location":"1.0/config/desktop/#desktopprinterimage","text":"The desktop.printerimage is the name of the printer container The default value is abcdesktopio.oc.cupds.18.04","title":"desktop.printerimage"},{"location":"1.0/config/desktop/#desktopuseprintercontainer","text":"The desktop.useprintercontainer is boolean, to use printer cupsd service as an separated container. This value is only available in kubernetes mode. The default value is False .","title":"desktop.useprintercontainer"},{"location":"1.0/config/desktop/#desktopsoundimage","text":"The desktop.soundimage is the name of the sound container image The default value is abcdesktopio/oc.pulseaudio.18.04","title":"desktop.soundimage"},{"location":"1.0/config/desktop/#desktopusesoundcontainer","text":"The desktop.usesoundcontainer is boolean, to use pulseaudio service as a separated container. This value is only available in kubernetes mode. The default value is False .","title":"desktop.usesoundcontainer"},{"location":"1.0/config/desktop/#desktopuseinitcontainer","text":"The desktop.useinitcontainer is boolean, to use init container. The default value is False . The code call the desktop.initcontainercommand list . The initcontainerimage is a busybox shell, for example to make sure that the home directory belongs to user balloon . /home/balloon must belong to balloon default user and balloon default group.","title":"desktop.useinitcontainer"},{"location":"1.0/config/desktop/#desktopinitcontainercommand","text":"The desktop.initcontainercommand runs the command at init container. The default value is None , the default type is list . desktop.initcontainercommand example : desktop.initcontainercommand : [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] This option is used when presistent volume data mount a nfs storage. The uid and gid of /home/balloon must be set to the default value of (balloon:balloon) (4096:4096) .","title":"desktop.initcontainercommand"},{"location":"1.0/config/desktop/#desktopinitcontainerimage","text":"The desktop.initcontainerimage is the name of the init container image. The default value is busybox .","title":"desktop.initcontainerimage"},{"location":"1.0/config/desktop/#desktopenvlocal","text":"desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'WINEARCH': 'win32', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon', 'PULSE_SERVER: '/tmp/.pulse.sock', 'CUPS_SERVER': '/tmp/.cups.sock' } Add 'CUPS_SERVER: '/tmp/.cups.sock' only if desktop.useprintercontainer is True. Add 'PULSE_SERVER: '/tmp/.pulse.sock' only if desktop.usesoundcontainer is True.","title":"desktop.envlocal"},{"location":"1.0/config/desktop/#desktopnodeselector","text":"desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' }","title":"desktop.nodeselector"},{"location":"1.0/config/desktop/#desktopusername","text":"desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.username"},{"location":"1.0/config/desktop/#desktopuserid","text":"desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userid"},{"location":"1.0/config/desktop/#desktopgroupid","text":"desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.groupid"},{"location":"1.0/config/desktop/#desktopuserhomedirectory","text":"desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userhomedirectory"},{"location":"1.0/config/desktop/#desktopuselocaltime","text":"The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime .","title":"desktop.uselocaltime"},{"location":"1.0/config/desktop/#desktoppolicies","text":"The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 }","title":"desktop.policies"},{"location":"1.0/config/desktop/#desktopapplication_config","text":"Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations","title":"desktop.application_config"},{"location":"1.0/config/desktop/#desktophost_config","text":"Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations","title":"desktop.host_config"},{"location":"1.0/config/desktop/#desktopwebhookdict","text":"desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects.","title":"desktop.webhookdict"},{"location":"1.0/config/desktop/#experimental-features","text":"","title":"Experimental features"},{"location":"1.0/config/desktop/#desktopdesktopuseinternalfqdn","text":"WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"desktop.desktopuseinternalfqdn"},{"location":"1.0/config/editconfig/","text":"Edit pyos core service configuration file Update the Pyos core service configuration file depends, if your are running abcdesktop.io on native Docker (Non-Cluster Host) or in Kubernetes mode. In Kubenetes Mode: Read the setup guide, to make change in the abcdesktop yaml file. Setup and configuration guide for kubernetes abcdesktop In Docker Mode : Read the following chapter This chapter 'Edit Pyos configuration file', apply only for native Docker (Non-Cluster Host) , read the dedicated chapter if you are running abcdesktop.io with a kubernetes cluster. Edit Pyos code service configuration file in docker mode Requirements A running dockerd last version An access to the docker public registry The docker-compose command ready to run Download sample configuration file Create a directotry named abcdesktop in your home directory. cd mkdir -p abcdesktop To edit you configuration file in abcdesktop.io docker mode, download the sample configuration file and save it as od.config where docker-compose.yml file is located. Download sample configuration file od.config then rename the od.config.reference file as od.config Stop your docker-compose docker-compose down You should read on the standart output Removing open_nginx_1 ... done Removing open_pyos_1 ... done Removing open_memcached_1 ... done Removing open_speedtest_1 ... done Removing open_mongodb_1 ... done Network netuser is external, skipping Network netback is external, skipping Edit your docker-compose.yml Edit your docker-compose.yml to add a volumes entry to pyos services Example : My working directory is /home/alex/abcdesktop Add the new entry in volumes volumes: - /home/alex/abcdesktop/od.config:/var/pyos/od.config For example, the docker-compose.yml contains version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /home/alex/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback networks: netuser: driver: bridge netback: internal: true Edit your configuration file Now, it's time to make a change in your od.config file. Download the od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local oc.config file. Run your docker-compose To restart your docker-compose, run the command docker-compose up When the od.config change, od.py reload this configuration file automatically. You should read at the standard ouput of docker-compose Starting abcdesktop_speedtest_1 ... done Starting abcdesktop_mongodb_1 ... done Starting abcdesktop_memcached_1 ... done Starting abcdesktop_openldap_1 ... done Starting abcdesktop_pyos_1 ... done Starting abcdesktop_nginx_1 ... done [ lines cut here ] Check that the new colors are painted in front : Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colors and you should have it as background color : Great, you can easily update your configuration file od.config. We will make some changes during the next exercices.","title":"Edit your configuration file"},{"location":"1.0/config/editconfig/#edit-pyos-core-service-configuration-file","text":"Update the Pyos core service configuration file depends, if your are running abcdesktop.io on native Docker (Non-Cluster Host) or in Kubernetes mode. In Kubenetes Mode: Read the setup guide, to make change in the abcdesktop yaml file. Setup and configuration guide for kubernetes abcdesktop In Docker Mode : Read the following chapter This chapter 'Edit Pyos configuration file', apply only for native Docker (Non-Cluster Host) , read the dedicated chapter if you are running abcdesktop.io with a kubernetes cluster.","title":"Edit pyos core service configuration file"},{"location":"1.0/config/editconfig/#edit-pyos-code-service-configuration-file-in-docker-mode","text":"","title":"Edit Pyos code service configuration file in docker mode"},{"location":"1.0/config/editconfig/#requirements","text":"A running dockerd last version An access to the docker public registry The docker-compose command ready to run","title":"Requirements"},{"location":"1.0/config/editconfig/#download-sample-configuration-file","text":"Create a directotry named abcdesktop in your home directory. cd mkdir -p abcdesktop To edit you configuration file in abcdesktop.io docker mode, download the sample configuration file and save it as od.config where docker-compose.yml file is located. Download sample configuration file od.config then rename the od.config.reference file as od.config","title":"Download sample configuration file"},{"location":"1.0/config/editconfig/#stop-your-docker-compose","text":"docker-compose down You should read on the standart output Removing open_nginx_1 ... done Removing open_pyos_1 ... done Removing open_memcached_1 ... done Removing open_speedtest_1 ... done Removing open_mongodb_1 ... done Network netuser is external, skipping Network netback is external, skipping","title":"Stop your docker-compose"},{"location":"1.0/config/editconfig/#edit-your-docker-composeyml","text":"Edit your docker-compose.yml to add a volumes entry to pyos services Example : My working directory is /home/alex/abcdesktop Add the new entry in volumes volumes: - /home/alex/abcdesktop/od.config:/var/pyos/od.config For example, the docker-compose.yml contains version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /home/alex/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback networks: netuser: driver: bridge netback: internal: true","title":"Edit your docker-compose.yml"},{"location":"1.0/config/editconfig/#edit-your-configuration-file","text":"Now, it's time to make a change in your od.config file. Download the od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local oc.config file. Run your docker-compose To restart your docker-compose, run the command docker-compose up When the od.config change, od.py reload this configuration file automatically. You should read at the standard ouput of docker-compose Starting abcdesktop_speedtest_1 ... done Starting abcdesktop_mongodb_1 ... done Starting abcdesktop_memcached_1 ... done Starting abcdesktop_openldap_1 ... done Starting abcdesktop_pyos_1 ... done Starting abcdesktop_nginx_1 ... done [ lines cut here ]","title":"Edit your configuration file"},{"location":"1.0/config/editconfig/#check-that-the-new-colors-are-painted-in-front","text":"Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colors and you should have it as background color : Great, you can easily update your configuration file od.config. We will make some changes during the next exercices.","title":"Check that the new colors are painted in front :"},{"location":"1.0/config/frontjs/","text":"dock configuration in od.config Menu Setting The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True } default dock config The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } } Additional applications This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Front"},{"location":"1.0/config/frontjs/#dock-configuration-in-odconfig","text":"","title":"dock configuration in od.config"},{"location":"1.0/config/frontjs/#menu-setting","text":"The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True }","title":"Menu Setting"},{"location":"1.0/config/frontjs/#default-dock-config","text":"The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } }","title":"default dock config"},{"location":"1.0/config/frontjs/#additional-applications","text":"This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Additional applications"},{"location":"1.0/config/host_config/","text":"host_config resource description host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" } host_config entries Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings. Main host_config entries descriptions auto_remove The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True cpu_period cpu_quota cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling. privileged The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False. ipc_mode The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers. security_opt The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website. capabilities cap_add cap_drop This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"host_config resource description"},{"location":"1.0/config/host_config/#host_config-resource-description","text":"host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" }","title":"host_config resource description"},{"location":"1.0/config/host_config/#host_config-entries","text":"Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings.","title":"host_config entries"},{"location":"1.0/config/host_config/#main-host_config-entries-descriptions","text":"","title":"Main host_config entries descriptions"},{"location":"1.0/config/host_config/#auto_remove","text":"The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True","title":"auto_remove"},{"location":"1.0/config/host_config/#cpu_period-cpu_quota","text":"cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling.","title":"cpu_period  cpu_quota"},{"location":"1.0/config/host_config/#privileged","text":"The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False.","title":"privileged"},{"location":"1.0/config/host_config/#ipc_mode","text":"The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers.","title":"ipc_mode"},{"location":"1.0/config/host_config/#security_opt","text":"The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website.","title":"security_opt"},{"location":"1.0/config/host_config/#capabilities-cap_add-cap_drop","text":"This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"capabilities cap_add cap_drop"},{"location":"1.0/config/jira/","text":"JIRA configuration abcdesktop.io support JIRA JIRA option In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"Jira"},{"location":"1.0/config/jira/#jira-configuration","text":"abcdesktop.io support JIRA","title":"JIRA configuration"},{"location":"1.0/config/jira/#jira-option","text":"In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"JIRA option"},{"location":"1.0/config/language/","text":"Language entry in od.config The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US Language in abcdesktop.io oc.user The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header. Language in abcdesktop.io Applications abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session. Set the web browser's default language to en_US : The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language. Set the web browser's default language to fr_FR : You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Languages"},{"location":"1.0/config/language/#language-entry-in-odconfig","text":"The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US","title":"Language entry in od.config"},{"location":"1.0/config/language/#language-in-abcdesktopio-ocuser","text":"The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header.","title":"Language in abcdesktop.io oc.user"},{"location":"1.0/config/language/#language-in-abcdesktopio-applications","text":"abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session.","title":"Language in abcdesktop.io Applications"},{"location":"1.0/config/language/#set-the-web-browsers-default-language-to-en_us","text":"The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language.","title":"Set the web browser's default language to en_US :"},{"location":"1.0/config/language/#set-the-web-browsers-default-language-to-fr_fr","text":"You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Set the web browser's default language to fr_FR :"},{"location":"1.0/config/linux_syslog_config/","text":"Modify /etc/rsyslog.conf By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\") Restart rsyslog Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Linux syslog config"},{"location":"1.0/config/linux_syslog_config/#modify-etcrsyslogconf","text":"By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\")","title":"Modify /etc/rsyslog.conf"},{"location":"1.0/config/linux_syslog_config/#restart-rsyslog","text":"Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Restart rsyslog"},{"location":"1.0/config/logging/","text":"Logging configuration in od.config The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging"},{"location":"1.0/config/logging/#logging-configuration-in-odconfig","text":"The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging configuration in od.config"},{"location":"1.0/config/stack/","text":"stack entry in od.config stack.mode stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services stack.kubernetesdefaultdomain stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"Stack mode"},{"location":"1.0/config/stack/#stack-entry-in-odconfig","text":"","title":"stack entry in od.config"},{"location":"1.0/config/stack/#stackmode","text":"stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services","title":"stack.mode"},{"location":"1.0/config/stack/#stackkubernetesdefaultdomain","text":"stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"stack.kubernetesdefaultdomain"},{"location":"1.0/config/sudo-kubernetes/","text":"How to get a root access inside a container running kubernetes abcdesktop ? run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"Get a root access inside a container"},{"location":"1.0/config/sudo-kubernetes/#how-to-get-a-root-access-inside-a-container-running-kubernetes-abcdesktop","text":"run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"How to get a root access inside a container running kubernetes abcdesktop ?"},{"location":"1.0/config/syslog/","text":"Syslog configuration in od.config Add syslog server support 'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication. Start syslog container Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0' Modify logging entry To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file) Add Syslog Handler In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1 Add loggers handlers entries In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } Resulting Modified sample configuration file # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } } Restart Pods To restart Pods, we will delete and recreate all pods Delete pods To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml Create pods To create pods, execute the following command: kubectl create -f abcdesktop.yaml Verify syslogs At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Syslog"},{"location":"1.0/config/syslog/#syslog-configuration-in-odconfig","text":"","title":"Syslog configuration in od.config"},{"location":"1.0/config/syslog/#add-syslog-server-support","text":"'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication.","title":"Add syslog server support"},{"location":"1.0/config/syslog/#start-syslog-container","text":"Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0'","title":"Start syslog container"},{"location":"1.0/config/syslog/#modify-logging-entry","text":"To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file)","title":"Modify logging entry"},{"location":"1.0/config/syslog/#add-syslog-handler","text":"In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1","title":"Add Syslog Handler"},{"location":"1.0/config/syslog/#add-loggers-handlers-entries","text":"In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False }","title":"Add loggers handlers entries"},{"location":"1.0/config/syslog/#resulting-modified-sample-configuration-file","text":"# # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } }","title":"Resulting Modified sample configuration file"},{"location":"1.0/config/syslog/#restart-pods","text":"To restart Pods, we will delete and recreate all pods","title":"Restart Pods"},{"location":"1.0/config/syslog/#delete-pods","text":"To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml","title":"Delete pods"},{"location":"1.0/config/syslog/#create-pods","text":"To create pods, execute the following command: kubectl create -f abcdesktop.yaml","title":"Create pods"},{"location":"1.0/config/syslog/#verify-syslogs","text":"At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Verify syslogs"},{"location":"1.0/config/webrtc/","text":"Sound server configuration By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser pulseaudio http stream (by default) By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink webrtc gateway enable To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats Requirements a janus server add webrtc configuration in od.config file Install a janus server Install janus Install a janus service from meetecho.com on a server apt-get install janus Add X509 certificats Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" } add the webrtc entry in od.config Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } } webrtc.enable webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio . webrtc.server webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"Pulseaudio"},{"location":"1.0/config/webrtc/#sound-server-configuration","text":"By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser","title":"Sound server configuration"},{"location":"1.0/config/webrtc/#pulseaudio-http-stream-by-default","text":"By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink","title":"pulseaudio http stream (by default)"},{"location":"1.0/config/webrtc/#webrtc-gateway-enable","text":"To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats","title":"webrtc gateway enable"},{"location":"1.0/config/webrtc/#requirements","text":"a janus server add webrtc configuration in od.config file","title":"Requirements"},{"location":"1.0/config/webrtc/#install-a-janus-server","text":"","title":"Install a janus server"},{"location":"1.0/config/webrtc/#install-janus","text":"Install a janus service from meetecho.com on a server apt-get install janus","title":"Install janus"},{"location":"1.0/config/webrtc/#add-x509-certificats","text":"Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" }","title":"Add X509 certificats"},{"location":"1.0/config/webrtc/#add-the-webrtc-entry-in-odconfig","text":"Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"add the webrtc entry in od.config"},{"location":"1.0/config/webrtc/#webrtcenable","text":"webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio .","title":"webrtc.enable"},{"location":"1.0/config/webrtc/#webrtcserver","text":"webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"webrtc.server"},{"location":"1.0/config/controllers/manager/","text":"ManagerController HTTP Request The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object buildapplist buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}} updateactivedirectorysite Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite garbagecollector Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"Manager"},{"location":"1.0/config/controllers/manager/#managercontroller","text":"","title":"ManagerController"},{"location":"1.0/config/controllers/manager/#http-request","text":"The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object","title":"HTTP Request"},{"location":"1.0/config/controllers/manager/#buildapplist","text":"buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}}","title":"buildapplist"},{"location":"1.0/config/controllers/manager/#updateactivedirectorysite","text":"Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite","title":"updateactivedirectorysite"},{"location":"1.0/config/controllers/manager/#garbagecollector","text":"Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"garbagecollector"},{"location":"1.0/setup/dockermode/","text":"Install abcdesktop.io for non-cluster hosts abcdesktop.io support non-cluster hosts and kubernetes cluster hosts. In this section we will study how abcdesktop.io works in non-cluster hosts with only one dockerd installed. The abcdesktop.io for non-cluster hosts is recommended for personal use, all containers are hosted on the same host. In all configuration, the abcdesktop.io infrastructure uses six containers, each container has a specific role : Container Role Image Repository oc.user User container abcdesktopio/oc.user.18.04 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos abcdesktopio oc.nginx Web Service (http proxy and http server) abcdesktopio/oc.nginx abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest from LibreSpeed updated abcdesktopio oc.mongo json database server mongodb MongoDB memcached cache server memcached Memcached This page contains hands-on to learn step by step how to use docker-compose with abcdesktop.io. Requirements for Non-cluster hosts docker-compose The command docker-compose is used in this hands-on, to run each containers together. On desktop systems like Docker Desktop for Mac and Windows, Docker Compose is included as part of those desktop installs. On Linux systems, first install the Docker for your OS as described on the Get Docker page , then come back here for instructions on installing Compose on Linux systems. Quick installation (Linux or macOS) Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' You can watch the youtube video sample . This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS): curl -L https://raw.githubusercontent.com/abcdesktopio/conf/main/docker/install.sh | sh - The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: download user's core images: oc.user download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. download the docker-compose.yml YAML file run docker-compose -p abcdesktop up Manually installation step by step (Linux, macOS or Windows) The following commands will let you install an abcdesktop plateform on your single server. All applications run on the single server. Pull user container image The user container is named abcdesktopio/oc.user.18.04 . The size of the abcdesktopio/oc.user.18.04 image is up to 2 GB. Download the user container image, using the docker pull commmand : docker pull abcdesktopio/oc.user.18.04 docker-compose Create a docker-compose.yml file, and copy & paste this YAML file into. version: '3' services: pyos: depends_on: - memcached - mongodb image: abcdesktopio/oc.pyos:${TAG:-1.0} networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock speedtest: image: abcdesktopio/oc.speedtest:${TAG:-1.0} networks: - netuser nginx: depends_on: - memcached - pyos image: abcdesktopio/oc.nginx:${TAG:-1.0} ports: - 80:80 - 443:443 networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: abcdesktopio/oc.mongo:4.4.14 networks: - netback networks: netuser: driver: bridge netback: internal: true Run the docker-compose up command with projet name option set to abcdesktop value. The projet name abcdesktop is used by pyos to reference the network set by default to abcdesktop_netuser You must set the projet name to abcdesktop , else the websocket connection will failed docker-compose -p abcdesktop up Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container dockerd downloads all container images, it could take a while Pulling speedtest (abcdesktopio/oc.speedtest:)... latest: Pulling from oc.speedtest .... Status: Downloaded newer image for abcdesktopio/oc.speedtest:latest Pulling memcached (memcached:)... latest: Pulling from library/memcached .... Status: Downloaded newer image for memcached:latest Pulling mongodb (mongo:4.4)... latest: Pulling from library/mongo:4.4 .... Status: Downloaded newer image for mongo:latest Pulling pyos (abcdesktopio/oc.pyos:)... latest: Pulling from oc.pyos .... Status: Downloaded newer image for abcdesktopio/oc.pyos:latest Pulling nginx (abcdesktopio/oc.nginx:)... latest: Pulling from oc.nginx .... Status: Downloaded newer image for abcdesktopio/oc.nginx:latest You should read the output to the standard output docker-compose -p abcdesktop up Starting abcdesktop_memcached_1 ... done Starting abcdesktop_mongodb_1 ... done Starting abcdesktop_speedtest_1 ... done Starting abcdesktop_pyos_1 ... done Starting abcdesktop_nginx_1 ... done Attaching to abcdesktop_speedtest_1, abcdesktop_mongodb_1, abcdesktop_memcached_1, abcdesktop_pyos_1, abcdesktop_nginx_1 mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.087+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":23285, \"ctx\":\"main\",\"msg\":\"Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'\"} nginx_1 | Kubernetes is not detected nginx_1 | Using default config file pyos_1 | Kubernetes is not detected pyos_1 | Using default config file mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.093+00:00\"},\"s\":\"W\", \"c\":\"ASIO\", \"id\":22601, \"ctx\":\"main\",\"msg\":\"No TransportLayer configured during NetworkInterface startup\"} speedtest_1 | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.20.0.2. Set the 'ServerName' directive globally to suppress this message pyos_1 | total 24 pyos_1 | drwxr-xr-x 2 root root 4096 Sep 19 17:44 . pyos_1 | drwxr-xr-x 1 root root 4096 Oct 2 12:43 .. pyos_1 | -rw-r--r-- 1 root root 1679 May 14 17:54 abcdesktop_jwt_desktop_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 452 May 14 17:54 abcdesktop_jwt_desktop_signing_public_key.pem pyos_1 | -rw-r--r-- 1 root root 891 May 15 09:59 abcdesktop_jwt_user_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 272 May 15 09:59 abcdesktop_jwt_user_signing_public_key.pem speedtest_1 | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.20.0.2. Set the 'ServerName' directive globally to suppress this message mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.093+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":4648601, \"ctx\":\"main\",\"msg\":\"Implicit TCP FastOpen unavailable. If TCP FastOpen is required, set tcpFastOpenServer, tcpFastOpenClient, and tcpFastOpenQueueSize.\"} pyos_1 | total 24 pyos_1 | drwxr-xr-x 2 root root 4096 Sep 19 17:44 . pyos_1 | drwxr-xr-x 1 root root 4096 Oct 2 12:43 .. pyos_1 | -rw-r--r-- 1 root root 1679 May 14 17:54 abcdesktop_jwt_desktop_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 452 May 14 17:54 abcdesktop_jwt_desktop_signing_public_key.pem pyos_1 | -rw-r--r-- 1 root root 891 May 15 09:59 abcdesktop_jwt_user_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 272 May 15 09:59 abcdesktop_jwt_user_signing_public_key.pem pyos_1 | starting od.py speedtest_1 | [Fri Oct 02 12:54:15.121521 2020] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.25 (Debian) PHP/5.6.36 configured -- resuming normal operations speedtest_1 | [Fri Oct 02 12:54:15.121740 2020] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND' mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":4615611, \"ctx\":\"initandlisten\",\"msg\":\"MongoDB starting\",\"attr\":{\"pid\":1,\"port\":27017,\"dbPath\":\"/data/db\",\"architecture\":\"64-bit\",\"host\":\"a466db429025\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":23403, \"ctx\":\"initandlisten\",\"msg\":\"Build Info\",\"attr\":{\"buildInfo\":{\"version\":\"4.4.1\",\"gitVersion\":\"ad91a93a5a31e175f5cbf8c69561e788bbc55ce1\",\"openSSLVersion\":\"OpenSSL 1.1.1 11 Sep 2018\",\"modules\":[],\"allocator\":\"tcmalloc\",\"environment\":{\"distmod\":\"ubuntu1804\",\"distarch\":\"x86_64\",\"target_arch\":\"x86_64\"}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":51765, \"ctx\":\"initandlisten\",\"msg\":\"Operating System\",\"attr\":{\"os\":{\"name\":\"Ubuntu\",\"version\":\"18.04\"}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":21951, \"ctx\":\"initandlisten\",\"msg\":\"Options set by command line\",\"attr\":{\"options\":{\"net\":{\"bindIp\":\"*\"}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"W\", \"c\":\"STORAGE\", \"id\":22271, \"ctx\":\"initandlisten\",\"msg\":\"Detected unclean shutdown - Lock file is not empty\",\"attr\":{\"lockFile\":\"/data/db/mongod.lock\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22270, \"ctx\":\"initandlisten\",\"msg\":\"Storage engine to use detected by data files\",\"attr\":{\"dbpath\":\"/data/db\",\"storageEngine\":\"wiredTiger\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"W\", \"c\":\"STORAGE\", \"id\":22302, \"ctx\":\"initandlisten\",\"msg\":\"Recovering data from the last clean checkpoint.\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22297, \"ctx\":\"initandlisten\",\"msg\":\"Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem\",\"tags\":[\"startupWarnings\"]} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.096+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22315, \"ctx\":\"initandlisten\",\"msg\":\"Opening WiredTiger\",\"attr\":{\"config\":\"create,cache_size=483M,session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,compact_progress],\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.602+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:602890][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 3 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.644+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:644351][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 4 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.701+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:701929][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Main recovery loop: starting at 3/256 to 4/256\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.702+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:702746][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 3 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.757+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:757732][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 4 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.793+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:793168][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Set global recovery timestamp: (0, 0)\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.793+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:793225][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Set global oldest timestamp: (0, 0)\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.801+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":4795906, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger opened\",\"attr\":{\"durationMillis\":705}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.802+00:00\"},\"s\":\"I\", \"c\":\"RECOVERY\", \"id\":23987, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger recoveryTimestamp\",\"attr\":{\"recoveryTimestamp\":{\"$timestamp\":{\"t\":0,\"i\":0}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.814+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22262, \"ctx\":\"initandlisten\",\"msg\":\"Timestamp monitor starting\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.816+00:00\"},\"s\":\"W\", \"c\":\"CONTROL\", \"id\":22120, \"ctx\":\"initandlisten\",\"msg\":\"Access control is not enabled for the database. Read and write access to data and configuration is unrestricted\",\"tags\":[\"startupWarnings\"]} nginx_1 | nginx: [warn] duplicate MIME type \"text/html\" in /etc/nginx/nginx.conf:68 mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.824+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":20536, \"ctx\":\"initandlisten\",\"msg\":\"Flow Control is enabled on this deployment\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.826+00:00\"},\"s\":\"I\", \"c\":\"FTDC\", \"id\":20625, \"ctx\":\"initandlisten\",\"msg\":\"Initializing full-time diagnostic data capture\",\"attr\":{\"dataDirectory\":\"/data/db/diagnostic.data\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23015, \"ctx\":\"listener\",\"msg\":\"Listening on\",\"attr\":{\"address\":\"/tmp/mongodb-27017.sock\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23015, \"ctx\":\"listener\",\"msg\":\"Listening on\",\"attr\":{\"address\":\"0.0.0.0\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23016, \"ctx\":\"listener\",\"msg\":\"Waiting for connections\",\"attr\":{\"port\":27017,\"ssl\":\"off\"}} pyos_1 | /usr/lib/python3/dist-packages/requests/__init__.py:80: RequestsDependencyWarning: urllib3 (1.25.10) or chardet (3.0.4) doesn't match a supported version! pyos_1 | RequestsDependencyWarning) pyos_1 | 2020-10-02 12:54:16,239 [INFO ] oc.logging.init_logging: Initializing logging subsystem pyos_1 | 2020-10-02 12:54:16,239 [INFO ] oc.logging.load_config: Reading cherrypy configuration section 'global/logging': path = od.config pyos_1 | 2020-10-02 12:54:16,244 [INFO ] oc.logging.init_logging: Applying configuration pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init:internal Init configuration --- pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.load:internal Loading configuration file 'od.config' pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning clienttlskey is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning clienttlscert is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning tlscacert is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning connection to docker dameon on host may failed or is insecure pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal Read HOWTO-configure documentation pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mail_shared:internal Missing mail shared gconfig parameters, shared sendmail is disabled pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mail_support:internal Missing mail support gconfig parameters, support sendmail is disabled pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_defaulthostfqdn:internal default_host_url: http://localhost pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_defaulthostfqdn:internal default_server_ipaddr: 127.0.0.1 pyos_1 | 2020-10-02 12:54:16 settings [DEBUG ] oc.od.settings.init_config_auth:internal {} pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal MONGODB_URL: None pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal mongodburl is mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal host mongodb resolved as 172.21.0.3 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal mongodburl is set to: mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 datastore [INFO ] oc.datastore.MongoClientConfig.__init__:internal mongodb client config server mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mongodb:internal MongoDB connection string: mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal stackmode is standalone pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal memcachedhostname is memcached pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal host memcached resolved as 172.21.0.2 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal Memcached connection string is set to: 172.21.0.2:11211 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_webdav:internal webdav support is : False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_websocketrouting:internal mode is http_origin pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_policy:internal User Execute Policy is False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_policy:internal Network Control Policy is False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_locales:internal Supported local language is set to ['af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW', 'ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW'] pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init:internal Init configuration done. pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_messageinfo:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_accounting:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_datastore:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_datacache:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_auth:internal pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager external pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager explicit pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager implicit pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.initproviders:internal Adding provider name anonymous pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_internaldns:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_resolvnetbios:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_jwtdesktop:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_locator:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_webrtc:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal Configuration file stack_mode is set to standalone pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.getdockerClient:internal Creating client: base_url = 'unix://var/run/docker.sock' pyos_1 | 2020-10-02 12:54:16 orchestrator [DEBUG ] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal config.load_kube_config not in cluster mode pyos_1 | 2020-10-02 12:54:16 orchestrator [WARNING] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal Invalid kube-config file. No configuration found. pyos_1 | 2020-10-02 12:54:16 orchestrator [DEBUG ] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal ODOrchestratorKubernetes __init__ done configure=False pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal abcdesktop mode is using mode : standalone pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.getdockerClient:internal Creating client: base_url = 'unix://var/run/docker.sock' pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal default overlay network: abcdesktop_netuser - id ae6fbd05f88267783ff4910570e83d1a30d3fbe2e07c766632296e2707f56836 pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_appscache:internal pyos_1 | 2020-10-02 12:54:16 apps [DEBUG ] oc.od.apps.build_applist:internal pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [DEBUG ] oc.od.infra.ODInfra.getdockerClientAPI:internal Creating client: base_url = 'unix://var/run/docker.sock pyos_1 | 2020-10-02 12:54:16 apps [DEBUG ] oc.od.apps.build_applist:internal end pyos_1 | 2020-10-02 12:54:16 od [INFO ] __main__.run_server:internal Starting cherrypy service... pyos_1 | 2020-10-02 12:54:16 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.accounting_controller' pyos_1 | 2020-10-02 12:54:16 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.auth_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.composer_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.core_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.directory_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.key_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.manager_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.printer_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.store_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.user_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.webrtc_controller' pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class AccountingController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class AuthController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class ComposerController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class CoreController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class DirectoryController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class KeyController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class ManagerController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class PrinterController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class StoreController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class UserController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class WebRTCController pyos_1 | 2020-10-02 12:54:17 od [INFO ] __main__.run_server:anonymous Waiting for requests... Check that the last pyos line is Waiting for requests... Start your web browser Start a web browser and go to your host where the docker-compose is running, in this example i run abcdesktopio on my laptop, http://localhost abcdesktopio use websockets, by default websocket connection establishment is permit to localhost. http://localhost You should see the authentication HTML page with the Sign-in Anonymously button Click on the Sign-in Anonymously, have a look access button. Pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Docker mode. You just need a web browser to reach your web workspace. Networks abcdesktop_netuser and abcdestkop_netback abcdesktop.io in docker mode use two docker networks abcdesktop_netuser and abcdesktop_netback . abcdesktop_netuser is a dedicated network between nginx and the user containers. abcdesktop_netback is a dedicated network nginx, pyos, mongodb and memcache By design, and for security reasons, the user containers can not (and never) reach the netback network. If a process running inside the user container have to send a message to the API server, the message is send to the user's web browser and then forwarded to the API Server. The abcdesktop_netuser bridge your local interface has defined in the docker-compose file, so you can reach the nginx website using http://localhost netuser: driver: bridge List all docker containers Start a new shell and run the docker ps -a command to list all the containers docker ps -a You should read the output CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 9376fc4e571e abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 40 seconds ago Up 39 seconds 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-340cabd2-6509-4609-8f82-3a713900be1f 0fcd8663d02c abcdesktopio/oc.nginx \"/composer/docker-en\u2026\" 13 minutes ago Up 2 minutes 0.0.0.0:80->80/tcp, 554/tcp, 8554/tcp, 0.0.0.0:443->443/tcp, 9000/tcp abcdesktop_nginx_1 83d1c047cbf0 abcdesktopio/oc.pyos \"/composer/docker-en\u2026\" 13 minutes ago Up 2 minutes abcdesktop_pyos_1 a466db429025 mongo \"docker-entrypoint.s\u2026\" 13 minutes ago Up 2 minutes abcdesktop_mongodb_1 219eb62a89a4 abcdesktopio/oc.speedtest \"docker-php-entrypoi\u2026\" 13 minutes ago Up 2 minutes 80/tcp abcdesktop_speedtest_1 676ca0fcf3a5 memcached \"docker-entrypoint.s\u2026\" 13 minutes ago Up 2 minutes abcdesktop_memcached_1 The new abcdesktop user container has been created 9376fc4e571e abcdesktopio/oc.user.18.04:latest \"/composer/docker-en\u2026\" Add new applications to your desktop There is only one application on your desktop the File Manager. It's now time to add new application. Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d docker pull abcdesktopio/calc.d docker pull abcdesktopio/impress.d docker pull abcdesktopio/math.d docker pull abcdesktopio/writer.d Install Mozilla Suite docker pull abcdesktopio/firefox.d docker pull abcdesktopio/thunderbird.d Install Gnome games docker pull abcdesktopio/mines.d docker pull abcdesktopio/tetravex.d Install Gnome tools docker pull abcdesktopio/calculator.d docker pull abcdesktopio/terminal.d Update the cache application list The API server receives a new image event from dockerd. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Reload your web browser page or start a new session. It's time to run the LibreOffice applications. New applications appear in the dock, start the application Firefox for example. Firefox application is running inside a container. Ready to use for a personal usage Great, you have installed abcdesktop.io in non-cluster hosts, and pull images for your workspace. You can build and add your application.","title":"Install abcdesktop for docker"},{"location":"1.0/setup/dockermode/#install-abcdesktopio-for-non-cluster-hosts","text":"abcdesktop.io support non-cluster hosts and kubernetes cluster hosts. In this section we will study how abcdesktop.io works in non-cluster hosts with only one dockerd installed. The abcdesktop.io for non-cluster hosts is recommended for personal use, all containers are hosted on the same host. In all configuration, the abcdesktop.io infrastructure uses six containers, each container has a specific role : Container Role Image Repository oc.user User container abcdesktopio/oc.user.18.04 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos abcdesktopio oc.nginx Web Service (http proxy and http server) abcdesktopio/oc.nginx abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest from LibreSpeed updated abcdesktopio oc.mongo json database server mongodb MongoDB memcached cache server memcached Memcached This page contains hands-on to learn step by step how to use docker-compose with abcdesktop.io.","title":"Install abcdesktop.io for non-cluster hosts"},{"location":"1.0/setup/dockermode/#requirements-for-non-cluster-hosts","text":"","title":"Requirements for Non-cluster hosts"},{"location":"1.0/setup/dockermode/#docker-compose","text":"The command docker-compose is used in this hands-on, to run each containers together. On desktop systems like Docker Desktop for Mac and Windows, Docker Compose is included as part of those desktop installs. On Linux systems, first install the Docker for your OS as described on the Get Docker page , then come back here for instructions on installing Compose on Linux systems.","title":"docker-compose"},{"location":"1.0/setup/dockermode/#quick-installation-linux-or-macos","text":"Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' You can watch the youtube video sample . This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS): curl -L https://raw.githubusercontent.com/abcdesktopio/conf/main/docker/install.sh | sh - The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: download user's core images: oc.user download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. download the docker-compose.yml YAML file run docker-compose -p abcdesktop up","title":"Quick installation (Linux or macOS)"},{"location":"1.0/setup/dockermode/#manually-installation-step-by-step-linux-macos-or-windows","text":"The following commands will let you install an abcdesktop plateform on your single server. All applications run on the single server.","title":"Manually installation step by step (Linux, macOS or Windows)"},{"location":"1.0/setup/dockermode/#pull-user-container-image","text":"The user container is named abcdesktopio/oc.user.18.04 . The size of the abcdesktopio/oc.user.18.04 image is up to 2 GB. Download the user container image, using the docker pull commmand : docker pull abcdesktopio/oc.user.18.04","title":"Pull user container image"},{"location":"1.0/setup/dockermode/#docker-compose_1","text":"Create a docker-compose.yml file, and copy & paste this YAML file into. version: '3' services: pyos: depends_on: - memcached - mongodb image: abcdesktopio/oc.pyos:${TAG:-1.0} networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock speedtest: image: abcdesktopio/oc.speedtest:${TAG:-1.0} networks: - netuser nginx: depends_on: - memcached - pyos image: abcdesktopio/oc.nginx:${TAG:-1.0} ports: - 80:80 - 443:443 networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: abcdesktopio/oc.mongo:4.4.14 networks: - netback networks: netuser: driver: bridge netback: internal: true Run the docker-compose up command with projet name option set to abcdesktop value. The projet name abcdesktop is used by pyos to reference the network set by default to abcdesktop_netuser You must set the projet name to abcdesktop , else the websocket connection will failed docker-compose -p abcdesktop up Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container dockerd downloads all container images, it could take a while Pulling speedtest (abcdesktopio/oc.speedtest:)... latest: Pulling from oc.speedtest .... Status: Downloaded newer image for abcdesktopio/oc.speedtest:latest Pulling memcached (memcached:)... latest: Pulling from library/memcached .... Status: Downloaded newer image for memcached:latest Pulling mongodb (mongo:4.4)... latest: Pulling from library/mongo:4.4 .... Status: Downloaded newer image for mongo:latest Pulling pyos (abcdesktopio/oc.pyos:)... latest: Pulling from oc.pyos .... Status: Downloaded newer image for abcdesktopio/oc.pyos:latest Pulling nginx (abcdesktopio/oc.nginx:)... latest: Pulling from oc.nginx .... Status: Downloaded newer image for abcdesktopio/oc.nginx:latest You should read the output to the standard output docker-compose -p abcdesktop up Starting abcdesktop_memcached_1 ... done Starting abcdesktop_mongodb_1 ... done Starting abcdesktop_speedtest_1 ... done Starting abcdesktop_pyos_1 ... done Starting abcdesktop_nginx_1 ... done Attaching to abcdesktop_speedtest_1, abcdesktop_mongodb_1, abcdesktop_memcached_1, abcdesktop_pyos_1, abcdesktop_nginx_1 mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.087+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":23285, \"ctx\":\"main\",\"msg\":\"Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'\"} nginx_1 | Kubernetes is not detected nginx_1 | Using default config file pyos_1 | Kubernetes is not detected pyos_1 | Using default config file mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.093+00:00\"},\"s\":\"W\", \"c\":\"ASIO\", \"id\":22601, \"ctx\":\"main\",\"msg\":\"No TransportLayer configured during NetworkInterface startup\"} speedtest_1 | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.20.0.2. Set the 'ServerName' directive globally to suppress this message pyos_1 | total 24 pyos_1 | drwxr-xr-x 2 root root 4096 Sep 19 17:44 . pyos_1 | drwxr-xr-x 1 root root 4096 Oct 2 12:43 .. pyos_1 | -rw-r--r-- 1 root root 1679 May 14 17:54 abcdesktop_jwt_desktop_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 452 May 14 17:54 abcdesktop_jwt_desktop_signing_public_key.pem pyos_1 | -rw-r--r-- 1 root root 891 May 15 09:59 abcdesktop_jwt_user_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 272 May 15 09:59 abcdesktop_jwt_user_signing_public_key.pem speedtest_1 | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.20.0.2. Set the 'ServerName' directive globally to suppress this message mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.093+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":4648601, \"ctx\":\"main\",\"msg\":\"Implicit TCP FastOpen unavailable. If TCP FastOpen is required, set tcpFastOpenServer, tcpFastOpenClient, and tcpFastOpenQueueSize.\"} pyos_1 | total 24 pyos_1 | drwxr-xr-x 2 root root 4096 Sep 19 17:44 . pyos_1 | drwxr-xr-x 1 root root 4096 Oct 2 12:43 .. pyos_1 | -rw-r--r-- 1 root root 1679 May 14 17:54 abcdesktop_jwt_desktop_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 452 May 14 17:54 abcdesktop_jwt_desktop_signing_public_key.pem pyos_1 | -rw-r--r-- 1 root root 891 May 15 09:59 abcdesktop_jwt_user_signing_private_key.pem pyos_1 | -rw-r--r-- 1 root root 272 May 15 09:59 abcdesktop_jwt_user_signing_public_key.pem pyos_1 | starting od.py speedtest_1 | [Fri Oct 02 12:54:15.121521 2020] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.25 (Debian) PHP/5.6.36 configured -- resuming normal operations speedtest_1 | [Fri Oct 02 12:54:15.121740 2020] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND' mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":4615611, \"ctx\":\"initandlisten\",\"msg\":\"MongoDB starting\",\"attr\":{\"pid\":1,\"port\":27017,\"dbPath\":\"/data/db\",\"architecture\":\"64-bit\",\"host\":\"a466db429025\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":23403, \"ctx\":\"initandlisten\",\"msg\":\"Build Info\",\"attr\":{\"buildInfo\":{\"version\":\"4.4.1\",\"gitVersion\":\"ad91a93a5a31e175f5cbf8c69561e788bbc55ce1\",\"openSSLVersion\":\"OpenSSL 1.1.1 11 Sep 2018\",\"modules\":[],\"allocator\":\"tcmalloc\",\"environment\":{\"distmod\":\"ubuntu1804\",\"distarch\":\"x86_64\",\"target_arch\":\"x86_64\"}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":51765, \"ctx\":\"initandlisten\",\"msg\":\"Operating System\",\"attr\":{\"os\":{\"name\":\"Ubuntu\",\"version\":\"18.04\"}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.094+00:00\"},\"s\":\"I\", \"c\":\"CONTROL\", \"id\":21951, \"ctx\":\"initandlisten\",\"msg\":\"Options set by command line\",\"attr\":{\"options\":{\"net\":{\"bindIp\":\"*\"}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"W\", \"c\":\"STORAGE\", \"id\":22271, \"ctx\":\"initandlisten\",\"msg\":\"Detected unclean shutdown - Lock file is not empty\",\"attr\":{\"lockFile\":\"/data/db/mongod.lock\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22270, \"ctx\":\"initandlisten\",\"msg\":\"Storage engine to use detected by data files\",\"attr\":{\"dbpath\":\"/data/db\",\"storageEngine\":\"wiredTiger\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"W\", \"c\":\"STORAGE\", \"id\":22302, \"ctx\":\"initandlisten\",\"msg\":\"Recovering data from the last clean checkpoint.\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.095+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22297, \"ctx\":\"initandlisten\",\"msg\":\"Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem\",\"tags\":[\"startupWarnings\"]} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.096+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22315, \"ctx\":\"initandlisten\",\"msg\":\"Opening WiredTiger\",\"attr\":{\"config\":\"create,cache_size=483M,session_max=33000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000,close_scan_interval=10,close_handle_minimum=250),statistics_log=(wait=0),verbose=[recovery_progress,checkpoint_progress,compact_progress],\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.602+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:602890][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 3 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.644+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:644351][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 4 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.701+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:701929][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Main recovery loop: starting at 3/256 to 4/256\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.702+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:702746][1:0x7f1abada1a80], txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 3 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.757+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:757732][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY_PROGRESS] Recovering log 4 through 4\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.793+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:793168][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Set global recovery timestamp: (0, 0)\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.793+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22430, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger message\",\"attr\":{\"message\":\"[1601643255:793225][1:0x7f1abada1a80], file:index-3--1134620176205790706.wt, txn-recover: [WT_VERB_RECOVERY | WT_VERB_RECOVERY_PROGRESS] Set global oldest timestamp: (0, 0)\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.801+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":4795906, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger opened\",\"attr\":{\"durationMillis\":705}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.802+00:00\"},\"s\":\"I\", \"c\":\"RECOVERY\", \"id\":23987, \"ctx\":\"initandlisten\",\"msg\":\"WiredTiger recoveryTimestamp\",\"attr\":{\"recoveryTimestamp\":{\"$timestamp\":{\"t\":0,\"i\":0}}}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.814+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":22262, \"ctx\":\"initandlisten\",\"msg\":\"Timestamp monitor starting\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.816+00:00\"},\"s\":\"W\", \"c\":\"CONTROL\", \"id\":22120, \"ctx\":\"initandlisten\",\"msg\":\"Access control is not enabled for the database. Read and write access to data and configuration is unrestricted\",\"tags\":[\"startupWarnings\"]} nginx_1 | nginx: [warn] duplicate MIME type \"text/html\" in /etc/nginx/nginx.conf:68 mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.824+00:00\"},\"s\":\"I\", \"c\":\"STORAGE\", \"id\":20536, \"ctx\":\"initandlisten\",\"msg\":\"Flow Control is enabled on this deployment\"} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.826+00:00\"},\"s\":\"I\", \"c\":\"FTDC\", \"id\":20625, \"ctx\":\"initandlisten\",\"msg\":\"Initializing full-time diagnostic data capture\",\"attr\":{\"dataDirectory\":\"/data/db/diagnostic.data\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23015, \"ctx\":\"listener\",\"msg\":\"Listening on\",\"attr\":{\"address\":\"/tmp/mongodb-27017.sock\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23015, \"ctx\":\"listener\",\"msg\":\"Listening on\",\"attr\":{\"address\":\"0.0.0.0\"}} mongodb_1 | {\"t\":{\"$date\":\"2020-10-02T12:54:15.829+00:00\"},\"s\":\"I\", \"c\":\"NETWORK\", \"id\":23016, \"ctx\":\"listener\",\"msg\":\"Waiting for connections\",\"attr\":{\"port\":27017,\"ssl\":\"off\"}} pyos_1 | /usr/lib/python3/dist-packages/requests/__init__.py:80: RequestsDependencyWarning: urllib3 (1.25.10) or chardet (3.0.4) doesn't match a supported version! pyos_1 | RequestsDependencyWarning) pyos_1 | 2020-10-02 12:54:16,239 [INFO ] oc.logging.init_logging: Initializing logging subsystem pyos_1 | 2020-10-02 12:54:16,239 [INFO ] oc.logging.load_config: Reading cherrypy configuration section 'global/logging': path = od.config pyos_1 | 2020-10-02 12:54:16,244 [INFO ] oc.logging.init_logging: Applying configuration pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init:internal Init configuration --- pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.load:internal Loading configuration file 'od.config' pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning clienttlskey is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning clienttlscert is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning tlscacert is not set pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal SECURITY Warning connection to docker dameon on host may failed or is insecure pyos_1 | 2020-10-02 12:54:16 settings [WARNING] oc.od.settings.init_tls:internal Read HOWTO-configure documentation pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mail_shared:internal Missing mail shared gconfig parameters, shared sendmail is disabled pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mail_support:internal Missing mail support gconfig parameters, support sendmail is disabled pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_defaulthostfqdn:internal default_host_url: http://localhost pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_defaulthostfqdn:internal default_server_ipaddr: 127.0.0.1 pyos_1 | 2020-10-02 12:54:16 settings [DEBUG ] oc.od.settings.init_config_auth:internal {} pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal MONGODB_URL: None pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal mongodburl is mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal host mongodb resolved as 172.21.0.3 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.get_mongoconfig:internal mongodburl is set to: mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 datastore [INFO ] oc.datastore.MongoClientConfig.__init__:internal mongodb client config server mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_mongodb:internal MongoDB connection string: mongodb://mongodb:27017 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal stackmode is standalone pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal memcachedhostname is memcached pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal host memcached resolved as 172.21.0.2 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_config_memcached:internal Memcached connection string is set to: 172.21.0.2:11211 pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_webdav:internal webdav support is : False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_websocketrouting:internal mode is http_origin pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_policy:internal User Execute Policy is False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_policy:internal Network Control Policy is False pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init_locales:internal Supported local language is set to ['af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW', 'ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW'] pyos_1 | 2020-10-02 12:54:16 settings [INFO ] oc.od.settings.init:internal Init configuration done. pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_messageinfo:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_accounting:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_datastore:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_datacache:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_auth:internal pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager external pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager explicit pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.__init__:internal Adding Auth manager implicit pyos_1 | 2020-10-02 12:54:16 authservice [INFO ] oc.auth.authservice.initproviders:internal Adding provider name anonymous pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_internaldns:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_resolvnetbios:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_jwtdesktop:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_locator:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_webrtc:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal Configuration file stack_mode is set to standalone pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.getdockerClient:internal Creating client: base_url = 'unix://var/run/docker.sock' pyos_1 | 2020-10-02 12:54:16 orchestrator [DEBUG ] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal config.load_kube_config not in cluster mode pyos_1 | 2020-10-02 12:54:16 orchestrator [WARNING] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal Invalid kube-config file. No configuration found. pyos_1 | 2020-10-02 12:54:16 orchestrator [DEBUG ] oc.od.orchestrator.ODOrchestratorKubernetes.__init__:internal ODOrchestratorKubernetes __init__ done configure=False pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal abcdesktop mode is using mode : standalone pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.getdockerClient:internal Creating client: base_url = 'unix://var/run/docker.sock' pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_infra:internal default overlay network: abcdesktop_netuser - id ae6fbd05f88267783ff4910570e83d1a30d3fbe2e07c766632296e2707f56836 pyos_1 | 2020-10-02 12:54:16 services [INFO ] oc.od.services.init_appscache:internal pyos_1 | 2020-10-02 12:54:16 apps [DEBUG ] oc.od.apps.build_applist:internal pyos_1 | 2020-10-02 12:54:16 infra [INFO ] oc.od.infra.ODInfra.__init__:internal nodehostname=None pyos_1 | 2020-10-02 12:54:16 infra [DEBUG ] oc.od.infra.ODInfra.getdockerClientAPI:internal Creating client: base_url = 'unix://var/run/docker.sock pyos_1 | 2020-10-02 12:54:16 apps [DEBUG ] oc.od.apps.build_applist:internal end pyos_1 | 2020-10-02 12:54:16 od [INFO ] __main__.run_server:internal Starting cherrypy service... pyos_1 | 2020-10-02 12:54:16 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.accounting_controller' pyos_1 | 2020-10-02 12:54:16 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.auth_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.composer_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.core_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.directory_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.key_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.manager_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.printer_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.store_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.user_controller' pyos_1 | 2020-10-02 12:54:17 pyutils [DEBUG ] oc.pyutils.import_classes:internal Importing module 'controllers.webrtc_controller' pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class AccountingController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class AuthController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class ComposerController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class CoreController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class DirectoryController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class KeyController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class ManagerController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class PrinterController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class StoreController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class UserController pyos_1 | 2020-10-02 12:54:17 cherrypy [DEBUG ] oc.cherrypy.create_controllers:internal instancing class WebRTCController pyos_1 | 2020-10-02 12:54:17 od [INFO ] __main__.run_server:anonymous Waiting for requests... Check that the last pyos line is Waiting for requests...","title":"docker-compose"},{"location":"1.0/setup/dockermode/#start-your-web-browser","text":"Start a web browser and go to your host where the docker-compose is running, in this example i run abcdesktopio on my laptop, http://localhost abcdesktopio use websockets, by default websocket connection establishment is permit to localhost. http://localhost You should see the authentication HTML page with the Sign-in Anonymously button Click on the Sign-in Anonymously, have a look access button. Pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Docker mode. You just need a web browser to reach your web workspace.","title":"Start your web browser"},{"location":"1.0/setup/dockermode/#networks-abcdesktop_netuser-and-abcdestkop_netback","text":"abcdesktop.io in docker mode use two docker networks abcdesktop_netuser and abcdesktop_netback . abcdesktop_netuser is a dedicated network between nginx and the user containers. abcdesktop_netback is a dedicated network nginx, pyos, mongodb and memcache By design, and for security reasons, the user containers can not (and never) reach the netback network. If a process running inside the user container have to send a message to the API server, the message is send to the user's web browser and then forwarded to the API Server. The abcdesktop_netuser bridge your local interface has defined in the docker-compose file, so you can reach the nginx website using http://localhost netuser: driver: bridge","title":"Networks abcdesktop_netuser and abcdestkop_netback"},{"location":"1.0/setup/dockermode/#list-all-docker-containers","text":"Start a new shell and run the docker ps -a command to list all the containers docker ps -a You should read the output CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 9376fc4e571e abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 40 seconds ago Up 39 seconds 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-340cabd2-6509-4609-8f82-3a713900be1f 0fcd8663d02c abcdesktopio/oc.nginx \"/composer/docker-en\u2026\" 13 minutes ago Up 2 minutes 0.0.0.0:80->80/tcp, 554/tcp, 8554/tcp, 0.0.0.0:443->443/tcp, 9000/tcp abcdesktop_nginx_1 83d1c047cbf0 abcdesktopio/oc.pyos \"/composer/docker-en\u2026\" 13 minutes ago Up 2 minutes abcdesktop_pyos_1 a466db429025 mongo \"docker-entrypoint.s\u2026\" 13 minutes ago Up 2 minutes abcdesktop_mongodb_1 219eb62a89a4 abcdesktopio/oc.speedtest \"docker-php-entrypoi\u2026\" 13 minutes ago Up 2 minutes 80/tcp abcdesktop_speedtest_1 676ca0fcf3a5 memcached \"docker-entrypoint.s\u2026\" 13 minutes ago Up 2 minutes abcdesktop_memcached_1 The new abcdesktop user container has been created 9376fc4e571e abcdesktopio/oc.user.18.04:latest \"/composer/docker-en\u2026\"","title":"List all docker containers"},{"location":"1.0/setup/dockermode/#add-new-applications-to-your-desktop","text":"There is only one application on your desktop the File Manager. It's now time to add new application. Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d docker pull abcdesktopio/calc.d docker pull abcdesktopio/impress.d docker pull abcdesktopio/math.d docker pull abcdesktopio/writer.d Install Mozilla Suite docker pull abcdesktopio/firefox.d docker pull abcdesktopio/thunderbird.d Install Gnome games docker pull abcdesktopio/mines.d docker pull abcdesktopio/tetravex.d Install Gnome tools docker pull abcdesktopio/calculator.d docker pull abcdesktopio/terminal.d","title":"Add new applications to your desktop"},{"location":"1.0/setup/dockermode/#update-the-cache-application-list","text":"The API server receives a new image event from dockerd. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Reload your web browser page or start a new session. It's time to run the LibreOffice applications. New applications appear in the dock, start the application Firefox for example. Firefox application is running inside a container.","title":"Update the cache application list"},{"location":"1.0/setup/dockermode/#ready-to-use-for-a-personal-usage","text":"Great, you have installed abcdesktop.io in non-cluster hosts, and pull images for your workspace. You can build and add your application.","title":"Ready to use for a personal usage"},{"location":"1.0/setup/k8slinuxinstallation/","text":"Linux Requirements Packages installation To install Kubernetes on your GNU/Linux, you can read the Kubernetes setup guide on the kubernetes.io web site. Install Kubernetes on Linux Step 1: Install Docker Install the Docker utility and required packages on node by running the following command as sudo in a Terminal : sudo apt-get install docker.io containerd gnupg openssl iptables acl python3-openssl apt-transport-https You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. Docker will then be installed on your system. You can verify the installation and also check the version number of Docker through the following command: docker --version Step 2: Enable Docker Enable the Docker utility by running the following command on each: sudo systemctl enable docker Step 3: Add the Kubernetes signing key Run the following command in order to get the Kubernetes signing key: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - If curl is not installed on your system, you can install it through the following command as root: sudo apt install curl You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. The Curl utility will then be installed on your system. Step 4: Add Xenial Kubernetes Repository Run the following commands in order to add the Xenial Kubernetes repository: echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list sudo apt-get update Step 5: Install Kubernetes utilities sudo apt-get install -y kubectl=1.23.7-00 kubeadm=1.23.7-00 kubelet=1.23.7-00 You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. K8s utilities will then be installed on your system. Your kubernetes version must be greater than or equal to 1.15.0-00 and less than 1.24.XX You can check the version number of Kubeadm and also verify the installation through the following command: kubeadm version","title":"Kubernetes on GNU/Linux"},{"location":"1.0/setup/k8slinuxinstallation/#linux-requirements","text":"","title":"Linux Requirements"},{"location":"1.0/setup/k8slinuxinstallation/#packages-installation","text":"To install Kubernetes on your GNU/Linux, you can read the Kubernetes setup guide on the kubernetes.io web site.","title":"Packages installation"},{"location":"1.0/setup/k8slinuxinstallation/#install-kubernetes-on-linux","text":"","title":"Install Kubernetes on Linux"},{"location":"1.0/setup/k8slinuxinstallation/#step-1-install-docker","text":"Install the Docker utility and required packages on node by running the following command as sudo in a Terminal : sudo apt-get install docker.io containerd gnupg openssl iptables acl python3-openssl apt-transport-https You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. Docker will then be installed on your system. You can verify the installation and also check the version number of Docker through the following command: docker --version","title":"Step 1: Install Docker"},{"location":"1.0/setup/k8slinuxinstallation/#step-2-enable-docker","text":"Enable the Docker utility by running the following command on each: sudo systemctl enable docker","title":"Step 2: Enable Docker"},{"location":"1.0/setup/k8slinuxinstallation/#step-3-add-the-kubernetes-signing-key","text":"Run the following command in order to get the Kubernetes signing key: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - If curl is not installed on your system, you can install it through the following command as root: sudo apt install curl You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. The Curl utility will then be installed on your system.","title":"Step 3: Add the Kubernetes signing key"},{"location":"1.0/setup/k8slinuxinstallation/#step-4-add-xenial-kubernetes-repository","text":"Run the following commands in order to add the Xenial Kubernetes repository: echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list sudo apt-get update","title":"Step 4: Add Xenial Kubernetes Repository"},{"location":"1.0/setup/k8slinuxinstallation/#step-5-install-kubernetes-utilities","text":"sudo apt-get install -y kubectl=1.23.7-00 kubeadm=1.23.7-00 kubelet=1.23.7-00 You will be prompted with a Y/n option in order to proceed with the installation. Please enter Y and then hit enter to continue. K8s utilities will then be installed on your system. Your kubernetes version must be greater than or equal to 1.15.0-00 and less than 1.24.XX You can check the version number of Kubeadm and also verify the installation through the following command: kubeadm version","title":"Step 5: Install Kubernetes utilities"},{"location":"1.0/setup/k8smacosinstallation/","text":"MacOS/X Kubernetes Enable Kubernetes on MacOS/X Click on the Docker icon in MacOS/X menu bar. Then choose Preferences... The following window should appear : Choose Kubernetes , then check the Enable Kubernetes Kubernetes stay in Starting state during few minutes. Please wait to download all container images and for kubernetes installation process. On the bottom you should read next Docker Running Kubernetes Running Great, you have installed Kubernetes on MacOS/X. Run the new kubectl command Open a Terminal, then run the command kubectl version % kubectl version Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:16:51Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"darwin/amd64\"} Server Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:07:57Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"} Run the command kubectl get pods % kubectl get pods No resources found. Great, the kubectl command works. It's time to deploy abcdesktop.io","title":"Kubernetes on MacOS/X"},{"location":"1.0/setup/k8smacosinstallation/#macosx-kubernetes","text":"","title":"MacOS/X Kubernetes"},{"location":"1.0/setup/k8smacosinstallation/#enable-kubernetes-on-macosx","text":"Click on the Docker icon in MacOS/X menu bar. Then choose Preferences... The following window should appear : Choose Kubernetes , then check the Enable Kubernetes Kubernetes stay in Starting state during few minutes. Please wait to download all container images and for kubernetes installation process. On the bottom you should read next Docker Running Kubernetes Running Great, you have installed Kubernetes on MacOS/X.","title":"Enable Kubernetes on MacOS/X"},{"location":"1.0/setup/k8smacosinstallation/#run-the-new-kubectl-command","text":"Open a Terminal, then run the command kubectl version % kubectl version Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:16:51Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"darwin/amd64\"} Server Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:07:57Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"} Run the command kubectl get pods % kubectl get pods No resources found. Great, the kubectl command works. It's time to deploy abcdesktop.io","title":"Run the new kubectl command"},{"location":"1.0/setup/k8swindows10installation/","text":"Windows 10 Kubernetes Installation Enable Kubernetes on Windows 10 Click on the Docker Desktop icon in the windows tray. The following menu should appear, choose Settings : The following window should appear : Choose Kubernetes , then check the Enable Kubernetes Press the Apply and Restart button. Please wait to download all container images and for kubernetes installation process. On the bottom you should read next Docker Running and Kubernetes Running . Great, you have installed Kubernetes on Windows 10. Run the new kubectl command Open a Terminal cmd.exe , then run the command kubectl version Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:16:51Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"windows/amd64\"} Server Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:07:57Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"} Run the command kubectl get pods kubectl get pods No resources found. Great, the kubectl command works. It's time to deploy abcdesktop.io","title":"Kubernetes on Windows 10"},{"location":"1.0/setup/k8swindows10installation/#windows-10-kubernetes-installation","text":"","title":"Windows 10 Kubernetes Installation"},{"location":"1.0/setup/k8swindows10installation/#enable-kubernetes-on-windows-10","text":"Click on the Docker Desktop icon in the windows tray. The following menu should appear, choose Settings : The following window should appear : Choose Kubernetes , then check the Enable Kubernetes Press the Apply and Restart button. Please wait to download all container images and for kubernetes installation process. On the bottom you should read next Docker Running and Kubernetes Running . Great, you have installed Kubernetes on Windows 10.","title":"Enable Kubernetes on Windows 10"},{"location":"1.0/setup/k8swindows10installation/#run-the-new-kubectl-command","text":"Open a Terminal cmd.exe , then run the command kubectl version Client Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:16:51Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"windows/amd64\"} Server Version: version.Info{Major:\"1\", Minor:\"15\", GitVersion:\"v1.15.5\", GitCommit:\"20c265fef0741dd71a66480e35bd69f18351daea\", GitTreeState:\"clean\", BuildDate:\"2019-10-15T19:07:57Z\", GoVersion:\"go1.12.10\", Compiler:\"gc\", Platform:\"linux/amd64\"} Run the command kubectl get pods kubectl get pods No resources found. Great, the kubectl command works. It's time to deploy abcdesktop.io","title":"Run the new kubectl command"},{"location":"1.0/setup/kubernetes_abcdesktop/","text":"abcdesktop.io in kubernetes mode abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdabcdesktopio/esktop.io works in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all applications containers can be distributed on different hosts. In kubernetes mode, the abcdesktop.io infrastructure use seven containers (oc.cups is optional), each container has a specific role : Container Role Image From oc.user user container abcdesktopio/oc.user.18.04 abcdesktopio oc.cups printing container abcdesktopio/oc.cupsd.18.04 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached Requirements You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by reading Kubernetes Setup . The command line openssl must be installed too. You can run the Quick installation process or choose the Manually installation step by step Quick installation (Linux or macOS) Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' You can watch the youtube video sample . This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption create all services, pods, secrets and configmaps download user's core images: oc.user, oc.cupsd, oc.pulseaudio download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. You can also download the install.sh bash script, and read it and then run it. Manually installation step by step (Linux, macOS or Windows) The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server. Install abcdesktop Step 1: Create abcdesktop namespace We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands. Step 2: Securized abcdesktop All communications between nginx, pyos and user navigator are encrypted by JSON Web Tokens. The JSON Web Tokens payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JSON Web Tokens payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script and by pyos, export the public key using the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python and lua. The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop Verify Secrets You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s Step 3: Download core images, create Pods, and services Pre download the three user default images, to make sure that Kubernetes will find the docker images at startup time. docker pull abcdesktopio/oc.user.18.04 docker pull abcdesktopio/oc.cupsd.18.04 docker pull abcdesktopio/oc.pulseaudio.18.04 You should read on the standard output oc.user.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.user.18.04 oc.cupsd.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.cupsd.18.04 oc.pulseaudio.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.pulseaudio.18.04 Create the abcdesktop pods and services abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created Verify Pods Once the pods are created, all pods should be running. For the first time, status maybe long to become running as some container images may be downloaded kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s Connect your local abcdesktop Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some container applications. Read the chapter add kubernetes contain Troubleshoot All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry. Verify Daemonsets kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 16m daemonset-pyos 1 1 1 1 1 <none> 16m Verify service ports kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 17m memcached ClusterIP 10.110.16.25 <none> 11211/TCP 17m mongodb ClusterIP 10.110.49.161 <none> 27017/TCP 17m nginx NodePort 10.102.13.5 <none> 80:30443/TCP 17m openldap ClusterIP 10.108.52.65 <none> 389/TCP 17m pyos ClusterIP 10.111.123.108 <none> 8000/TCP 17m speedtest ClusterIP 10.101.137.100 <none> 80/TCP 17m Verify cluster roles kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/exec [] [] [create get list watch update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] pods/log [] [] [get list watch] nodes [] [] [get watch list] Verify Cluster Role Bindind kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Name: pyos-rbac Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop View pyos logs Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop Note that you also can view logs using docker command Rollout daemonset To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Setup abcdesktop for Kubernetes"},{"location":"1.0/setup/kubernetes_abcdesktop/#abcdesktopio-in-kubernetes-mode","text":"abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdabcdesktopio/esktop.io works in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all applications containers can be distributed on different hosts. In kubernetes mode, the abcdesktop.io infrastructure use seven containers (oc.cups is optional), each container has a specific role : Container Role Image From oc.user user container abcdesktopio/oc.user.18.04 abcdesktopio oc.cups printing container abcdesktopio/oc.cupsd.18.04 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached","title":"abcdesktop.io in kubernetes mode"},{"location":"1.0/setup/kubernetes_abcdesktop/#requirements","text":"You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by reading Kubernetes Setup . The command line openssl must be installed too. You can run the Quick installation process or choose the Manually installation step by step","title":"Requirements"},{"location":"1.0/setup/kubernetes_abcdesktop/#quick-installation-linux-or-macos","text":"Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' You can watch the youtube video sample . This video describes the Quick installation process. Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption create all services, pods, secrets and configmaps download user's core images: oc.user, oc.cupsd, oc.pulseaudio download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. You can also download the install.sh bash script, and read it and then run it.","title":"Quick installation (Linux or macOS)"},{"location":"1.0/setup/kubernetes_abcdesktop/#manually-installation-step-by-step-linux-macos-or-windows","text":"The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server.","title":"Manually installation step by step (Linux, macOS or Windows)"},{"location":"1.0/setup/kubernetes_abcdesktop/#install-abcdesktop","text":"","title":"Install abcdesktop"},{"location":"1.0/setup/kubernetes_abcdesktop/#step-1-create-abcdesktop-namespace","text":"We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands.","title":"Step 1: Create abcdesktop namespace"},{"location":"1.0/setup/kubernetes_abcdesktop/#step-2-securized-abcdesktop","text":"All communications between nginx, pyos and user navigator are encrypted by JSON Web Tokens. The JSON Web Tokens payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JSON Web Tokens payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script and by pyos, export the public key using the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python and lua. The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop","title":"Step 2: Securized abcdesktop"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-secrets","text":"You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s","title":"Verify Secrets"},{"location":"1.0/setup/kubernetes_abcdesktop/#step-3-download-core-images-create-pods-and-services","text":"Pre download the three user default images, to make sure that Kubernetes will find the docker images at startup time. docker pull abcdesktopio/oc.user.18.04 docker pull abcdesktopio/oc.cupsd.18.04 docker pull abcdesktopio/oc.pulseaudio.18.04 You should read on the standard output oc.user.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.user.18.04 oc.cupsd.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.cupsd.18.04 oc.pulseaudio.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.pulseaudio.18.04 Create the abcdesktop pods and services abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created","title":"Step 3: Download core images, create Pods, and services"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-pods","text":"Once the pods are created, all pods should be running. For the first time, status maybe long to become running as some container images may be downloaded kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s","title":"Verify Pods"},{"location":"1.0/setup/kubernetes_abcdesktop/#connect-your-local-abcdesktop","text":"Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some container applications. Read the chapter add kubernetes contain","title":"Connect your local abcdesktop"},{"location":"1.0/setup/kubernetes_abcdesktop/#troubleshoot","text":"All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry.","title":"Troubleshoot"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-daemonsets","text":"kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 16m daemonset-pyos 1 1 1 1 1 <none> 16m","title":"Verify Daemonsets"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-service-ports","text":"kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 17m memcached ClusterIP 10.110.16.25 <none> 11211/TCP 17m mongodb ClusterIP 10.110.49.161 <none> 27017/TCP 17m nginx NodePort 10.102.13.5 <none> 80:30443/TCP 17m openldap ClusterIP 10.108.52.65 <none> 389/TCP 17m pyos ClusterIP 10.111.123.108 <none> 8000/TCP 17m speedtest ClusterIP 10.101.137.100 <none> 80/TCP 17m","title":"Verify service ports"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-cluster-roles","text":"kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/exec [] [] [create get list watch update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] pods/log [] [] [get list watch] nodes [] [] [get watch list]","title":"Verify cluster roles"},{"location":"1.0/setup/kubernetes_abcdesktop/#verify-cluster-role-bindind","text":"kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Name: pyos-rbac Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop","title":"Verify Cluster Role Bindind"},{"location":"1.0/setup/kubernetes_abcdesktop/#view-pyos-logs","text":"Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop Note that you also can view logs using docker command","title":"View pyos logs"},{"location":"1.0/setup/kubernetes_abcdesktop/#rollout-daemonset","text":"To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Rollout daemonset"},{"location":"1.0/setup/kubernetes_abcdesktop_applications/","text":"Setup applications for abcdesktop Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d docker pull abcdesktopio/calc.d docker pull abcdesktopio/impress.d docker pull abcdesktopio/math.d docker pull abcdesktopio/writer.d Install Mozilla Suite docker pull abcdesktopio/firefox.d docker pull abcdesktopio/thunderbird.d Install Gnome games docker pull abcdesktopio/mines.d docker pull abcdesktopio/tetravex.d Install Gnome tools docker pull abcdesktopio/calculator.d docker pull abcdesktopio/terminal.d Connect to your abcdesktop The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Setup applications for abcdesktop"},{"location":"1.0/setup/kubernetes_abcdesktop_applications/#setup-applications-for-abcdesktop","text":"Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d docker pull abcdesktopio/calc.d docker pull abcdesktopio/impress.d docker pull abcdesktopio/math.d docker pull abcdesktopio/writer.d Install Mozilla Suite docker pull abcdesktopio/firefox.d docker pull abcdesktopio/thunderbird.d Install Gnome games docker pull abcdesktopio/mines.d docker pull abcdesktopio/tetravex.d Install Gnome tools docker pull abcdesktopio/calculator.d docker pull abcdesktopio/terminal.d","title":"Setup applications for abcdesktop"},{"location":"1.0/setup/kubernetes_abcdesktop_applications/#connect-to-your-abcdesktop","text":"The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Connect to your abcdesktop"},{"location":"1.0/setup/kubernetes_secure_etcd/","text":"Secure Etcd secrets database This chapter is optional you can skip it if you think that's your kubernetes etcd database access is secured. Etcd secrets database is the place where all k8s secrets are stored. By default secrets are stored in plain text. If an attacker can access Etcd database, he know then all your secrets. To secure secrets, we will crypt them at API server level. All secrets will be stored encrypted in Etcd and then be uncrypted at API server level when accessed by Kubernetes. Availbale Encryption Providers Here are officials available encryption providers ( Kubernetes Official page ): Providers for Kubernetes encryption at rest Name Encryption Strength Speed Key Length Other Considerations identity None N/A N/A N/A Resources written as-is without encryption. When set as the first provider, the resource will be decrypted as new values are written. aescbc AES-CBC with PKCS#7 padding Strongest Fast 32-byte The recommended choice for encryption at rest but may be slightly slower than secretbox . secretbox XSalsa20 and Poly1305 Strong Faster 32-byte A newer standard and may not be considered acceptable in environments that require high levels of review. aesgcm AES-GCM with random nonce Must be rotated every 200k writes Fastest 16, 24, or 32-byte Is not recommended for use except when an automated key rotation scheme is implemented. kms Uses envelope encryption scheme: Data is encrypted by data encryption keys (DEKs) using AES-CBC with PKCS#7 padding, DEKs are encrypted by key encryption keys (KEKs) according to configuration in Key Management Service (KMS) Strongest Fast 32-bytes The recommended choice for using a third party tool for key management. Simplifies key rotation, with a new DEK generated for each encryption, and KEK rotation controlled by the user. aesgcm provider seem's a bit complex to be used. kms provider needs to use a dedicated container and will not work out of the box. For abcdesktop we will use aescbc provider aescbc encryption configuration create configuration directory In /etc/kubernetes directory, create a directory named aescbc: sudo mkdir /etc/kubernetes/aescbc Create configuration file Create aescbc yaml configuration file: sudo vi /etc/kubernetes/aescbc/encrypt_config.yaml apiVersion: apiserver.config.k8s.io/v1 kind: EncryptionConfiguration resources: - resources: - secrets providers: - aescbc: keys: - name: key1 secret: vKZm8oL19mucMS8qKXW4P9wSpab5H7LrLtOOPUUcvQk= - identity: {} Change secret key Secret key can be generated using the following command: head -c 32 /dev/urandom | base64 In encrypt_config.yaml, replace secret for key1 in aescbc.keys section Change rights on directory and file As the encryption key is also the key that will uncrypt Etcd, we will try to protect it as much as possible by changing rights on directory and file: sudo chmod -R 600 /etc/kubernetes/aescbc Configure Kubernetes Api Server Encryption will be done at Kubernetes Api Server level. We will now configure this server to crypt secrets configure kube-apiserver.yaml Edit kube-apiserver.yaml configuration file: vim /etc/kubernetes/manifests/kube-apiserver.yaml In spec.containers.command section add: - --encryption-provider-config=/etc/kubernetes/aescbc/encrypt_config.yaml In spec.containers.volumeMounts section add: - mountPath: /etc/kubernetes/aescbc name: aescbc-config readOnly: true In spec.volumes section add: - hostPath: path: /etc/kubernetes/aescbc type: DirectoryOrCreate name: aescbc-config save the file verify api server When saving file, Kubernetes will detect changes and restart Api Server. This can be verified using the following command: kubectl -n kube-system get pods NAME READY STATUS RESTARTS AGE coredns-66bff467f8-69b8r 1/1 Running 0 21h coredns-66bff467f8-74j9n 1/1 Running 0 21h etcd-cube05 1/1 Running 0 21h kube-apiserver-cube05 1/1 Running 0 6s kube-controller-manager-cube05 1/1 Running 1 21h kube-flannel-ds-amd64-p9xhq 1/1 Running 0 20h kube-proxy-8xk5g 1/1 Running 0 21h kube-scheduler-cube05 1/1 Running 1 21h At this state, all created secrets will be crypted in etcd Verify secrets encryption Create a secret kubectl create secret generic secret1 -n default --from-literal=mykey=mydata Verify secret creation sudo kubectl -n default describe secret secret1 Name: secret1 Namespace: default Labels: <none> Annotations: <none> Type: Opaque Data ==== mykey: 6 bytes Verify secret encryption To verify secret encryption we will install etcd client package apt-get install etcd-client Run the following command: ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt \\ --cert=/etc/kubernetes/pki/etcd/ca.crt --key=/etc/kubernetes/pki/etcd/ca.key \\ --endpoints=https://localhost:2379 get /registry/secrets/default/secret1 Output will appear with the following text k8s:enc:aescbc:v1:key1: followed by binary values. Secrets are now encoded with aescbc v1 provider using key1","title":"Secure Etcd"},{"location":"1.0/setup/kubernetes_secure_etcd/#secure-etcd-secrets-database","text":"This chapter is optional you can skip it if you think that's your kubernetes etcd database access is secured. Etcd secrets database is the place where all k8s secrets are stored. By default secrets are stored in plain text. If an attacker can access Etcd database, he know then all your secrets. To secure secrets, we will crypt them at API server level. All secrets will be stored encrypted in Etcd and then be uncrypted at API server level when accessed by Kubernetes.","title":"Secure Etcd secrets database"},{"location":"1.0/setup/kubernetes_secure_etcd/#availbale-encryption-providers","text":"Here are officials available encryption providers ( Kubernetes Official page ): Providers for Kubernetes encryption at rest Name Encryption Strength Speed Key Length Other Considerations identity None N/A N/A N/A Resources written as-is without encryption. When set as the first provider, the resource will be decrypted as new values are written. aescbc AES-CBC with PKCS#7 padding Strongest Fast 32-byte The recommended choice for encryption at rest but may be slightly slower than secretbox . secretbox XSalsa20 and Poly1305 Strong Faster 32-byte A newer standard and may not be considered acceptable in environments that require high levels of review. aesgcm AES-GCM with random nonce Must be rotated every 200k writes Fastest 16, 24, or 32-byte Is not recommended for use except when an automated key rotation scheme is implemented. kms Uses envelope encryption scheme: Data is encrypted by data encryption keys (DEKs) using AES-CBC with PKCS#7 padding, DEKs are encrypted by key encryption keys (KEKs) according to configuration in Key Management Service (KMS) Strongest Fast 32-bytes The recommended choice for using a third party tool for key management. Simplifies key rotation, with a new DEK generated for each encryption, and KEK rotation controlled by the user. aesgcm provider seem's a bit complex to be used. kms provider needs to use a dedicated container and will not work out of the box. For abcdesktop we will use aescbc provider","title":"Availbale Encryption Providers"},{"location":"1.0/setup/kubernetes_secure_etcd/#aescbc-encryption-configuration","text":"","title":"aescbc encryption configuration"},{"location":"1.0/setup/kubernetes_secure_etcd/#create-configuration-directory","text":"In /etc/kubernetes directory, create a directory named aescbc: sudo mkdir /etc/kubernetes/aescbc","title":"create configuration directory"},{"location":"1.0/setup/kubernetes_secure_etcd/#create-configuration-file","text":"Create aescbc yaml configuration file: sudo vi /etc/kubernetes/aescbc/encrypt_config.yaml apiVersion: apiserver.config.k8s.io/v1 kind: EncryptionConfiguration resources: - resources: - secrets providers: - aescbc: keys: - name: key1 secret: vKZm8oL19mucMS8qKXW4P9wSpab5H7LrLtOOPUUcvQk= - identity: {}","title":"Create configuration file"},{"location":"1.0/setup/kubernetes_secure_etcd/#change-secret-key","text":"Secret key can be generated using the following command: head -c 32 /dev/urandom | base64 In encrypt_config.yaml, replace secret for key1 in aescbc.keys section","title":"Change secret key"},{"location":"1.0/setup/kubernetes_secure_etcd/#change-rights-on-directory-and-file","text":"As the encryption key is also the key that will uncrypt Etcd, we will try to protect it as much as possible by changing rights on directory and file: sudo chmod -R 600 /etc/kubernetes/aescbc","title":"Change rights on directory and file"},{"location":"1.0/setup/kubernetes_secure_etcd/#configure-kubernetes-api-server","text":"Encryption will be done at Kubernetes Api Server level. We will now configure this server to crypt secrets","title":"Configure Kubernetes Api Server"},{"location":"1.0/setup/kubernetes_secure_etcd/#configure-kube-apiserveryaml","text":"Edit kube-apiserver.yaml configuration file: vim /etc/kubernetes/manifests/kube-apiserver.yaml In spec.containers.command section add: - --encryption-provider-config=/etc/kubernetes/aescbc/encrypt_config.yaml In spec.containers.volumeMounts section add: - mountPath: /etc/kubernetes/aescbc name: aescbc-config readOnly: true In spec.volumes section add: - hostPath: path: /etc/kubernetes/aescbc type: DirectoryOrCreate name: aescbc-config save the file","title":"configure kube-apiserver.yaml"},{"location":"1.0/setup/kubernetes_secure_etcd/#verify-api-server","text":"When saving file, Kubernetes will detect changes and restart Api Server. This can be verified using the following command: kubectl -n kube-system get pods NAME READY STATUS RESTARTS AGE coredns-66bff467f8-69b8r 1/1 Running 0 21h coredns-66bff467f8-74j9n 1/1 Running 0 21h etcd-cube05 1/1 Running 0 21h kube-apiserver-cube05 1/1 Running 0 6s kube-controller-manager-cube05 1/1 Running 1 21h kube-flannel-ds-amd64-p9xhq 1/1 Running 0 20h kube-proxy-8xk5g 1/1 Running 0 21h kube-scheduler-cube05 1/1 Running 1 21h At this state, all created secrets will be crypted in etcd","title":"verify api server"},{"location":"1.0/setup/kubernetes_secure_etcd/#verify-secrets-encryption","text":"","title":"Verify secrets encryption"},{"location":"1.0/setup/kubernetes_secure_etcd/#create-a-secret","text":"kubectl create secret generic secret1 -n default --from-literal=mykey=mydata","title":"Create a secret"},{"location":"1.0/setup/kubernetes_secure_etcd/#verify-secret-creation","text":"sudo kubectl -n default describe secret secret1 Name: secret1 Namespace: default Labels: <none> Annotations: <none> Type: Opaque Data ==== mykey: 6 bytes","title":"Verify secret creation"},{"location":"1.0/setup/kubernetes_secure_etcd/#verify-secret-encryption","text":"To verify secret encryption we will install etcd client package apt-get install etcd-client Run the following command: ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt \\ --cert=/etc/kubernetes/pki/etcd/ca.crt --key=/etc/kubernetes/pki/etcd/ca.key \\ --endpoints=https://localhost:2379 get /registry/secrets/default/secret1 Output will appear with the following text k8s:enc:aescbc:v1:key1: followed by binary values. Secrets are now encoded with aescbc v1 provider using key1","title":"Verify secret encryption"},{"location":"1.0/setup/kubernetesadvanced/","text":"Install Opendekstop on a cluster For advanced installation, we will put abcdesktop on a kubernetes multi-master cluster. For this, we will need 6 VMs : - 1 Master Control Plane - 2 Control Plane - 3 Workers All VMs require 2 CPU, 2Go Ram and 30Go HDD. Meaning you will need 12 CPU, 12Go Ram and 180Go HDD The following procedure has been executed on a Ubuntu 18.04 server. Create VMs To create and manage VMs, we will create scripts and files : - serverlist.sh - Servers Names and IP to manage - default.xml - Modified KVM default network definition to add domain name for DNS resolution inside cluster - create-vm.sh - Script to create pre-configured Ubuntu 18.04 VMs - do_all.sh - Script to create all VMs and network for all cluster servers - delete-vm.sh - Script to delete all created VMs All chapters actions will be done on host server. VMs creation can be skipped if you have your own cluster or you wan't to create it in a different way. Install libvirt and kvm pacakges sudo apt-get install -qy \\ qemu-kvm virtinst bridge-utils cpu-checker libvirt-clients libvirt-daemon-system Create VM creation files serverlist.sh file serverlist.sh file will let you define server names and IP using a bash dictionnary. Create serverlist.sh file copying the following lines: unset newipdict declare -A newipdict newipdict[\"k8s-master\"]=\"192.168.122.11\" newipdict[\"k8s-cp1\"]=\"192.168.122.12\" newipdict[\"k8s-cp2\"]=\"192.168.122.13\" newipdict[\"k8s-ws1\"]=\"192.168.122.14\" newipdict[\"k8s-ws2\"]=\"192.168.122.15\" newipdict[\"k8s-ws3\"]=\"192.168.122.16\" default.xml file default.xml file is a modified version of default network created by libvirt/KVM. This file just add domain name to let server names DNS resolution working. Create default.xml file copying the following lines: <network> <name>default</name> <uuid>067c864a-2704-4dbb-b997-2b3006640623</uuid> <forward mode='nat'> <nat> <port start='1024' end='65535'/> </nat> </forward> <bridge name='virbr0' stp='on' delay='0'/> <mac address='52:54:00:a6:b9:2f'/> <domain name='abcdesktop.local' localOnly='yes'/> <ip address='192.168.122.1' netmask='255.255.255.0'> <dhcp> <range start='192.168.122.2' end='192.168.122.254'/> </dhcp> </ip> </network> create-vm.sh file This file is the template to create cluster VMs. VMs will be configured for french. You will have to modify Ubuntu Preseed for your country. (This is the hard part of the procedure) Create create-vm.sh file copying the following lines: #!/bin/bash if [ -z \"$1\" ] ; then echo Specify a virtual-machine name. exit 1 fi NAME=$1 NTPSERVER=\"fr.pool.ntp.org\" USERNAME=\"abcdesktop\" PASSWORD=\"password\" function cleanup_preseed_cfg() { rm -v -f $PRESEED_FILE rmdir -v $PRESEED_DIR } function generate_preseed_cfg() { PRESEED_DIR=/tmp/preseed$$ PRESEED_BASENAME=preseed.cfg PRESEED_FILE=$PRESEED_DIR/$PRESEED_BASENAME mkdir -p $PRESEED_DIR cat > $PRESEED_FILE <<EOF d-i debian-installer/language string C d-i debian-installer/locale string fr_FR.UTF-8 d-i debian-installer/country string FR d-i keymap select fr(latin9) d-i keyboard-configuration/toggle select No toggling d-i keyboard-configuration/layout string French d-i keyboard-configuration/variant string d-i console-setup/ask_detect boolean false d-i console-setup/layoutcode string fr d-i netcfg/choose_interface select auto d-i netcfg/get_hostname string $NAME d-i netcfg/get_domain string localdomain d-i netcfg/wireless_wep string d-i mirror/country string FR d-i mirror/http/hostname string archive.ubuntu.com d-i mirror/http/directory string /ubuntu d-i mirror/http/proxy string $PROXY d-i mirror/http/mirror select archive.ubuntu.com d-i clock-setup/utc boolean true d-i time/zone string Europ/Paris d-i clock-setup/ntp boolean true d-i clock-setup/ntp-server string $NTPSERVER d-i partman-auto/method string lvm d-i partman-lvm/device_remove_lvm boolean true d-i partman-lvm/confirm boolean true d-i partman-lvm/confirm_nooverwrite boolean true d-i partman-auto-lvm/guided_size string max # - atomic: all files in one partition # - home: separate /home partition # - multi: separate /home, /usr, /var, and /tmp partitions d-i partman-auto/choose_recipe select atomic d-i partman-partitioning/confirm_write_new_label boolean true d-i partman/choose_partition select Finish partitioning and write changes to disk d-i partman/confirm boolean true d-i partman/confirm_nooverwrite boolean true d-i passwd/user-fullname string $USERNAME d-i passwd/username string $USERNAME d-i passwd/user-password password $PASSWORD d-i passwd/user-password-again password $PASSWORD d-i user-setup/allow-password-weak boolean true d-i user-setup/encrypt-home boolean false #tasksel tasksel/first multiselect tasksel tasksel/first multiselect standard d-i apt-setup/restricted boolean true d-i apt-setup/universe boolean true d-i apt-setup/backports boolean true d-i apt-setup/local0/repository string deb https://apt.kubernetes.io/ kubernetes-xenial main d-i apt-setup/local0/comment string Kubernetes Packages d-i apt-setup/local0/source boolean false d-i apt-setup/local0/key string http://packages.cloud.google.com/apt/doc/apt-key.gpg d-i pkgsel/include string openssh-server build-essential acpid git-core ntp \\ docker.io containerd gnupg openssl iptables acl \\ python3-openssl apt-transport-https kubectl=1.17.0-00 kubelet=1.17.0-00 kubeadm=1.17.0-00 d-i pkgsel/upgrade select none d-i pkgsel/update-policy select none d-i grub-installer/only_debian boolean true d-i grub-installer/with_other_os boolean true d-i finish-install/reboot_in_progress note d-i preseed/late_command string \\ sed -i \"s;quiet;quiet console=ttyS0;\" /target/etc/default/grub ; \\ sed -i \"s;quiet;quiet console=ttyS0;g\" /target/boot/grub/grub.cfg ; \\ echo '$USERNAME ALL=(ALL) NOPASSWD: ALL' >/target/etc/sudoers.d/$USERNAME ; \\ in-target chmod 440 /etc/sudoers.d/$USERNAME ; \\ in-target swapoff -a ; \\ in-target rm -f /swapfile ; \\ in-target usermod -aG docker $USERNAME ; \\ in-target sed -ri '/\\sswap\\s/s/^#?/#/' /etc/fstab ; \\ in-target sed -i \"/ExecStart/s/$/ -H tcp:\\/\\/0.0.0.0:2376/g\" /lib/systemd/system/docker.service ; \\ in-target systemctl enable docker.service ; \\ in-target mkdir /mnt/oio ; \\ in-target rm -f /etc/udev/rules.d/70-persistent-net.rules EOF } generate_preseed_cfg sudo virt-install \\ --name $1 \\ --ram 2096 \\ --check all=off \\ --disk path=/var/lib/libvirt/images/$1.qcow2,size=30,bus=virtio \\ --vcpus 2 \\ --os-type linux \\ --os-variant ubuntu18.04 \\ --network bridge=virbr0 \\ --graphics none \\ --console pty,target_type=serial \\ --initrd-inject $PRESEED_FILE \\ --location 'http://gb.archive.ubuntu.com/ubuntu/dists/bionic/main/installer-amd64/' \\ --extra-args 'console=ttyS0,115200n8 serial' cleanup_preseed_cfg Change rights to make file executable: chmod 777 create-vm.sh do_all.sh file This script will check VMs to create and if not available, will call VM template creation script and add necessary network entries. Create do_all.sh file copying the following lines: #!/bin/bash source serverlist.sh guesttowait=() # check if guest already exists vms=$(virsh list --all|tail -n +3|head -n -1|awk '{ print $2 }') for vm in ${!newipdict[@]} do if [[ $vms =~ \"${vm}\" ]] then echo \"${vm} already exists ! We won't run guest creation for this value\" else echo \"Creating guest ${vm} this may take several minutes\" guesttowait+=(\"${vm}\") ./create-vm.sh ${vm} & fi; done nbtowait=${#guesttowait[@]} if [ \"$nbtowait\" -eq 0 ] then echo \"All guests already created, nothing to do...\" exit 0 fi sleep 1 echo \"Adding domain name for cluster name resolving\" virsh net-undefine default virsh net-define default.xml virsh start default virsh net-autostart default concserv=$( IFS=$'|'; echo \"${guesttowait[*]}\" ) nb=$(virsh list --all | grep -E ${concserv} | grep \"shut off\"|wc -l) while [ \"$nb\" -ne \"$nbtowait\" ] do echo \"still waiting for ${guesttowait[*]} to create and shut off\" sleep 10 # concserv=$( IFS=$'|'; echo \"${guesttowait[*]}\" ) nb=$(virsh list --all | grep -E ${concserv} | grep \"shut off\"|wc -l) virsh list --all | grep -E concserv done for name in ${guesttowait[*]} do echo \"Fixing IP for $name\" mac=$(virsh domiflist ${name}|head -n +3|tail -n +3|awk '{print $5}') newip=${newipdict[$name]}; todelete=$(virsh net-dumpxml default | grep \"${name}\"| grep -o \"<[^>]*>\") if [[ ! -z $todelete ]] then echo \"deleting : ${todelete}\" virsh net-update default delete ip-dhcp-host \"${todelete}\" --live --config fi echo \"creating : <host mac='${mac}' name='${name}' ip='${newip}'/>\" virsh net-update default add ip-dhcp-host \"<host mac='${mac}' name='${name}' ip='${newip}'/>\" --live --config echo \"restarting link\" virsh domif-setlink ${name} ${mac} down virsh domif-setlink ${name} ${mac} up done virsh net-dumpxml default Change rights to make file executable: chmod 777 do_all.sh delete-vm.sh file This script will read server list and delete all matching VM names. Create delete-vm.sh file copying the following lines: #!/bin/bash source serverlist.sh vms=$(virsh list --all|tail -n +3|head -n -1|awk '{ print $2 }') for vm in ${!newipdict[@]} do if [[ $vms =~ \"${vm}\" ]] then echo \"Deleting ${vm}\" sudo virsh shutdown ${vm} sudo virsh destroy ${vm} sudo virsh undefine ${vm} --remove-all-storage echo \"${vm} deleted\" else echo \"VM ${vm} not found. We do nothing\" fi; done virsh list --all Change rights to make file executable: chmod 777 delete-vm.sh Run cluster creation Cluster creation will create the 6 necessary VMs. The process will be long (about 1 hour, depending off your network connection) as we will download a Ubuntu 18.04 and all necessary packages for kubernetes and abcdesktop. Run the following command and go for a coffee : do_all.sh During VMs creation, you will see the following message every 10 seconds : still waiting for k8s-master k8s-cp1 k8s-cp2 k8s-ws1 k8s-ws2 k8s-ws3 to create and shut off Script will wait for all servers to be created and shut down before creating network connections Once everything has been done, you should see the following state for all VMs : sudo virsh list --all Id Name State ----------------------------- - k8s-cp1 shut off - k8s-cp2 shut off - k8s-master shut off - k8s-ws1 shut off - k8s-ws2 shut off - k8s-ws3 shut off All servers can now be started manually with the following commands or using virt-manager GUI : virsh start k8s-master virsh start k8s-cp1 virsh start k8s-cp2 virsh start k8s-vm1 virsh start k8s-vm2 virsh start k8s-vm3 Kubernetes cluster creation At this state, you are ready to create kubernetes cluster. We will create HAproxy configuration and init master controle plane, additionnal control planes and workers. HAproxy server HAproxy will be the entrypoint for kubernetes control planes and abcdesktop access. Connect k8s-master using ssh (default password is password ): ssh abcdesktop@192.168.122.11 Install haproxy package: sudo apt install haproxy Modify haproxy configuration: sudo vi /etc/haproxy/haproxy.cfg global log /dev/log local0 log /dev/log local1 notice chroot /var/lib/haproxy stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners stats timeout 30s user haproxy group haproxy daemon # Default SSL material locations ca-base /etc/ssl/certs crt-base /etc/ssl/private # Default ciphers to use on SSL-enabled listening sockets. # For more information, see ciphers(1SSL). This list is from: # https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/ # An alternative list with additional directives can be obtained from # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS ssl-default-bind-options no-sslv3 defaults log global mode tcp option tcplog option dontlognull timeout connect 5000 timeout client 50000 timeout server 50000 errorfile 400 /etc/haproxy/errors/400.http errorfile 403 /etc/haproxy/errors/403.http errorfile 408 /etc/haproxy/errors/408.http errorfile 500 /etc/haproxy/errors/500.http errorfile 502 /etc/haproxy/errors/502.http errorfile 503 /etc/haproxy/errors/503.http errorfile 504 /etc/haproxy/errors/504.http frontend api-front bind 192.168.122.11:8443 bind 127.0.0.1:8443 mode tcp option tcplog use_backend api-backend backend api-backend mode tcp option tcplog option tcp-check balance roundrobin # balance source server master1 192.168.122.11:6443 check server master2 192.168.122.12:6443 check server master3 192.168.122.13:6443 check frontend api-front2 bind 192.168.122.11:1234 bind 127.0.0.1:1234 mode tcp option tcplog use_backend api-backend2 backend api-backend2 mode tcp option tcplog option tcp-check # option httpcheck balance roundrobin # balance source default-server inter 3s fall 3 rise 2 server ws1 192.168.122.14:30443 check server ws2 192.168.122.15:30443 check server ws3 192.168.122.16:30443 check Control planes will communicate over 192.168.122.11:8443 entrypoint abcdesktop will be available connecting 192.168.122.11:1234 address Restart haproxy service to apply configuration sudo systemctl restart haproxy.service Enable haproxy service: sudo systemctl enable haproxy.service Init master controle plane Create kubeadm config file : vi ./kubeadm-config.yaml apiVersion: kubeadm.k8s.io/v1beta1 kind: ClusterConfiguration kubernetesVersion: stable apiServer: certSANs: - \"192.168.122.11\" controlPlaneEndpoint: \"192.168.122.11:8443\" networking: podSubnet: \"10.244.0.0/16\" Launch kubeadm init configuration sudo kubeadm init --config=kubeadm-config.yaml --upload-certs Last messages of the command are the important parts, copy them in a file : Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ You can now join any number of the control-plane node running the following command on each as root: kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 \\ --control-plane --certificate-key a71a13880fd492e32436df72d5a872f05205748a697f6c63f0d2a9d6c66eaf76 Please note that the certificate-key gives access to cluster sensitive data, keep it secret! As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use \"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward. Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 First execute the following part of the message : mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config Now connect using ssh to all cotrol planes (k8s-cp1 and k8s-cp2) and execute the following command to let additionnal control planes to join cluster (Copy/Past command from master init messages) : sudo kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 \\ --control-plane --certificate-key a71a13880fd492e32436df72d5a872f05205748a697f6c63f0d2a9d6c66eaf76 Now connect using ssh to all workers (k8s-ws1, k8s-ws2 and k8s-ws3) and execute the following command (Copy/Past command from master init messages): sudo kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 At this state, all nodes should be to \"NotReady\" state. abcdesktop@k8s-master:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-cp1 NotReady master 56m v1.17.0 k8s-cp2 NotReady master 58m v1.17.0 k8s-master NotReady master 59m v1.17.0 k8s-ws1 NotReady <none> 7m2s v1.17.0 k8s-ws2 NotReady <none> 89s v1.17.0 k8s-ws3 NotReady <none> 39s v1.17.0 Kubernetes need cni definition to become \"Ready\". We will use flannel for this: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml Now, all nodes should be \"Ready\" abcdesktop@k8s-master:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-cp1 Ready master 56m v1.17.0 k8s-cp2 Ready master 58m v1.17.0 k8s-master Ready master 59m v1.17.0 k8s-ws1 Ready <none> 7m2s v1.17.0 k8s-ws2 Ready <none> 89s v1.17.0 k8s-ws3 Ready <none> 39s v1.17.0 Install abcdesktop First we create opendeksotp namespace: sudo kubectl create namespace abcdesktop Change default namespace to abcdesktop: kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop Create abcdesktop secrets: # build rsa kay pairs for jwt payload # 256 bits is a small value, change here if need # rm abcdesktop_jwt_desktop_payload_private_key.pem _abcdesktop_jwt_desktop_payload_public_key.pem abcdesktop_jwt_desktop_payload_public_key.pem # rm abcdesktop_jwt_desktop_signing_private_key.pem abcdesktop_jwt_desktop_signing_public_key.pem openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 512 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # kubectl delete secrets abcdesktopjwtdesktoppayload abcdesktopjwtdesktopsigning -n abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop At this step it is recommended to pull necessary docker images on each workers. Kubernetes will attemp to pull them, but you will have no monitoring of pull advance. As abcdesktop images are quite heavy, this would result in various errors when trying to access abcdesktop before the end. Minimal image list can be found at top of this link : kubernetes abcdesktop deployment will be done with the following command : kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml abcdesktop@k8s-master:~$ kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created deployment.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created abcdesktop.yaml can be downloaded manually here : https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml abcdesktop deployment can be verified with the following command : abcdesktop@k8s-master:~$ kubectl get pods NAME READY STATUS RESTARTS AGE daemonset-nginx-4ql2g 1/1 Running 0 34m daemonset-nginx-7zxdc 1/1 Running 0 34m daemonset-nginx-s8wmk 1/1 Running 0 34m daemonset-pyos-97qmt 1/1 Running 0 34m daemonset-pyos-k496h 1/1 Running 0 34m daemonset-pyos-wngpg 1/1 Running 0 34m memcached-od-db69c45fb-hbzld 1/1 Running 0 34m mongodb-od-86bbf5c655-xjldj 1/1 Running 0 34m speedtest-od-6567f8b4c4-tfqsl 1/1 Running 0 34m If everything is at \"Running\" status, you can then start testing Test abcdesktop Simply connect to the following address with your web browser : http://192.168.122.11:1234","title":"Kubernetesadvanced"},{"location":"1.0/setup/kubernetesadvanced/#install-opendekstop-on-a-cluster","text":"For advanced installation, we will put abcdesktop on a kubernetes multi-master cluster. For this, we will need 6 VMs : - 1 Master Control Plane - 2 Control Plane - 3 Workers All VMs require 2 CPU, 2Go Ram and 30Go HDD. Meaning you will need 12 CPU, 12Go Ram and 180Go HDD The following procedure has been executed on a Ubuntu 18.04 server.","title":"Install Opendekstop on a cluster"},{"location":"1.0/setup/kubernetesadvanced/#create-vms","text":"To create and manage VMs, we will create scripts and files : - serverlist.sh - Servers Names and IP to manage - default.xml - Modified KVM default network definition to add domain name for DNS resolution inside cluster - create-vm.sh - Script to create pre-configured Ubuntu 18.04 VMs - do_all.sh - Script to create all VMs and network for all cluster servers - delete-vm.sh - Script to delete all created VMs All chapters actions will be done on host server. VMs creation can be skipped if you have your own cluster or you wan't to create it in a different way.","title":"Create VMs"},{"location":"1.0/setup/kubernetesadvanced/#install-libvirt-and-kvm-pacakges","text":"sudo apt-get install -qy \\ qemu-kvm virtinst bridge-utils cpu-checker libvirt-clients libvirt-daemon-system","title":"Install libvirt and kvm pacakges"},{"location":"1.0/setup/kubernetesadvanced/#create-vm-creation-files","text":"","title":"Create VM creation files"},{"location":"1.0/setup/kubernetesadvanced/#serverlistsh-file","text":"serverlist.sh file will let you define server names and IP using a bash dictionnary. Create serverlist.sh file copying the following lines: unset newipdict declare -A newipdict newipdict[\"k8s-master\"]=\"192.168.122.11\" newipdict[\"k8s-cp1\"]=\"192.168.122.12\" newipdict[\"k8s-cp2\"]=\"192.168.122.13\" newipdict[\"k8s-ws1\"]=\"192.168.122.14\" newipdict[\"k8s-ws2\"]=\"192.168.122.15\" newipdict[\"k8s-ws3\"]=\"192.168.122.16\"","title":"serverlist.sh file"},{"location":"1.0/setup/kubernetesadvanced/#defaultxml-file","text":"default.xml file is a modified version of default network created by libvirt/KVM. This file just add domain name to let server names DNS resolution working. Create default.xml file copying the following lines: <network> <name>default</name> <uuid>067c864a-2704-4dbb-b997-2b3006640623</uuid> <forward mode='nat'> <nat> <port start='1024' end='65535'/> </nat> </forward> <bridge name='virbr0' stp='on' delay='0'/> <mac address='52:54:00:a6:b9:2f'/> <domain name='abcdesktop.local' localOnly='yes'/> <ip address='192.168.122.1' netmask='255.255.255.0'> <dhcp> <range start='192.168.122.2' end='192.168.122.254'/> </dhcp> </ip> </network>","title":"default.xml file"},{"location":"1.0/setup/kubernetesadvanced/#create-vmsh-file","text":"This file is the template to create cluster VMs. VMs will be configured for french. You will have to modify Ubuntu Preseed for your country. (This is the hard part of the procedure) Create create-vm.sh file copying the following lines: #!/bin/bash if [ -z \"$1\" ] ; then echo Specify a virtual-machine name. exit 1 fi NAME=$1 NTPSERVER=\"fr.pool.ntp.org\" USERNAME=\"abcdesktop\" PASSWORD=\"password\" function cleanup_preseed_cfg() { rm -v -f $PRESEED_FILE rmdir -v $PRESEED_DIR } function generate_preseed_cfg() { PRESEED_DIR=/tmp/preseed$$ PRESEED_BASENAME=preseed.cfg PRESEED_FILE=$PRESEED_DIR/$PRESEED_BASENAME mkdir -p $PRESEED_DIR cat > $PRESEED_FILE <<EOF d-i debian-installer/language string C d-i debian-installer/locale string fr_FR.UTF-8 d-i debian-installer/country string FR d-i keymap select fr(latin9) d-i keyboard-configuration/toggle select No toggling d-i keyboard-configuration/layout string French d-i keyboard-configuration/variant string d-i console-setup/ask_detect boolean false d-i console-setup/layoutcode string fr d-i netcfg/choose_interface select auto d-i netcfg/get_hostname string $NAME d-i netcfg/get_domain string localdomain d-i netcfg/wireless_wep string d-i mirror/country string FR d-i mirror/http/hostname string archive.ubuntu.com d-i mirror/http/directory string /ubuntu d-i mirror/http/proxy string $PROXY d-i mirror/http/mirror select archive.ubuntu.com d-i clock-setup/utc boolean true d-i time/zone string Europ/Paris d-i clock-setup/ntp boolean true d-i clock-setup/ntp-server string $NTPSERVER d-i partman-auto/method string lvm d-i partman-lvm/device_remove_lvm boolean true d-i partman-lvm/confirm boolean true d-i partman-lvm/confirm_nooverwrite boolean true d-i partman-auto-lvm/guided_size string max # - atomic: all files in one partition # - home: separate /home partition # - multi: separate /home, /usr, /var, and /tmp partitions d-i partman-auto/choose_recipe select atomic d-i partman-partitioning/confirm_write_new_label boolean true d-i partman/choose_partition select Finish partitioning and write changes to disk d-i partman/confirm boolean true d-i partman/confirm_nooverwrite boolean true d-i passwd/user-fullname string $USERNAME d-i passwd/username string $USERNAME d-i passwd/user-password password $PASSWORD d-i passwd/user-password-again password $PASSWORD d-i user-setup/allow-password-weak boolean true d-i user-setup/encrypt-home boolean false #tasksel tasksel/first multiselect tasksel tasksel/first multiselect standard d-i apt-setup/restricted boolean true d-i apt-setup/universe boolean true d-i apt-setup/backports boolean true d-i apt-setup/local0/repository string deb https://apt.kubernetes.io/ kubernetes-xenial main d-i apt-setup/local0/comment string Kubernetes Packages d-i apt-setup/local0/source boolean false d-i apt-setup/local0/key string http://packages.cloud.google.com/apt/doc/apt-key.gpg d-i pkgsel/include string openssh-server build-essential acpid git-core ntp \\ docker.io containerd gnupg openssl iptables acl \\ python3-openssl apt-transport-https kubectl=1.17.0-00 kubelet=1.17.0-00 kubeadm=1.17.0-00 d-i pkgsel/upgrade select none d-i pkgsel/update-policy select none d-i grub-installer/only_debian boolean true d-i grub-installer/with_other_os boolean true d-i finish-install/reboot_in_progress note d-i preseed/late_command string \\ sed -i \"s;quiet;quiet console=ttyS0;\" /target/etc/default/grub ; \\ sed -i \"s;quiet;quiet console=ttyS0;g\" /target/boot/grub/grub.cfg ; \\ echo '$USERNAME ALL=(ALL) NOPASSWD: ALL' >/target/etc/sudoers.d/$USERNAME ; \\ in-target chmod 440 /etc/sudoers.d/$USERNAME ; \\ in-target swapoff -a ; \\ in-target rm -f /swapfile ; \\ in-target usermod -aG docker $USERNAME ; \\ in-target sed -ri '/\\sswap\\s/s/^#?/#/' /etc/fstab ; \\ in-target sed -i \"/ExecStart/s/$/ -H tcp:\\/\\/0.0.0.0:2376/g\" /lib/systemd/system/docker.service ; \\ in-target systemctl enable docker.service ; \\ in-target mkdir /mnt/oio ; \\ in-target rm -f /etc/udev/rules.d/70-persistent-net.rules EOF } generate_preseed_cfg sudo virt-install \\ --name $1 \\ --ram 2096 \\ --check all=off \\ --disk path=/var/lib/libvirt/images/$1.qcow2,size=30,bus=virtio \\ --vcpus 2 \\ --os-type linux \\ --os-variant ubuntu18.04 \\ --network bridge=virbr0 \\ --graphics none \\ --console pty,target_type=serial \\ --initrd-inject $PRESEED_FILE \\ --location 'http://gb.archive.ubuntu.com/ubuntu/dists/bionic/main/installer-amd64/' \\ --extra-args 'console=ttyS0,115200n8 serial' cleanup_preseed_cfg Change rights to make file executable: chmod 777 create-vm.sh","title":"create-vm.sh file"},{"location":"1.0/setup/kubernetesadvanced/#do_allsh-file","text":"This script will check VMs to create and if not available, will call VM template creation script and add necessary network entries. Create do_all.sh file copying the following lines: #!/bin/bash source serverlist.sh guesttowait=() # check if guest already exists vms=$(virsh list --all|tail -n +3|head -n -1|awk '{ print $2 }') for vm in ${!newipdict[@]} do if [[ $vms =~ \"${vm}\" ]] then echo \"${vm} already exists ! We won't run guest creation for this value\" else echo \"Creating guest ${vm} this may take several minutes\" guesttowait+=(\"${vm}\") ./create-vm.sh ${vm} & fi; done nbtowait=${#guesttowait[@]} if [ \"$nbtowait\" -eq 0 ] then echo \"All guests already created, nothing to do...\" exit 0 fi sleep 1 echo \"Adding domain name for cluster name resolving\" virsh net-undefine default virsh net-define default.xml virsh start default virsh net-autostart default concserv=$( IFS=$'|'; echo \"${guesttowait[*]}\" ) nb=$(virsh list --all | grep -E ${concserv} | grep \"shut off\"|wc -l) while [ \"$nb\" -ne \"$nbtowait\" ] do echo \"still waiting for ${guesttowait[*]} to create and shut off\" sleep 10 # concserv=$( IFS=$'|'; echo \"${guesttowait[*]}\" ) nb=$(virsh list --all | grep -E ${concserv} | grep \"shut off\"|wc -l) virsh list --all | grep -E concserv done for name in ${guesttowait[*]} do echo \"Fixing IP for $name\" mac=$(virsh domiflist ${name}|head -n +3|tail -n +3|awk '{print $5}') newip=${newipdict[$name]}; todelete=$(virsh net-dumpxml default | grep \"${name}\"| grep -o \"<[^>]*>\") if [[ ! -z $todelete ]] then echo \"deleting : ${todelete}\" virsh net-update default delete ip-dhcp-host \"${todelete}\" --live --config fi echo \"creating : <host mac='${mac}' name='${name}' ip='${newip}'/>\" virsh net-update default add ip-dhcp-host \"<host mac='${mac}' name='${name}' ip='${newip}'/>\" --live --config echo \"restarting link\" virsh domif-setlink ${name} ${mac} down virsh domif-setlink ${name} ${mac} up done virsh net-dumpxml default Change rights to make file executable: chmod 777 do_all.sh","title":"do_all.sh file"},{"location":"1.0/setup/kubernetesadvanced/#delete-vmsh-file","text":"This script will read server list and delete all matching VM names. Create delete-vm.sh file copying the following lines: #!/bin/bash source serverlist.sh vms=$(virsh list --all|tail -n +3|head -n -1|awk '{ print $2 }') for vm in ${!newipdict[@]} do if [[ $vms =~ \"${vm}\" ]] then echo \"Deleting ${vm}\" sudo virsh shutdown ${vm} sudo virsh destroy ${vm} sudo virsh undefine ${vm} --remove-all-storage echo \"${vm} deleted\" else echo \"VM ${vm} not found. We do nothing\" fi; done virsh list --all Change rights to make file executable: chmod 777 delete-vm.sh","title":"delete-vm.sh file"},{"location":"1.0/setup/kubernetesadvanced/#run-cluster-creation","text":"Cluster creation will create the 6 necessary VMs. The process will be long (about 1 hour, depending off your network connection) as we will download a Ubuntu 18.04 and all necessary packages for kubernetes and abcdesktop. Run the following command and go for a coffee : do_all.sh During VMs creation, you will see the following message every 10 seconds : still waiting for k8s-master k8s-cp1 k8s-cp2 k8s-ws1 k8s-ws2 k8s-ws3 to create and shut off Script will wait for all servers to be created and shut down before creating network connections Once everything has been done, you should see the following state for all VMs : sudo virsh list --all Id Name State ----------------------------- - k8s-cp1 shut off - k8s-cp2 shut off - k8s-master shut off - k8s-ws1 shut off - k8s-ws2 shut off - k8s-ws3 shut off All servers can now be started manually with the following commands or using virt-manager GUI : virsh start k8s-master virsh start k8s-cp1 virsh start k8s-cp2 virsh start k8s-vm1 virsh start k8s-vm2 virsh start k8s-vm3","title":"Run cluster creation"},{"location":"1.0/setup/kubernetesadvanced/#kubernetes-cluster-creation","text":"At this state, you are ready to create kubernetes cluster. We will create HAproxy configuration and init master controle plane, additionnal control planes and workers.","title":"Kubernetes cluster creation"},{"location":"1.0/setup/kubernetesadvanced/#haproxy-server","text":"HAproxy will be the entrypoint for kubernetes control planes and abcdesktop access. Connect k8s-master using ssh (default password is password ): ssh abcdesktop@192.168.122.11 Install haproxy package: sudo apt install haproxy Modify haproxy configuration: sudo vi /etc/haproxy/haproxy.cfg global log /dev/log local0 log /dev/log local1 notice chroot /var/lib/haproxy stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners stats timeout 30s user haproxy group haproxy daemon # Default SSL material locations ca-base /etc/ssl/certs crt-base /etc/ssl/private # Default ciphers to use on SSL-enabled listening sockets. # For more information, see ciphers(1SSL). This list is from: # https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/ # An alternative list with additional directives can be obtained from # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS ssl-default-bind-options no-sslv3 defaults log global mode tcp option tcplog option dontlognull timeout connect 5000 timeout client 50000 timeout server 50000 errorfile 400 /etc/haproxy/errors/400.http errorfile 403 /etc/haproxy/errors/403.http errorfile 408 /etc/haproxy/errors/408.http errorfile 500 /etc/haproxy/errors/500.http errorfile 502 /etc/haproxy/errors/502.http errorfile 503 /etc/haproxy/errors/503.http errorfile 504 /etc/haproxy/errors/504.http frontend api-front bind 192.168.122.11:8443 bind 127.0.0.1:8443 mode tcp option tcplog use_backend api-backend backend api-backend mode tcp option tcplog option tcp-check balance roundrobin # balance source server master1 192.168.122.11:6443 check server master2 192.168.122.12:6443 check server master3 192.168.122.13:6443 check frontend api-front2 bind 192.168.122.11:1234 bind 127.0.0.1:1234 mode tcp option tcplog use_backend api-backend2 backend api-backend2 mode tcp option tcplog option tcp-check # option httpcheck balance roundrobin # balance source default-server inter 3s fall 3 rise 2 server ws1 192.168.122.14:30443 check server ws2 192.168.122.15:30443 check server ws3 192.168.122.16:30443 check Control planes will communicate over 192.168.122.11:8443 entrypoint abcdesktop will be available connecting 192.168.122.11:1234 address Restart haproxy service to apply configuration sudo systemctl restart haproxy.service Enable haproxy service: sudo systemctl enable haproxy.service","title":"HAproxy server"},{"location":"1.0/setup/kubernetesadvanced/#init-master-controle-plane","text":"Create kubeadm config file : vi ./kubeadm-config.yaml apiVersion: kubeadm.k8s.io/v1beta1 kind: ClusterConfiguration kubernetesVersion: stable apiServer: certSANs: - \"192.168.122.11\" controlPlaneEndpoint: \"192.168.122.11:8443\" networking: podSubnet: \"10.244.0.0/16\" Launch kubeadm init configuration sudo kubeadm init --config=kubeadm-config.yaml --upload-certs Last messages of the command are the important parts, copy them in a file : Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ You can now join any number of the control-plane node running the following command on each as root: kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 \\ --control-plane --certificate-key a71a13880fd492e32436df72d5a872f05205748a697f6c63f0d2a9d6c66eaf76 Please note that the certificate-key gives access to cluster sensitive data, keep it secret! As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use \"kubeadm init phase upload-certs --upload-certs\" to reload certs afterward. Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 First execute the following part of the message : mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config Now connect using ssh to all cotrol planes (k8s-cp1 and k8s-cp2) and execute the following command to let additionnal control planes to join cluster (Copy/Past command from master init messages) : sudo kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 \\ --control-plane --certificate-key a71a13880fd492e32436df72d5a872f05205748a697f6c63f0d2a9d6c66eaf76 Now connect using ssh to all workers (k8s-ws1, k8s-ws2 and k8s-ws3) and execute the following command (Copy/Past command from master init messages): sudo kubeadm join 192.168.122.11:8443 --token b6e1s0.e1h4r8h6byavke8z \\ --discovery-token-ca-cert-hash sha256:54b72a18e02641f5b38bb48b436814530333b0ab16f6c1d72408abb547a49ca9 At this state, all nodes should be to \"NotReady\" state. abcdesktop@k8s-master:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-cp1 NotReady master 56m v1.17.0 k8s-cp2 NotReady master 58m v1.17.0 k8s-master NotReady master 59m v1.17.0 k8s-ws1 NotReady <none> 7m2s v1.17.0 k8s-ws2 NotReady <none> 89s v1.17.0 k8s-ws3 NotReady <none> 39s v1.17.0 Kubernetes need cni definition to become \"Ready\". We will use flannel for this: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml Now, all nodes should be \"Ready\" abcdesktop@k8s-master:~$ kubectl get nodes NAME STATUS ROLES AGE VERSION k8s-cp1 Ready master 56m v1.17.0 k8s-cp2 Ready master 58m v1.17.0 k8s-master Ready master 59m v1.17.0 k8s-ws1 Ready <none> 7m2s v1.17.0 k8s-ws2 Ready <none> 89s v1.17.0 k8s-ws3 Ready <none> 39s v1.17.0","title":"Init master controle plane"},{"location":"1.0/setup/kubernetesadvanced/#install-abcdesktop","text":"First we create opendeksotp namespace: sudo kubectl create namespace abcdesktop Change default namespace to abcdesktop: kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop Create abcdesktop secrets: # build rsa kay pairs for jwt payload # 256 bits is a small value, change here if need # rm abcdesktop_jwt_desktop_payload_private_key.pem _abcdesktop_jwt_desktop_payload_public_key.pem abcdesktop_jwt_desktop_payload_public_key.pem # rm abcdesktop_jwt_desktop_signing_private_key.pem abcdesktop_jwt_desktop_signing_public_key.pem openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 512 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # kubectl delete secrets abcdesktopjwtdesktoppayload abcdesktopjwtdesktopsigning -n abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop At this step it is recommended to pull necessary docker images on each workers. Kubernetes will attemp to pull them, but you will have no monitoring of pull advance. As abcdesktop images are quite heavy, this would result in various errors when trying to access abcdesktop before the end. Minimal image list can be found at top of this link : kubernetes abcdesktop deployment will be done with the following command : kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml abcdesktop@k8s-master:~$ kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created deployment.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created abcdesktop.yaml can be downloaded manually here : https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml abcdesktop deployment can be verified with the following command : abcdesktop@k8s-master:~$ kubectl get pods NAME READY STATUS RESTARTS AGE daemonset-nginx-4ql2g 1/1 Running 0 34m daemonset-nginx-7zxdc 1/1 Running 0 34m daemonset-nginx-s8wmk 1/1 Running 0 34m daemonset-pyos-97qmt 1/1 Running 0 34m daemonset-pyos-k496h 1/1 Running 0 34m daemonset-pyos-wngpg 1/1 Running 0 34m memcached-od-db69c45fb-hbzld 1/1 Running 0 34m mongodb-od-86bbf5c655-xjldj 1/1 Running 0 34m speedtest-od-6567f8b4c4-tfqsl 1/1 Running 0 34m If everything is at \"Running\" status, you can then start testing","title":"Install abcdesktop"},{"location":"1.0/setup/kubernetesadvanced/#test-abcdesktop","text":"Simply connect to the following address with your web browser : http://192.168.122.11:1234","title":"Test abcdesktop"},{"location":"1.0/setup/kubernetesmode/","text":"Setup kubernetes for GNU/Linux This section apply only to configure kubernetes for GNU/Linu. The Docker setup process for MacOS/X and for Microsoft Windows is ready to use by cheching the kubernetes options. abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdesktop.io is working in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all user containers can be distributed on different hosts. Requirements Linux Requierements Installation The following commands will let you prepare kubernetes on one node. In this case, all applications run on a single node. To deploy a abcdesktopio on multi nodes read the next section. It's recommended to start with a single node. Initialize Kubernetes Master Node Step 1: Disable swap memory (if running) You need to disable swap memory on nodes as Kubernetes does not perform properly on a system that is using swap memory. Run the following command in order to disable swap memory. swapoff -a If you have some swaps in /etc/fstab, just comment them out. swapoff -a will disable all swaps temporarily. disable by masking it with sysctl: systemctl mask dev-zram1.swap Created symlink /etc/systemd/system/dev-zram1.swap \u2192 /dev/null. Step 2: Initialize Kubernetes Run the following command as sudo on the master node: kubeadm init --pod-network-cidr=10.244.0.0/16 The process might take a minute or more depending on your internet connection. To be able to manage your kubernetes server, you need to run the following commands as a regular user: mkdir -p $HOME/.kube cp -i /etc/kubernetes/admin.conf $HOME/.kube/config chown $(id -u):$(id -g) $HOME/.kube/config Step 3: Remove Master Node Taint Taints are Kubernetes flags to prevent Pod Scheduling. Remove the taints on the master so that you can schedule pods on it. kubectl taint node `hostname` node-role.kubernetes.io/master- It should return the following string. node/<your-hostname> untainted Taints are Kubernetes flags to prevent Pod Scheduling. Confirm that you now have a node in your cluster with the following command. kubectl get nodes -o wide It should return something like the following. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME <your-hostname> NotReady master 2m v1.19.3 192.168.8.2 <none> Ubuntu 20.04.1 LTS 5.4.0-52-generic docker://19.3.13 Step 4: Deploy a Pod Network through the master node A pod network is a medium of communication between the nodes of a network. We are deploying a Flannel pod network on our cluster through the following command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml It should return the following strings. podsecuritypolicy.policy/psp.flannel.unprivileged created clusterrole.rbac.authorization.k8s.io/flannel created clusterrolebinding.rbac.authorization.k8s.io/flannel created serviceaccount/flannel created configmap/kube-flannel-cfg created daemonset.apps/kube-flannel-ds created Check node status Now when you see the status of the nodes, you will see that the master-node is ready : kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME <your-hostname> Ready master 5m v1.19.3 192.168.8.2 <none> Ubuntu 20.04.1 LTS 5.4.0-52-generic docker://19.3.13 At this step, there is no more Taints and your node is Ready . Next step, continue with the setup abcdesktop for kubernetes.","title":"Setup Kubernetes for GNU/Linux only"},{"location":"1.0/setup/kubernetesmode/#setup-kubernetes-for-gnulinux","text":"This section apply only to configure kubernetes for GNU/Linu. The Docker setup process for MacOS/X and for Microsoft Windows is ready to use by cheching the kubernetes options. abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdesktop.io is working in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all user containers can be distributed on different hosts.","title":"Setup kubernetes for GNU/Linux"},{"location":"1.0/setup/kubernetesmode/#requirements","text":"Linux Requierements","title":"Requirements"},{"location":"1.0/setup/kubernetesmode/#installation","text":"The following commands will let you prepare kubernetes on one node. In this case, all applications run on a single node. To deploy a abcdesktopio on multi nodes read the next section. It's recommended to start with a single node.","title":"Installation"},{"location":"1.0/setup/kubernetesmode/#initialize-kubernetes-master-node","text":"","title":"Initialize Kubernetes Master Node"},{"location":"1.0/setup/kubernetesmode/#step-1-disable-swap-memory-if-running","text":"You need to disable swap memory on nodes as Kubernetes does not perform properly on a system that is using swap memory. Run the following command in order to disable swap memory. swapoff -a If you have some swaps in /etc/fstab, just comment them out. swapoff -a will disable all swaps temporarily. disable by masking it with sysctl: systemctl mask dev-zram1.swap Created symlink /etc/systemd/system/dev-zram1.swap \u2192 /dev/null.","title":"Step 1: Disable swap memory (if running)"},{"location":"1.0/setup/kubernetesmode/#step-2-initialize-kubernetes","text":"Run the following command as sudo on the master node: kubeadm init --pod-network-cidr=10.244.0.0/16 The process might take a minute or more depending on your internet connection. To be able to manage your kubernetes server, you need to run the following commands as a regular user: mkdir -p $HOME/.kube cp -i /etc/kubernetes/admin.conf $HOME/.kube/config chown $(id -u):$(id -g) $HOME/.kube/config","title":"Step 2: Initialize Kubernetes"},{"location":"1.0/setup/kubernetesmode/#step-3-remove-master-node-taint","text":"Taints are Kubernetes flags to prevent Pod Scheduling. Remove the taints on the master so that you can schedule pods on it. kubectl taint node `hostname` node-role.kubernetes.io/master- It should return the following string. node/<your-hostname> untainted Taints are Kubernetes flags to prevent Pod Scheduling. Confirm that you now have a node in your cluster with the following command. kubectl get nodes -o wide It should return something like the following. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME <your-hostname> NotReady master 2m v1.19.3 192.168.8.2 <none> Ubuntu 20.04.1 LTS 5.4.0-52-generic docker://19.3.13","title":"Step 3: Remove Master Node Taint"},{"location":"1.0/setup/kubernetesmode/#step-4-deploy-a-pod-network-through-the-master-node","text":"A pod network is a medium of communication between the nodes of a network. We are deploying a Flannel pod network on our cluster through the following command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml It should return the following strings. podsecuritypolicy.policy/psp.flannel.unprivileged created clusterrole.rbac.authorization.k8s.io/flannel created clusterrolebinding.rbac.authorization.k8s.io/flannel created serviceaccount/flannel created configmap/kube-flannel-cfg created daemonset.apps/kube-flannel-ds created","title":"Step 4: Deploy a Pod Network through the master node"},{"location":"1.0/setup/kubernetesmode/#check-node-status","text":"Now when you see the status of the nodes, you will see that the master-node is ready : kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME <your-hostname> Ready master 5m v1.19.3 192.168.8.2 <none> Ubuntu 20.04.1 LTS 5.4.0-52-generic docker://19.3.13 At this step, there is no more Taints and your node is Ready . Next step, continue with the setup abcdesktop for kubernetes.","title":"Check node status"},{"location":"1.0/setup/novnc/","text":"Use noVNC as VNC Client Requirements A running dockerd last version An access to the docker public registry An access to the ubuntu repository An access to the github website to run git clone command An access to the bintray.com website to download a file AbcDeskopio use the amazing projet noVNC. noVNC is a VNC client JavaScript library. Before you start using noVNC get some information about it: noVNC description noVNC is an open source VNC client. noVNC is both a VNC client JavaScript library as well as an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android). Many companies, projects and products have integrated noVNC including OpenStack , OpenNebula , LibVNCServer , and ThinLinc . See the Projects and Companies wiki page for a more complete list with additional info and links. Browser Requirements noVNC uses many modern web technologies so a formal requirement list is not available. However these are the minimum versions we are currently aware of: Chrome 49, Firefox 44, Safari 11, Opera 36, IE 11, Edge 12 Features Supports all modern browsers including mobile (iOS, Android) Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG Supports scaling, clipping and resizing the desktop Local cursor rendering Clipboard copy/paste Translations Licensed mainly under the MPL 2.0 , see the license document for details Create a shared volume myshared Before creating containers, we need a shared volume, to share data and unix socket between containers. Run the docker volume create command. docker volume create myshared Start the first container myx11server Start the first graphical container named myx11server and forward the tcp port 6081 to the 6081 container tcp port. The tcp port 6081 will be use later by ws2tcp nodejs server. The volume myshared is mounted to /tmp Note: We do not need the default 5900 VNC tcp port any more. docker run -it -v myshared:/tmp --name myx11server -p 6081:6081 ubuntu:latest bash You should see a prompt like : root@6de36e574877:/# Install the package wget Install the library files for tigervnc. Package list: libx11-6 xkb-data x11-xkb-utils xauth libfile-readbackwards-perl netbase libaudit1 libbsd0 libgcrypt20 libgl1 libgnutls30 libjpeg8 libpam0g libpixman-1-0 libselinux1 libstdc++6 libsystemd0 libunwind8 libxau6 libxdmcp6 libxfont2 zlib1g libgl1-mesa-dri xfonts-base x11-xserver-utils xfonts-100dpi xfonts-scalable Those packages are used by tigervnc. We need to install them. apt-get update apt-get install -y wget apt-get install -y libx11-6 xkb-data x11-xkb-utils xauth libfile-readbackwards-perl netbase libaudit1 libbsd0 libgcrypt20 libgl1 libgnutls30 libjpeg8 libpam0g libpixman-1-0 libselinux1 libstdc++6 libsystemd0 libunwind8 libxau6 libxdmcp6 libxfont2 zlib1g libgl1-mesa-dri xfonts-base x11-xserver-utils xfonts-100dpi xfonts-scalable Download the last tigervnc X11 graphics server from the bintray.com web site wget \"https://bintray.com/tigervnc/stable/download_file?file_path=tigervnc-1.10.1.x86_64.tar.gz\" -O tigervnc-1.10.1.x86_64.tar.gz Untar the tigervnc-1.10.1.x86_64.tar.gz file in the container's root file system cd / tar -xvf tigervnc-1.10.1.x86_64.tar.gz cp -r /tigervnc-1.10.1.x86_64/usr/* /usr/ Start the tigervnc release 1.10. The tigervnc release 1.10 support the option rfbunixpath used by ws-tcp-bridge in next section Xvnc :0 -rfbunixpath /tmp/.x11vnc -SecurityTypes=none & You should read the output Xvnc TigerVNC 1.10.0 - built Dec 20 2019 07:12:07 Copyright (C) 1999-2019 TigerVNC Team and many others (see README.rst) See https://www.tigervnc.org for information on TigerVNC. Underlying X server release 12001000, The X.Org Foundation Tue Mar 3 11:05:48 2020 vncext: VNC extension running! vncext: Listening for VNC connections on /tmp/.x11vnc (mode 0600) vncext: created VNC server for screen 0 Check that the Xvnc TigerVNC release is 1.10.0 . Great, you have installed an X11 server inside a docker container, and the Xvnc server is listening for VNC connections on /tmp/.x11vnc. Install the ws-tcp-bridge ws-tcp-bridge translate websocket to tcp and have to listen on websocket tcp port 6081 and forward to local unix socket unix:/tmp/.x11vnc. ws-tcp-bridge is a nodejs server, then we need to install nodejs and npm. Before, install the package gcc g++ make curl apt-get install -y gcc g++ make curl Install nodejs and npm curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs Install ws-tcp-bridge npm install ws-tcp-bridge -g Start ws-tcp-bridge with the parameters --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc in background Add the & at the end of the command line to run this process in background /usr/bin/ws-tcp-bridge --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc & You should read on the standard output proxy mode ws -> tcp forwarding port 6081 to unix:/tmp/.x11vnc Great, ws-tcp-bridge is running and forward websocket to Xvnc unix socket Get the ip address on your first container myx11server On the container myx11server, to get the container local IP Address, install the package net-tools package apt-get install -y net-tools And run the ifconfig command ifconfig eth0 eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172.17.0.2 netmask 255.255.0.0 broadcast 172.17.255.255 ether 02:42:ac:11:00:02 txqueuelen 0 (Ethernet) RX packets 65149 bytes 95569807 (95.5 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 20880 bytes 1159982 (1.1 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Write here the ip address of your container myx11server: IP Address of myx11server _ . . _ . Create a new container webserver Open a new shell window and start a new docker container named mywebserver, forward the tcp port 80 to the container tcp port 80. docker run -it --name mywebserver -p 80:80 ubuntu:latest You should see a prompt like: root@96df62a73e4f:/# Install nginx webserver, run the command apt-get update apt-get install -y nginx-extras Install the git and vim package, run the command apt-get install -y git vim Clone the novnc git on github.com, inside the nginx's root directory. cd /var/www/html git clone https://github.com/novnc/noVNC.git You should read on the standart output Cloning into 'noVNC'... remote: Enumerating objects: 26, done. remote: Counting objects: 100% (26/26), done. remote: Compressing objects: 100% (21/21), done. remote: Total 10395 (delta 8), reused 13 (delta 5), pack-reused 10369 Receiving objects: 100% (10395/10395), 9.01 MiB | 7.15 MiB/s, done. Resolving deltas: 100% (7310/7310), done. Start the nginx web server nginx The web server nginx is running in backgound. Great, nginx web server is running, now we need to configure the proxy pass rule with the myx11server container's ip address. Check that the container webserver can ping the container myx11server Install the ping command, run the command apt-get install -y iputils-ping Get the myx11server container's ip address write before and replace xxx.xxx.xxx.xxx with the myx11server container's ip address ping -c 5 xxx.xxx.xxx.xxx In this example, i replace xxx.xxx.xxx.xxx by 172.17.0.2 ping -c 5 172.17.0.2 PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data. 64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.108 ms 64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.365 ms 64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.206 ms 64 bytes from 172.17.0.2: icmp_seq=4 ttl=64 time=0.181 ms 64 bytes from 172.17.0.2: icmp_seq=5 ttl=64 time=0.206 ms --- 172.17.0.2 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 4074ms rtt min/avg/max/mdev = 0.108/0.213/0.365/0.084 ms The container webserver should receive package from the myx11server container Edit the nginx configuration file Edit the nginx configuration file /etc/nginx/sites-enabled/default with the vim editor. vim /etc/nginx/sites-enabled/default In the server section, after the line location you should found : location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } Add a /websockify route to proxyfied the websocket http request to your myx11server container. location = /websockify { proxy_buffering off; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_pass http://XXX.XXX.XXX.XXX:6081/; } You have to replace the line proxy_pass http://XXX.XXX.XXX.XXX:6081/; by the ip address of your myx11server container, for example replace http://XXX.XXX.XXX.XXX:6081/ with http://172.17.0.2:6081/ proxy_pass http://172.17.0.2:6081/; The complete server section in the nginx file is for example server { listen 80 default_server; listen [::]:80 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don't use them in a production server! # # include snippets/snakeoil.conf; root /var/www/html; # Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html; server_name _; location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } location = /websockify { proxy_buffering off; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_pass http://172.17.0.2:6081/; # change this line } # pass PHP scripts to FastCGI server # #location ~ \\.php$ { # include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): # fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } Now, it's time to reload your nginx configuration, by running the command nginx -s reload Connect to your nginx website Run a web browser like Google Chrome or Firefox and go to your nginx website. If you run the nginx website on a separated host replace the name with your hostname or his ip address. Go to the URL http://localhost or the ip address of your own server In this exercice in use localhost in the screenshot because all containers are running on my desktop, you may have to replace localhost by ip address, or the fully qualified domain name of your own server. http://localhost or http://YOUR_SERVER_IP_ADDRESS You should read the Welcome to nginx! message in your web browser Go to the noVNC URL http://localhost/noVNC/vnc.html http://localhost/noVNC/vnc.html Remember, remplace localhost by your fully qualified domain name if need You should read the Welcome to nginx! message in your web browser To change the connection settings, click on the settings icon and choose Advanced You have to fill the WebSocket properties as follow: The Encrypt is not checked Set the Host as localhost (or your host ip address where your contianers are running ) Set the Port to 80 Set the Path to /websockify Then, press the Connect Button Install libreoffice as a docker application On your host, where your container myx11server is running. Open a new shell window and start a new docker container named mylibreoffice. docker run -it -v myshared:/tmp --name mylibreoffice ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install libreoffice application, run the install libreoffice command in your mylibreoffice container. apt-get update apt-get install -y libreoffice Run the soffice command to start Libreoffice export DISPLAY=:0.0 soffice --writer You should read the output (soffice:7412): dbind-WARNING **: 16:32:03.928: Couldn't connect to accessibility bus: Failed to connect to socket /tmp/dbus-HN3KrNpoAq: Connection refused On the web browser, the application Libreoffice Writer should appear. Type some text data like 'Hello, I am running inside a docker container' Install the windows manager openbox on your myx11server container To move, resize, close, the windows applications, we need a windows manager. abcdesktop is the windows manager. OpenBox is a lightweight, powerful, and highly configurable stacking window manager with extensive standards support. Run the install openbox command in your myx11server container. apt-get install -y openbox Set the DISPLAY environment variable to :0.0 and start openbox in background export DISPLAY=:0.0 openbox & Now, you can move the Libreoffice windows. All windows are decorated. Great you have installed the novnc gateway, and you just need a HTML Web browser to use a Libreoffice","title":"Hands-on with no-VNC HTML5"},{"location":"1.0/setup/novnc/#use-novnc-as-vnc-client","text":"","title":"Use noVNC as VNC Client"},{"location":"1.0/setup/novnc/#requirements","text":"A running dockerd last version An access to the docker public registry An access to the ubuntu repository An access to the github website to run git clone command An access to the bintray.com website to download a file AbcDeskopio use the amazing projet noVNC. noVNC is a VNC client JavaScript library. Before you start using noVNC get some information about it:","title":"Requirements"},{"location":"1.0/setup/novnc/#novnc-description","text":"noVNC is an open source VNC client. noVNC is both a VNC client JavaScript library as well as an application built on top of that library. noVNC runs well in any modern browser including mobile browsers (iOS and Android). Many companies, projects and products have integrated noVNC including OpenStack , OpenNebula , LibVNCServer , and ThinLinc . See the Projects and Companies wiki page for a more complete list with additional info and links.","title":"noVNC description"},{"location":"1.0/setup/novnc/#browser-requirements","text":"noVNC uses many modern web technologies so a formal requirement list is not available. However these are the minimum versions we are currently aware of: Chrome 49, Firefox 44, Safari 11, Opera 36, IE 11, Edge 12","title":"Browser Requirements"},{"location":"1.0/setup/novnc/#features","text":"Supports all modern browsers including mobile (iOS, Android) Supported VNC encodings: raw, copyrect, rre, hextile, tight, tightPNG Supports scaling, clipping and resizing the desktop Local cursor rendering Clipboard copy/paste Translations Licensed mainly under the MPL 2.0 , see the license document for details","title":"Features"},{"location":"1.0/setup/novnc/#create-a-shared-volume-myshared","text":"Before creating containers, we need a shared volume, to share data and unix socket between containers. Run the docker volume create command. docker volume create myshared","title":"Create a shared volume myshared"},{"location":"1.0/setup/novnc/#start-the-first-container-myx11server","text":"Start the first graphical container named myx11server and forward the tcp port 6081 to the 6081 container tcp port. The tcp port 6081 will be use later by ws2tcp nodejs server. The volume myshared is mounted to /tmp Note: We do not need the default 5900 VNC tcp port any more. docker run -it -v myshared:/tmp --name myx11server -p 6081:6081 ubuntu:latest bash You should see a prompt like : root@6de36e574877:/# Install the package wget Install the library files for tigervnc. Package list: libx11-6 xkb-data x11-xkb-utils xauth libfile-readbackwards-perl netbase libaudit1 libbsd0 libgcrypt20 libgl1 libgnutls30 libjpeg8 libpam0g libpixman-1-0 libselinux1 libstdc++6 libsystemd0 libunwind8 libxau6 libxdmcp6 libxfont2 zlib1g libgl1-mesa-dri xfonts-base x11-xserver-utils xfonts-100dpi xfonts-scalable Those packages are used by tigervnc. We need to install them. apt-get update apt-get install -y wget apt-get install -y libx11-6 xkb-data x11-xkb-utils xauth libfile-readbackwards-perl netbase libaudit1 libbsd0 libgcrypt20 libgl1 libgnutls30 libjpeg8 libpam0g libpixman-1-0 libselinux1 libstdc++6 libsystemd0 libunwind8 libxau6 libxdmcp6 libxfont2 zlib1g libgl1-mesa-dri xfonts-base x11-xserver-utils xfonts-100dpi xfonts-scalable Download the last tigervnc X11 graphics server from the bintray.com web site wget \"https://bintray.com/tigervnc/stable/download_file?file_path=tigervnc-1.10.1.x86_64.tar.gz\" -O tigervnc-1.10.1.x86_64.tar.gz Untar the tigervnc-1.10.1.x86_64.tar.gz file in the container's root file system cd / tar -xvf tigervnc-1.10.1.x86_64.tar.gz cp -r /tigervnc-1.10.1.x86_64/usr/* /usr/ Start the tigervnc release 1.10. The tigervnc release 1.10 support the option rfbunixpath used by ws-tcp-bridge in next section Xvnc :0 -rfbunixpath /tmp/.x11vnc -SecurityTypes=none & You should read the output Xvnc TigerVNC 1.10.0 - built Dec 20 2019 07:12:07 Copyright (C) 1999-2019 TigerVNC Team and many others (see README.rst) See https://www.tigervnc.org for information on TigerVNC. Underlying X server release 12001000, The X.Org Foundation Tue Mar 3 11:05:48 2020 vncext: VNC extension running! vncext: Listening for VNC connections on /tmp/.x11vnc (mode 0600) vncext: created VNC server for screen 0 Check that the Xvnc TigerVNC release is 1.10.0 . Great, you have installed an X11 server inside a docker container, and the Xvnc server is listening for VNC connections on /tmp/.x11vnc.","title":"Start the first container myx11server"},{"location":"1.0/setup/novnc/#install-the-ws-tcp-bridge","text":"ws-tcp-bridge translate websocket to tcp and have to listen on websocket tcp port 6081 and forward to local unix socket unix:/tmp/.x11vnc. ws-tcp-bridge is a nodejs server, then we need to install nodejs and npm. Before, install the package gcc g++ make curl apt-get install -y gcc g++ make curl Install nodejs and npm curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs Install ws-tcp-bridge npm install ws-tcp-bridge -g Start ws-tcp-bridge with the parameters --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc in background Add the & at the end of the command line to run this process in background /usr/bin/ws-tcp-bridge --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc & You should read on the standard output proxy mode ws -> tcp forwarding port 6081 to unix:/tmp/.x11vnc Great, ws-tcp-bridge is running and forward websocket to Xvnc unix socket","title":"Install the ws-tcp-bridge"},{"location":"1.0/setup/novnc/#get-the-ip-address-on-your-first-container-myx11server","text":"On the container myx11server, to get the container local IP Address, install the package net-tools package apt-get install -y net-tools And run the ifconfig command ifconfig eth0 eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST> mtu 1500 inet 172.17.0.2 netmask 255.255.0.0 broadcast 172.17.255.255 ether 02:42:ac:11:00:02 txqueuelen 0 (Ethernet) RX packets 65149 bytes 95569807 (95.5 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 20880 bytes 1159982 (1.1 MB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Write here the ip address of your container myx11server: IP Address of myx11server _ . . _ .","title":"Get the ip address on your first container myx11server"},{"location":"1.0/setup/novnc/#create-a-new-container-webserver","text":"Open a new shell window and start a new docker container named mywebserver, forward the tcp port 80 to the container tcp port 80. docker run -it --name mywebserver -p 80:80 ubuntu:latest You should see a prompt like: root@96df62a73e4f:/# Install nginx webserver, run the command apt-get update apt-get install -y nginx-extras Install the git and vim package, run the command apt-get install -y git vim Clone the novnc git on github.com, inside the nginx's root directory. cd /var/www/html git clone https://github.com/novnc/noVNC.git You should read on the standart output Cloning into 'noVNC'... remote: Enumerating objects: 26, done. remote: Counting objects: 100% (26/26), done. remote: Compressing objects: 100% (21/21), done. remote: Total 10395 (delta 8), reused 13 (delta 5), pack-reused 10369 Receiving objects: 100% (10395/10395), 9.01 MiB | 7.15 MiB/s, done. Resolving deltas: 100% (7310/7310), done. Start the nginx web server nginx The web server nginx is running in backgound. Great, nginx web server is running, now we need to configure the proxy pass rule with the myx11server container's ip address.","title":"Create a new container webserver"},{"location":"1.0/setup/novnc/#check-that-the-container-webserver-can-ping-the-container-myx11server","text":"Install the ping command, run the command apt-get install -y iputils-ping Get the myx11server container's ip address write before and replace xxx.xxx.xxx.xxx with the myx11server container's ip address ping -c 5 xxx.xxx.xxx.xxx In this example, i replace xxx.xxx.xxx.xxx by 172.17.0.2 ping -c 5 172.17.0.2 PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data. 64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.108 ms 64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.365 ms 64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.206 ms 64 bytes from 172.17.0.2: icmp_seq=4 ttl=64 time=0.181 ms 64 bytes from 172.17.0.2: icmp_seq=5 ttl=64 time=0.206 ms --- 172.17.0.2 ping statistics --- 5 packets transmitted, 5 received, 0% packet loss, time 4074ms rtt min/avg/max/mdev = 0.108/0.213/0.365/0.084 ms The container webserver should receive package from the myx11server container","title":"Check that the container webserver can ping the container myx11server"},{"location":"1.0/setup/novnc/#edit-the-nginx-configuration-file","text":"Edit the nginx configuration file /etc/nginx/sites-enabled/default with the vim editor. vim /etc/nginx/sites-enabled/default In the server section, after the line location you should found : location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } Add a /websockify route to proxyfied the websocket http request to your myx11server container. location = /websockify { proxy_buffering off; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_pass http://XXX.XXX.XXX.XXX:6081/; } You have to replace the line proxy_pass http://XXX.XXX.XXX.XXX:6081/; by the ip address of your myx11server container, for example replace http://XXX.XXX.XXX.XXX:6081/ with http://172.17.0.2:6081/ proxy_pass http://172.17.0.2:6081/; The complete server section in the nginx file is for example server { listen 80 default_server; listen [::]:80 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don't use them in a production server! # # include snippets/snakeoil.conf; root /var/www/html; # Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html; server_name _; location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } location = /websockify { proxy_buffering off; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \"upgrade\"; proxy_pass http://172.17.0.2:6081/; # change this line } # pass PHP scripts to FastCGI server # #location ~ \\.php$ { # include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): # fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\.ht { # deny all; #} } Now, it's time to reload your nginx configuration, by running the command nginx -s reload","title":"Edit the nginx configuration file"},{"location":"1.0/setup/novnc/#connect-to-your-nginx-website","text":"Run a web browser like Google Chrome or Firefox and go to your nginx website. If you run the nginx website on a separated host replace the name with your hostname or his ip address. Go to the URL http://localhost or the ip address of your own server In this exercice in use localhost in the screenshot because all containers are running on my desktop, you may have to replace localhost by ip address, or the fully qualified domain name of your own server. http://localhost or http://YOUR_SERVER_IP_ADDRESS You should read the Welcome to nginx! message in your web browser Go to the noVNC URL http://localhost/noVNC/vnc.html http://localhost/noVNC/vnc.html Remember, remplace localhost by your fully qualified domain name if need You should read the Welcome to nginx! message in your web browser To change the connection settings, click on the settings icon and choose Advanced You have to fill the WebSocket properties as follow: The Encrypt is not checked Set the Host as localhost (or your host ip address where your contianers are running ) Set the Port to 80 Set the Path to /websockify Then, press the Connect Button","title":"Connect to your nginx website"},{"location":"1.0/setup/novnc/#install-libreoffice-as-a-docker-application","text":"On your host, where your container myx11server is running. Open a new shell window and start a new docker container named mylibreoffice. docker run -it -v myshared:/tmp --name mylibreoffice ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install libreoffice application, run the install libreoffice command in your mylibreoffice container. apt-get update apt-get install -y libreoffice Run the soffice command to start Libreoffice export DISPLAY=:0.0 soffice --writer You should read the output (soffice:7412): dbind-WARNING **: 16:32:03.928: Couldn't connect to accessibility bus: Failed to connect to socket /tmp/dbus-HN3KrNpoAq: Connection refused On the web browser, the application Libreoffice Writer should appear. Type some text data like 'Hello, I am running inside a docker container'","title":"Install libreoffice as a docker application"},{"location":"1.0/setup/novnc/#install-the-windows-manager-openbox-on-your-myx11server-container","text":"To move, resize, close, the windows applications, we need a windows manager. abcdesktop is the windows manager. OpenBox is a lightweight, powerful, and highly configurable stacking window manager with extensive standards support. Run the install openbox command in your myx11server container. apt-get install -y openbox Set the DISPLAY environment variable to :0.0 and start openbox in background export DISPLAY=:0.0 openbox & Now, you can move the Libreoffice windows. All windows are decorated. Great you have installed the novnc gateway, and you just need a HTML Web browser to use a Libreoffice","title":"Install the windows manager openbox on your myx11server container"},{"location":"1.0/setup/retrieve_all_images/","text":"Get all applications for abcdesktop Lot of application are ready to use for abcdesktop. All applications are opensource. You can download the image list from the applist file, or run the command the pull command where $APP is the name of your application. docker pull abcdesktopio/$APP.d for example to download libreoffice calc, run the command docker pull abcdesktopio/calc.d Read the list of all applications on the application list page","title":"Get all docker application image for abcdesktop"},{"location":"1.0/setup/retrieve_all_images/#get-all-applications-for-abcdesktop","text":"Lot of application are ready to use for abcdesktop. All applications are opensource. You can download the image list from the applist file, or run the command the pull command where $APP is the name of your application. docker pull abcdesktopio/$APP.d for example to download libreoffice calc, run the command docker pull abcdesktopio/calc.d Read the list of all applications on the application list page","title":"Get all applications for abcdesktop"},{"location":"1.0/setup/secure_dockerd/","text":"Secure your dockerd to run in production with kubernetes and abcdesktop.io Goals Protect your docker daemon socket. Requirements You need to have a running abcdesktop.io Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by reading Kubernetes Setup . You need a previous installation of abcdesktop Installation The following commands will let you update abcdesktop plateform on the master node. All applications run on a single server. Enable TLS at the dockerd start-up THIS SECTION AS TO BE WRITTEN Locate the kubernetes CA Root and the X-509 certificats /var/lib/kubelet/pki Custom Docker daemon options There are a number of ways to configure the daemon flags and environment variables for your Docker daemon. The recommended way is to use a systemd drop-in file (as described in the systemd.unit documentation). These are local files named .conf in the /etc/systemd/system/docker.service.d directory. On ubuntu 18.04 use the filename /etc/systemd/system/multi-user.target.wants/docker.service. Edit this file and change the ExecStart line ExecStart=/usr/bin/dockerd -H unix:// Add the TLS option string ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/$HOSTNAME.cert.pem --tlskey=/etc/docker/ssl/$HOSTNAME.pem -H=0.0.0.0:2376 -H unix:// Example [Unit] Description=Docker Application Container Engine Documentation=https://docs.docker.com After=network.target docker.socket firewalld.service Requires=docker.socket [Service] Type=notify # the default is not to use systemd for cgroups because the delegate issues still # exists and systemd currently does not support the cgroup feature set required # for containers run by docker # ExecStart=/usr/bin/dockerd -H unix:// ExecReload=/bin/kill -s HUP $MAINPID ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/host.domain.local.cert.pem --tlskey=/etc/docker/ssl/host.domain.local.pem -H=0.0.0.0:2376 -H unix:// LimitNOFILE=1048576 # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNPROC=infinity LimitCORE=infinity # Uncomment TasksMax if your systemd version supports it. # Only systemd 226 and above support this version. TasksMax=infinity TimeoutStartSec=0 # set delegate yes so that systemd does not reset the cgroups of docker containers Delegate=yes # kill only the docker process, not all processes in the cgroup KillMode=process [Install] WantedBy=multi-user.target Apply changes Flush changes sudo systemctl daemon-reload Restart Docker daemon: systemctl restart docker Check your dockerd Check that your dockerd is listenning on TCP port 2376 # netstat -anp |grep 2376 tcp6 0 0 :::2376 :::* LISTEN 27553/dockerd Connect your local abcdesktop Open your navigator to http://[your-ip-hostname]:30443/ You can get your ip hostname by running ifconfig abcdesktop homepage should be available : Click on the Connect with Anonymous access button. Pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. Troubleshoot All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : sudo kubectl get pods NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : sudo kubectl describe pod speedtest-od-55c58fdd69-t99ck In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry. View Pyos logs sudo kubectl logs daemonset-pyos-tklg8 --follow Note that you also can view logs using docker command","title":"Secure Dockerd"},{"location":"1.0/setup/secure_dockerd/#secure-your-dockerd-to-run-in-production-with-kubernetes-and-abcdesktopio","text":"","title":"Secure your dockerd to run in production with kubernetes and abcdesktop.io"},{"location":"1.0/setup/secure_dockerd/#goals","text":"Protect your docker daemon socket.","title":"Goals"},{"location":"1.0/setup/secure_dockerd/#requirements","text":"You need to have a running abcdesktop.io Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by reading Kubernetes Setup . You need a previous installation of abcdesktop","title":"Requirements"},{"location":"1.0/setup/secure_dockerd/#installation","text":"The following commands will let you update abcdesktop plateform on the master node. All applications run on a single server.","title":"Installation"},{"location":"1.0/setup/secure_dockerd/#enable-tls-at-the-dockerd-start-up","text":"THIS SECTION AS TO BE WRITTEN","title":"Enable TLS at the dockerd start-up"},{"location":"1.0/setup/secure_dockerd/#locate-the-kubernetes-ca-root-and-the-x-509-certificats","text":"/var/lib/kubelet/pki","title":"Locate the kubernetes CA Root and the X-509 certificats"},{"location":"1.0/setup/secure_dockerd/#custom-docker-daemon-options","text":"There are a number of ways to configure the daemon flags and environment variables for your Docker daemon. The recommended way is to use a systemd drop-in file (as described in the systemd.unit documentation). These are local files named .conf in the /etc/systemd/system/docker.service.d directory. On ubuntu 18.04 use the filename /etc/systemd/system/multi-user.target.wants/docker.service. Edit this file and change the ExecStart line ExecStart=/usr/bin/dockerd -H unix:// Add the TLS option string ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/$HOSTNAME.cert.pem --tlskey=/etc/docker/ssl/$HOSTNAME.pem -H=0.0.0.0:2376 -H unix:// Example [Unit] Description=Docker Application Container Engine Documentation=https://docs.docker.com After=network.target docker.socket firewalld.service Requires=docker.socket [Service] Type=notify # the default is not to use systemd for cgroups because the delegate issues still # exists and systemd currently does not support the cgroup feature set required # for containers run by docker # ExecStart=/usr/bin/dockerd -H unix:// ExecReload=/bin/kill -s HUP $MAINPID ExecStart=/usr/bin/dockerd --tlsverify --tlscacert=/etc/docker/ssl/ca.pem --tlscert=/etc/docker/ssl/host.domain.local.cert.pem --tlskey=/etc/docker/ssl/host.domain.local.pem -H=0.0.0.0:2376 -H unix:// LimitNOFILE=1048576 # Having non-zero Limit*s causes performance problems due to accounting overhead # in the kernel. We recommend using cgroups to do container-local accounting. LimitNPROC=infinity LimitCORE=infinity # Uncomment TasksMax if your systemd version supports it. # Only systemd 226 and above support this version. TasksMax=infinity TimeoutStartSec=0 # set delegate yes so that systemd does not reset the cgroups of docker containers Delegate=yes # kill only the docker process, not all processes in the cgroup KillMode=process [Install] WantedBy=multi-user.target","title":"Custom Docker daemon options"},{"location":"1.0/setup/secure_dockerd/#apply-changes","text":"Flush changes sudo systemctl daemon-reload Restart Docker daemon: systemctl restart docker","title":"Apply changes"},{"location":"1.0/setup/secure_dockerd/#check-your-dockerd","text":"Check that your dockerd is listenning on TCP port 2376 # netstat -anp |grep 2376 tcp6 0 0 :::2376 :::* LISTEN 27553/dockerd","title":"Check your dockerd"},{"location":"1.0/setup/secure_dockerd/#connect-your-local-abcdesktop","text":"Open your navigator to http://[your-ip-hostname]:30443/ You can get your ip hostname by running ifconfig abcdesktop homepage should be available : Click on the Connect with Anonymous access button. Pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace.","title":"Connect your local abcdesktop"},{"location":"1.0/setup/secure_dockerd/#troubleshoot","text":"All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : sudo kubectl get pods NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : sudo kubectl describe pod speedtest-od-55c58fdd69-t99ck In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry.","title":"Troubleshoot"},{"location":"1.0/setup/secure_dockerd/#view-pyos-logs","text":"sudo kubectl logs daemonset-pyos-tklg8 --follow Note that you also can view logs using docker command","title":"View Pyos logs"},{"location":"1.0/setup/uninstall_kubernetes/","text":"Uninstall abcdesktop.io for kuberntes Commands to uninstall abcdesktop.io Run the bash commands : echo \"starting abcdesktop uninstall commands\" echo \"stop and remove abcdesktop user pods\" kubectl delete pods --selector=\"type=x11server\" -n abcdesktop echo \"remove all services, pods\" kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml echo \"remove all secrets\" kubectl delete secrets --all -n abcdesktop echo \"remove namespace\" kubectl delete namespace abcdesktop echo \"delete all abcdesktop docker images\" docker images --filter=reference='abcdesktopio/*:*' --format \"{{.Repository}}\" | xargs docker rmi echo \"abcdesktop is uninstalled\" kubectl delete namespace command and docker rmi commands can take few minutes. Please wait for the output message: abcdesktop is uninstalled Great, you have uninstalled abcdesktop for kubernetes.","title":"Uninstall abcdesktop"},{"location":"1.0/setup/uninstall_kubernetes/#commands-to-uninstall-abcdesktopio","text":"Run the bash commands : echo \"starting abcdesktop uninstall commands\" echo \"stop and remove abcdesktop user pods\" kubectl delete pods --selector=\"type=x11server\" -n abcdesktop echo \"remove all services, pods\" kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.yaml echo \"remove all secrets\" kubectl delete secrets --all -n abcdesktop echo \"remove namespace\" kubectl delete namespace abcdesktop echo \"delete all abcdesktop docker images\" docker images --filter=reference='abcdesktopio/*:*' --format \"{{.Repository}}\" | xargs docker rmi echo \"abcdesktop is uninstalled\" kubectl delete namespace command and docker rmi commands can take few minutes. Please wait for the output message: abcdesktop is uninstalled Great, you have uninstalled abcdesktop for kubernetes.","title":"Commands to uninstall abcdesktop.io"},{"location":"1.0/setup/uninstalldockermode/","text":"Uninstall abcdesktop.io for non-cluster hosts Commands to uninstall abcdesktop.io Go to the abcdesktop directory (where the docker-compose.yml is located), and run the bash commands : echo \"starting abcdesktop uninstall commands\" docker-compose -p abcdesktop down echo \"stop and remove abcdesktop services\" docker-compose rm -s -v -f echo \"remove all abcdesktop user container\" docker ps --filter \"label=type=x11server\" -q | xargs docker stop docker ps --filter \"label=type=x11server\" -q | xargs docker rm echo \"remove all abcdesktop images\" docker images --filter=reference='abcdesktopio/*:*' --format \"{{.Repository}}:{{.Tag}}\" | xargs docker rmi echo \"remove all user volumes\" docker volume ls -f label=type=x11server -q | xargs docker volume rm echo \"abcdesktop is uninstalled\" Great, you have uninstalled abcdesktop in non-cluster hosts.","title":"Uninstall abcdesktop for docker"},{"location":"1.0/setup/uninstalldockermode/#uninstall-abcdesktopio-for-non-cluster-hosts","text":"","title":"Uninstall abcdesktop.io for non-cluster hosts"},{"location":"1.0/setup/uninstalldockermode/#commands-to-uninstall-abcdesktopio","text":"Go to the abcdesktop directory (where the docker-compose.yml is located), and run the bash commands : echo \"starting abcdesktop uninstall commands\" docker-compose -p abcdesktop down echo \"stop and remove abcdesktop services\" docker-compose rm -s -v -f echo \"remove all abcdesktop user container\" docker ps --filter \"label=type=x11server\" -q | xargs docker stop docker ps --filter \"label=type=x11server\" -q | xargs docker rm echo \"remove all abcdesktop images\" docker images --filter=reference='abcdesktopio/*:*' --format \"{{.Repository}}:{{.Tag}}\" | xargs docker rmi echo \"remove all user volumes\" docker volume ls -f label=type=x11server -q | xargs docker volume rm echo \"abcdesktop is uninstalled\" Great, you have uninstalled abcdesktop in non-cluster hosts.","title":"Commands to uninstall abcdesktop.io"},{"location":"1.0/setup/vnc/","text":"abcdesktop.io from scratch The goal of this chapter is to learn how abcdesktop.io works. You should not repeat the process in production, but prefer use a Dockerfile and the docker build command. Requirements A running dockerd last version A VNC Client An access to the docker public registry An access to the ubuntu repository Create a shared volume myshared Before creating containers, we need a shared volume, to share data and unix socket between containers. Run the docker volume create command. docker volume create myshared Start the first container myx11server Start the first graphical container named myx11server , forward the tcp port 5900 to the container. The tcp port 5900 will be use later by the vnc server. The volume myshared is mounted to /tmp docker run -it -v myshared:/tmp --name myx11server -p 5900:5900 ubuntu:latest bash You should see a prompt like : root@6de36e574877:/# Install the X11 graphics server tigervnc apt-get update apt-get install -y tigervnc-standalone-server tigervnc-xorg-extension Start the X11 graphics server tigervnc Xvnc :0 -SecurityTypes=none & You should read the output Xvnc TigerVNC 1.7.0 - built Dec 5 2017 09:25:01 Copyright (C) 1999-2016 TigerVNC Team and many others (see README.txt) See http://www.tigervnc.org for information on TigerVNC. Underlying X server release 11905000, The X.Org Foundation Mon Mar 2 11:43:56 2020 vncext: VNC extension running! vncext: Listening for VNC connections on all interface(s), port 5900 vncext: created VNC server for screen 0 Great, you have installed an X11 server inside a docker container, and the Xvnc server is listening for VNC connections on the tcp port 5900. Keep this container running. We will use the host tcp port 5900 to connect VNC Client. Use VNC client to connect to your first container myx11server From your host or from another host, install a VNC client. You can use your prefered VNC Client for your operating system or the RealVNC's VNC Viewer. You can download the RealVNC's VNC Client, by following the link https://www.realvnc.com/fr/connect/download/viewer/ Run the VNC Viewer, and set the hostname where the container myx11server is running. In the following example. Here I am using VNC Viewer on Mac OS/X and I did set the hostname to localhost. This is a getting started guide to understand how abcdesktop works, so we did not set a password to protect the VNC access. This is not the best practices guide for production installations. As we did not set a password to protect the VNC access, you have to confirm the uncrypted connection warning dialog box and then press the Continue button. This is just an example to understand how abcdesktop works, so we did not set a password to protect the VNC access. You need to confirm the uncrypted connection warning dialog box. Press the Continue button. A black screen should appear : Keep this VNC Client running, we will use this display to show our applications later. Install an x11 application as a docker application On your host, where your container myx11server is running. Open a new shell window and start a new docker container named myapp. The myapp container access to the volume myshared and mount it to /tmp. docker run -it -v myshared:/tmp --name myapp ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install standart application like xedit, xman or xeyes, install the package x11-apps. Run those commands in your myx11server container. apt-get update apt-get install -y x11-apps Set the DISPLAY environment variable to :0.0 and then start the xedit command. export DISPLAY=:0.0 xedit On the VNC Viewer, the application xedit should appear. Great, you can run a X11 application inside a dedicated docker container, and use your myx11server as DISPLAY. But you can't move, resize or close the xedit window. Install the windows manager openbox on your myx11server container To move, resize, close, the windows applications, we need a windows manager. abcdesktop use the windows manager openbox. OpenBox is a lightweight, powerful, and highly configurable stacking window manager with extensive standards support. Run the install openbox command in your myx11server container. apt-get install -y openbox Set the DISPLAY environment variable to :0.0 and then start openbox. export DISPLAY=:0.0 openbox The Openbox message appear to the sdterr Openbox-Message: Unable to find a valid menu file \"/var/lib/openbox/debian-menu.xml\" Now, you can move the window xedit. The windows are decorated. Remove the myapp container Activate the window shell with your myapp running container, and press CTRL+C root@9abc7da524a5:/# xedit ^C root@9abc7da524a5:/# exit exit You can remove your docker container, to clean up your environment docker rm myapp Install another x11 application as a docker application On your host, where your container myx11server is running, open a new shell window and start a new docker container named myapp. docker run -it -v myshared:/tmp --name myfirefox ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install firefox application, run the install firefox command in your myfirefox container. apt-get update apt-get install -y firefox Run the firefox command export DISPLAY=:0.0 firefox You should read the output (firefox:1831): LIBDBUSMENU-GLIB-WARNING **: 14:42:14.737: Unable to get session bus: Failed to execute child process ?dbus-launch? (No such file or directory) On the VNC Viewer, the application firefox should appear. Check that firefox works and go to your favorite web site. Clean your setup To clean your work space, stop the running containers myapp myfirefox myx11server, then remove them. We also need to remove the shared volume myshared Run the commands : docker stop myfirefox myx11server docker rm myfirefox myx11server docker volume rm myshared Keep the docker images ubuntu, we will use it in the next chapter Next chapter In the next chapter, we will replace the VNC Client by a web browser.","title":"Hands-on with VNC client"},{"location":"1.0/setup/vnc/#abcdesktopio-from-scratch","text":"The goal of this chapter is to learn how abcdesktop.io works. You should not repeat the process in production, but prefer use a Dockerfile and the docker build command.","title":"abcdesktop.io from scratch"},{"location":"1.0/setup/vnc/#requirements","text":"A running dockerd last version A VNC Client An access to the docker public registry An access to the ubuntu repository","title":"Requirements"},{"location":"1.0/setup/vnc/#create-a-shared-volume-myshared","text":"Before creating containers, we need a shared volume, to share data and unix socket between containers. Run the docker volume create command. docker volume create myshared","title":"Create a shared volume myshared"},{"location":"1.0/setup/vnc/#start-the-first-container-myx11server","text":"Start the first graphical container named myx11server , forward the tcp port 5900 to the container. The tcp port 5900 will be use later by the vnc server. The volume myshared is mounted to /tmp docker run -it -v myshared:/tmp --name myx11server -p 5900:5900 ubuntu:latest bash You should see a prompt like : root@6de36e574877:/# Install the X11 graphics server tigervnc apt-get update apt-get install -y tigervnc-standalone-server tigervnc-xorg-extension Start the X11 graphics server tigervnc Xvnc :0 -SecurityTypes=none & You should read the output Xvnc TigerVNC 1.7.0 - built Dec 5 2017 09:25:01 Copyright (C) 1999-2016 TigerVNC Team and many others (see README.txt) See http://www.tigervnc.org for information on TigerVNC. Underlying X server release 11905000, The X.Org Foundation Mon Mar 2 11:43:56 2020 vncext: VNC extension running! vncext: Listening for VNC connections on all interface(s), port 5900 vncext: created VNC server for screen 0 Great, you have installed an X11 server inside a docker container, and the Xvnc server is listening for VNC connections on the tcp port 5900. Keep this container running. We will use the host tcp port 5900 to connect VNC Client.","title":"Start the first container myx11server"},{"location":"1.0/setup/vnc/#use-vnc-client-to-connect-to-your-first-container-myx11server","text":"From your host or from another host, install a VNC client. You can use your prefered VNC Client for your operating system or the RealVNC's VNC Viewer. You can download the RealVNC's VNC Client, by following the link https://www.realvnc.com/fr/connect/download/viewer/ Run the VNC Viewer, and set the hostname where the container myx11server is running. In the following example. Here I am using VNC Viewer on Mac OS/X and I did set the hostname to localhost. This is a getting started guide to understand how abcdesktop works, so we did not set a password to protect the VNC access. This is not the best practices guide for production installations. As we did not set a password to protect the VNC access, you have to confirm the uncrypted connection warning dialog box and then press the Continue button. This is just an example to understand how abcdesktop works, so we did not set a password to protect the VNC access. You need to confirm the uncrypted connection warning dialog box. Press the Continue button. A black screen should appear : Keep this VNC Client running, we will use this display to show our applications later.","title":"Use VNC client to connect to your first container myx11server"},{"location":"1.0/setup/vnc/#install-an-x11-application-as-a-docker-application","text":"On your host, where your container myx11server is running. Open a new shell window and start a new docker container named myapp. The myapp container access to the volume myshared and mount it to /tmp. docker run -it -v myshared:/tmp --name myapp ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install standart application like xedit, xman or xeyes, install the package x11-apps. Run those commands in your myx11server container. apt-get update apt-get install -y x11-apps Set the DISPLAY environment variable to :0.0 and then start the xedit command. export DISPLAY=:0.0 xedit On the VNC Viewer, the application xedit should appear. Great, you can run a X11 application inside a dedicated docker container, and use your myx11server as DISPLAY. But you can't move, resize or close the xedit window.","title":"Install an x11 application as a docker application"},{"location":"1.0/setup/vnc/#install-the-windows-manager-openbox-on-your-myx11server-container","text":"To move, resize, close, the windows applications, we need a windows manager. abcdesktop use the windows manager openbox. OpenBox is a lightweight, powerful, and highly configurable stacking window manager with extensive standards support. Run the install openbox command in your myx11server container. apt-get install -y openbox Set the DISPLAY environment variable to :0.0 and then start openbox. export DISPLAY=:0.0 openbox The Openbox message appear to the sdterr Openbox-Message: Unable to find a valid menu file \"/var/lib/openbox/debian-menu.xml\" Now, you can move the window xedit. The windows are decorated.","title":"Install the windows manager openbox on your myx11server container"},{"location":"1.0/setup/vnc/#remove-the-myapp-container","text":"Activate the window shell with your myapp running container, and press CTRL+C root@9abc7da524a5:/# xedit ^C root@9abc7da524a5:/# exit exit You can remove your docker container, to clean up your environment docker rm myapp","title":"Remove the myapp container"},{"location":"1.0/setup/vnc/#install-another-x11-application-as-a-docker-application","text":"On your host, where your container myx11server is running, open a new shell window and start a new docker container named myapp. docker run -it -v myshared:/tmp --name myfirefox ubuntu:latest You should see a prompt like : root@96df62a73e4f:/# To install firefox application, run the install firefox command in your myfirefox container. apt-get update apt-get install -y firefox Run the firefox command export DISPLAY=:0.0 firefox You should read the output (firefox:1831): LIBDBUSMENU-GLIB-WARNING **: 14:42:14.737: Unable to get session bus: Failed to execute child process ?dbus-launch? (No such file or directory) On the VNC Viewer, the application firefox should appear. Check that firefox works and go to your favorite web site.","title":"Install another x11 application as a docker application"},{"location":"1.0/setup/vnc/#clean-your-setup","text":"To clean your work space, stop the running containers myapp myfirefox myx11server, then remove them. We also need to remove the shared volume myshared Run the commands : docker stop myfirefox myx11server docker rm myfirefox myx11server docker volume rm myshared Keep the docker images ubuntu, we will use it in the next chapter","title":"Clean your setup"},{"location":"1.0/setup/vnc/#next-chapter","text":"In the next chapter, we will replace the VNC Client by a web browser.","title":"Next chapter"},{"location":"2.0/features/","text":"abcdesktop release 2.0 The abcdesktop release 2.0 has started in May 2020 docker instance version 18 and above. abcdesktop (pyos) need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 (if you use kubernetes release 1.24 or above, you must use abcdesktop release 3.0) an application runs as docker container or as kubernetes pod abcdesktop release 2.x is stable","title":"Features"},{"location":"2.0/features/#abcdesktop-release-20","text":"The abcdesktop release 2.0 has started in May 2020 docker instance version 18 and above. abcdesktop (pyos) need a dockerd socket access. Kubernetes release less or equal than 1.23.7-00 (if you use kubernetes release 1.24 or above, you must use abcdesktop release 3.0) an application runs as docker container or as kubernetes pod abcdesktop release 2.x is stable","title":"abcdesktop release 2.0"},{"location":"2.0/config/authentification-rules/","text":"Authentification rules configuration All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to ) The rule object A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } The conditions object conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value. Examples: Example (TRUE and TRUE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True Example (TRUE and TRUE) expected FALSE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False Example (TRUE and FALSE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True Example (FALSE and TRUE) expected TRUE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True The condition value name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513' condition boolean This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' } condition httpheader This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' } condition network This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' } IPv4 and IPv6 subnets support To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } } condition memberof This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' } condition primarygroupid This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"rules"},{"location":"2.0/config/authentification-rules/#authentification-rules-configuration","text":"All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to )","title":"Authentification rules configuration"},{"location":"2.0/config/authentification-rules/#the-rule-object","text":"A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' }","title":"The rule object"},{"location":"2.0/config/authentification-rules/#the-conditions-object","text":"conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value.","title":"The conditions object"},{"location":"2.0/config/authentification-rules/#examples","text":"","title":"Examples:"},{"location":"2.0/config/authentification-rules/#example-true-and-true-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and TRUE) expected TRUE:"},{"location":"2.0/config/authentification-rules/#example-true-and-true-expected-false","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False","title":"Example (TRUE and TRUE) expected FALSE:"},{"location":"2.0/config/authentification-rules/#example-true-and-false-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and FALSE) expected TRUE:"},{"location":"2.0/config/authentification-rules/#example-false-and-true-expected-true","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True","title":"Example (FALSE and TRUE) expected TRUE:"},{"location":"2.0/config/authentification-rules/#the-condition-value","text":"name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513'","title":"The condition value"},{"location":"2.0/config/authentification-rules/#condition-boolean","text":"This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' }","title":"condition boolean"},{"location":"2.0/config/authentification-rules/#condition-httpheader","text":"This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' }","title":"condition httpheader"},{"location":"2.0/config/authentification-rules/#condition-network","text":"This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' }","title":"condition network"},{"location":"2.0/config/authentification-rules/#ipv4-and-ipv6-subnets-support","text":"To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } }","title":"IPv4 and IPv6 subnets support"},{"location":"2.0/config/authentification-rules/#condition-memberof","text":"This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' }","title":"condition memberof"},{"location":"2.0/config/authentification-rules/#condition-primarygroupid","text":"This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"condition primarygroupid"},{"location":"2.0/config/authentification/","text":"Authentification Configuration file The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster. The dictionary authmanagers The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines four kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification metaexplicit : use Microsoft Active Directory Trusted relationship, with support of FSP (Foreign Security Principals) implicit : use for Anonymous Authentification and SSL-client certificat Related authmanagers authmanagers type Description external For OAuth 2.0 authentification metaexplicit For Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities explicit For LDAP, LDAPS, Active Directory Authentification, and Kerberos authentification implicit For anonymous authentification, for an always True Authentification, and SSL-client certificat Hands-on Requirements You should have read the hands-on : Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster. Change authmanagers configuration Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file, and restart the pyos daemonset Start your web browser and open the URL http://localhost:30443 The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users. authmanagers implicit : implicit is the easiest configuration mode, and is used to run Anonymous authentification (always True). Read the authmanagers implicit Section. authmanagers explicit : explicit is defined to use a directory service like LDAP. Read the authmanagers explicit Section. authmanagers metaexplicit : metaexplicit offers a support to Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities. Read the authmanagers explicit Section. authmanagers external : external use external OAuth 2.0 authentication, for example Google OAuth 2.0 , or Github OAuth 2.0 Read the authmanagers external Section. authmanagers sample In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionary as described with external , explicit and implicit authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13'], 'kerberos_realm': 'AD.DOMAIN.LOCAL' }}","title":"config"},{"location":"2.0/config/authentification/#authentification","text":"","title":"Authentification"},{"location":"2.0/config/authentification/#configuration-file","text":"The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster.","title":"Configuration file"},{"location":"2.0/config/authentification/#the-dictionary-authmanagers","text":"The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines four kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification metaexplicit : use Microsoft Active Directory Trusted relationship, with support of FSP (Foreign Security Principals) implicit : use for Anonymous Authentification and SSL-client certificat","title":"The dictionary authmanagers"},{"location":"2.0/config/authentification/#related-authmanagers","text":"authmanagers type Description external For OAuth 2.0 authentification metaexplicit For Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities explicit For LDAP, LDAPS, Active Directory Authentification, and Kerberos authentification implicit For anonymous authentification, for an always True Authentification, and SSL-client certificat","title":"Related authmanagers"},{"location":"2.0/config/authentification/#hands-on","text":"","title":"Hands-on"},{"location":"2.0/config/authentification/#requirements","text":"You should have read the hands-on : Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster.","title":"Requirements"},{"location":"2.0/config/authentification/#change-authmanagers-configuration","text":"Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file, and restart the pyos daemonset Start your web browser and open the URL http://localhost:30443 The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users.","title":"Change authmanagers configuration"},{"location":"2.0/config/authentification/#authmanagers-implicit","text":"implicit is the easiest configuration mode, and is used to run Anonymous authentification (always True). Read the authmanagers implicit Section.","title":"authmanagers implicit:"},{"location":"2.0/config/authentification/#authmanagers-explicit","text":"explicit is defined to use a directory service like LDAP. Read the authmanagers explicit Section.","title":"authmanagers explicit:"},{"location":"2.0/config/authentification/#authmanagers-metaexplicit","text":"metaexplicit offers a support to Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities. Read the authmanagers explicit Section.","title":"authmanagers metaexplicit:"},{"location":"2.0/config/authentification/#authmanagers-external","text":"external use external OAuth 2.0 authentication, for example Google OAuth 2.0 , or Github OAuth 2.0 Read the authmanagers external Section.","title":"authmanagers external:"},{"location":"2.0/config/authentification/#authmanagers-sample","text":"In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionary as described with external , explicit and implicit authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13'], 'kerberos_realm': 'AD.DOMAIN.LOCAL' }}","title":"authmanagers sample"},{"location":"2.0/config/authexplicit-activedirectory/","text":"Authentification explicit for Microsoft Active Directory services authmanagers explicit object The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL Service Account The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com) Site This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location'] Printers This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Active Directory"},{"location":"2.0/config/authexplicit-activedirectory/#authentification-explicit-for-microsoft-active-directory-services","text":"","title":"Authentification explicit for Microsoft Active Directory services"},{"location":"2.0/config/authexplicit-activedirectory/#authmanagers-explicit-object","text":"The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"2.0/config/authexplicit-activedirectory/#providers-configuration","text":"The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL","title":"providers configuration"},{"location":"2.0/config/authexplicit-activedirectory/#service-account","text":"The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com)","title":"Service Account"},{"location":"2.0/config/authexplicit-activedirectory/#site","text":"This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location']","title":"Site"},{"location":"2.0/config/authexplicit-activedirectory/#printers","text":"This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Printers"},{"location":"2.0/config/authexplicit-ldap/","text":"Authentification explicit for LDAP Directory Services authmanagers explicit object explicit authentification use a directory service. A bind operation is used to authenticate clients to the directory server, to establish an authorisation identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionary object and contains an explicit provider. For example : 'explicit': { 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description default_domain string set the default domain name, if user does not prefix the login by domain\\s. default_domain is only used by Active Directory provider providers dictionary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionary object and must contain a key name. The key name must be set with the same value in provider configuration and config_ref . The provider is formatted as a dictionary. Example for a provider defined as planet { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased readability , the configuration is defined in a dedicated and separated dictionary as (key,value) 'config_ref': 'planet' , where key is config_ref and value is the dictionary variable name. enable boolean True to enable or False to disable the provider configuration The ldapconfig is a dictionary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://192.168.8.195' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } } } } ldap configuration reference Variable name Type Description Example default boolean Use this ldap configuration as default (if more than one ldap auth provider is defined) True auth_only boolean Do not run ldap queries, only use to run authentication False auth_type string authentification protocol to bind the ldap server. Values can be 'KERBEROS', 'NTLM' or 'SIMPLE' The default value is 'SIMPLE' basedn string LDAP base Distinguished Name ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. This entry must be prefixed by the protocol ldap or ldaps for each server [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13' ] LDAP server address IP Address or FQDN value scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos keytab file the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) serviceaccount dictionary entries to defined service account credentials formatted like { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } or { 'login': 'file://config/serviceaccount/login', 'password': 'file://config/serviceaccount/passwd' } ldap service account Ldap service account permits service account binding. A service account can be defined using clear text login and password data, or as file reference login and password starting by file:// . If login starts by file:// , then pyos open the defined file to read login data. If password starts by file:// , then pyos open the defined file to read password data. The file reference file:// for login and password is used to read kubernetes secret file data. Configure Auth using the OpenLDAP container OpenLDAP container for testing To configure abcdesktop to use an explicit authentification, we need a directory service. We use an OpenLDAP container for testing with provisioned values. docker-test-openldap from rroemhild works fine ans id very useful. Read the OpenLDAP container for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing Update the od.config configuration file Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap' ] }} Save your new od.config file. Open the URL: http://localhost:30443 The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. The LDAP structure of OpenLDAP container for testing BaseDN The basedn is dc=planetexpress,dc=com admin account The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone OU Users The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com Users cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes cn=Turanga Leela,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela Groups cn=admin_staff,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com cn=ship_crew,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com Insert the user credentials Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela : Applications remainted Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"LDAP"},{"location":"2.0/config/authexplicit-ldap/#authentification-explicit-for-ldap-directory-services","text":"","title":"Authentification explicit for LDAP Directory Services"},{"location":"2.0/config/authexplicit-ldap/#authmanagers-explicit-object","text":"explicit authentification use a directory service. A bind operation is used to authenticate clients to the directory server, to establish an authorisation identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionary object and contains an explicit provider. For example : 'explicit': { 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description default_domain string set the default domain name, if user does not prefix the login by domain\\s. default_domain is only used by Active Directory provider providers dictionary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"2.0/config/authexplicit-ldap/#providers-configuration","text":"The provider authentification configuration is defined as a dictionary object and must contain a key name. The key name must be set with the same value in provider configuration and config_ref . The provider is formatted as a dictionary. Example for a provider defined as planet { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased readability , the configuration is defined in a dedicated and separated dictionary as (key,value) 'config_ref': 'planet' , where key is config_ref and value is the dictionary variable name. enable boolean True to enable or False to disable the provider configuration The ldapconfig is a dictionary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://192.168.8.195' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } } } }","title":"providers configuration"},{"location":"2.0/config/authexplicit-ldap/#ldap-configuration-reference","text":"Variable name Type Description Example default boolean Use this ldap configuration as default (if more than one ldap auth provider is defined) True auth_only boolean Do not run ldap queries, only use to run authentication False auth_type string authentification protocol to bind the ldap server. Values can be 'KERBEROS', 'NTLM' or 'SIMPLE' The default value is 'SIMPLE' basedn string LDAP base Distinguished Name ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. This entry must be prefixed by the protocol ldap or ldaps for each server [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13' ] LDAP server address IP Address or FQDN value scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos keytab file the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) serviceaccount dictionary entries to defined service account credentials formatted like { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } or { 'login': 'file://config/serviceaccount/login', 'password': 'file://config/serviceaccount/passwd' }","title":"ldap configuration reference"},{"location":"2.0/config/authexplicit-ldap/#ldap-service-account","text":"Ldap service account permits service account binding. A service account can be defined using clear text login and password data, or as file reference login and password starting by file:// . If login starts by file:// , then pyos open the defined file to read login data. If password starts by file:// , then pyos open the defined file to read password data. The file reference file:// for login and password is used to read kubernetes secret file data.","title":"ldap service account"},{"location":"2.0/config/authexplicit-ldap/#configure-auth-using-the-openldap-container","text":"","title":"Configure Auth using the OpenLDAP container"},{"location":"2.0/config/authexplicit-ldap/#openldap-container-for-testing","text":"To configure abcdesktop to use an explicit authentification, we need a directory service. We use an OpenLDAP container for testing with provisioned values. docker-test-openldap from rroemhild works fine ans id very useful. Read the OpenLDAP container for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing","title":"OpenLDAP container for testing"},{"location":"2.0/config/authexplicit-ldap/#update-the-odconfig-configuration-file","text":"Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap' ] }} Save your new od.config file. Open the URL: http://localhost:30443 The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Update the od.config configuration file"},{"location":"2.0/config/authexplicit-ldap/#the-ldap-structure-of-openldap-container-for-testing","text":"","title":"The LDAP structure of OpenLDAP container for testing"},{"location":"2.0/config/authexplicit-ldap/#basedn","text":"The basedn is dc=planetexpress,dc=com","title":"BaseDN"},{"location":"2.0/config/authexplicit-ldap/#admin-account","text":"The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone","title":"admin account"},{"location":"2.0/config/authexplicit-ldap/#ou-users","text":"The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com","title":"OU Users"},{"location":"2.0/config/authexplicit-ldap/#users","text":"","title":"Users"},{"location":"2.0/config/authexplicit-ldap/#cnhubert-j-farnsworthoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor","title":"cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#cnphilip-j-fryoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry","title":"cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#cnjohn-a-zoidbergoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg","title":"cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#cnhermes-conradoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes","title":"cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#cnturanga-leelaoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela","title":"cn=Turanga Leela,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#groups","text":"","title":"Groups"},{"location":"2.0/config/authexplicit-ldap/#cnadmin_staffoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com","title":"cn=admin_staff,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#cnship_crewoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com","title":"cn=ship_crew,ou=people,dc=planetexpress,dc=com"},{"location":"2.0/config/authexplicit-ldap/#insert-the-user-credentials","text":"Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela :","title":"Insert the user credentials"},{"location":"2.0/config/authexplicit-ldap/#applications-remainted","text":"Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"Applications remainted"},{"location":"2.0/config/authexplicit/","text":"Authentification explicit authmanagers explicit : explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionary object and contains an explicit provider. The explicit provider support the directory services ldap , ldaps , and Microsoft Active Directory , and SIMPLE , NTLM and KERBEROS protocols. Configuration sample for Microsoft Active Directory with KERBEROS protocol : 'explicit': { 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'KERBEROS' 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL' } } } Home page authentification If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. LDAP authmanagers : Read the specific chapter on LDAP explicit authmanagers Microsoft Active Directory authmanagers : Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Directory services"},{"location":"2.0/config/authexplicit/#authentification-explicit","text":"","title":"Authentification explicit"},{"location":"2.0/config/authexplicit/#authmanagers-explicit","text":"explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionary object and contains an explicit provider. The explicit provider support the directory services ldap , ldaps , and Microsoft Active Directory , and SIMPLE , NTLM and KERBEROS protocols. Configuration sample for Microsoft Active Directory with KERBEROS protocol : 'explicit': { 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'KERBEROS' 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL' } } }","title":"authmanagers explicit:"},{"location":"2.0/config/authexplicit/#home-page-authentification","text":"If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Home page authentification"},{"location":"2.0/config/authexplicit/#ldap-authmanagers","text":"Read the specific chapter on LDAP explicit authmanagers","title":"LDAP authmanagers :"},{"location":"2.0/config/authexplicit/#microsoft-active-directory-authmanagers","text":"Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Microsoft Active Directory authmanagers :"},{"location":"2.0/config/authexternal/","text":"Authentification external Requirements To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https. Library abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients. authmanagers external : external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring . Orange OAuth 2.0 Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation. Orange Application Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', } Facebook OAuth 2.0 Facebook's OAuth is supported for authentication. Facebook Application Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } Google OAuth 2.0 Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret. Google Application Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"external"},{"location":"2.0/config/authexternal/#authentification-external","text":"","title":"Authentification external"},{"location":"2.0/config/authexternal/#requirements","text":"To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https.","title":"Requirements"},{"location":"2.0/config/authexternal/#library","text":"abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients.","title":"Library"},{"location":"2.0/config/authexternal/#authmanagers-external","text":"external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring .","title":"authmanagers external:"},{"location":"2.0/config/authexternal/#orange-oauth-20","text":"Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation.","title":"Orange OAuth 2.0"},{"location":"2.0/config/authexternal/#orange-application","text":"Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', }","title":"Orange Application"},{"location":"2.0/config/authexternal/#facebook-oauth-20","text":"Facebook's OAuth is supported for authentication.","title":"Facebook OAuth 2.0"},{"location":"2.0/config/authexternal/#facebook-application","text":"Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' }","title":"Facebook Application"},{"location":"2.0/config/authexternal/#google-oauth-20","text":"Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret.","title":"Google OAuth 2.0"},{"location":"2.0/config/authexternal/#google-application","text":"Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"Google Application"},{"location":"2.0/config/authimplicit/","text":"Authentification implicit authmanagers implicit : implicit is the easiest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionary object and contains an anonymous provider. anonymous provider always permits authentification, and create a uuid as userid. anonymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anonymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Select the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command kubectl get pods -n abcdesktop Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When an anonymous user close his session, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"implicit"},{"location":"2.0/config/authimplicit/#authentification-implicit","text":"","title":"Authentification implicit"},{"location":"2.0/config/authimplicit/#authmanagers-implicit","text":"implicit is the easiest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionary object and contains an anonymous provider. anonymous provider always permits authentification, and create a uuid as userid. anonymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anonymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Select the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command kubectl get pods -n abcdesktop Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When an anonymous user close his session, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"authmanagers implicit:"},{"location":"2.0/config/authmetaexplicit/","text":"Authentification metaexplicit for Microsoft Active Directory services with trust relationships authmanagers metaexplicit object The metaexplicit authentification manager contains only one provider. The provider must be defined as metadirectory . 'metaexplicit': { 'providers': { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } Variable name Type Description providers dictionary { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True }} metadirectory provider configuration The metadirectory provider is defined as a dictionnary object and must contain key name. The key name must be set as the name of a dictionaryin the config_ref . A metadirectory provider must contain a ldap attribut to describe the original DOMAIN and sAMaccountName. The ldap attribut is defined as join_key_ldapattribut . coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } Pyos binds the metadirectory ldap server with serviceaccount credentials Pyos read the ldap attribut description value to get the user's trusted domain. For example : description: AD\\john Then pyos look for provider AD configuration and process authentification on domain AD The metadirectory accounts can be disabled. The ldap attribut userAccountControl is not read on metaDirectory provider. The account can have the bit UF_ACCOUNT_DISABLE set or not. A service account must defined for a metadirectory provider. The service account is used to bind the metadirectory. Complete example with a metadirectory provider and active directory user domain The user's domain mane is AD. The meta domain name is CORPORATE. The meta domain use a dedicated attribut join_key_ldapattribut authmanagers: { # # define the meta explicit manager # This is the trusted external forest for the followed domain # 'metaexplicit': { 'providers': { # define the metadirectory provider # only one metadirectory provider is supported 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } }, # # define the Active Directory provider for each DOMAIN # define two domains in two disctinct forest with a trust relationship # 'explicit': { # define an Active Directory provider AD 'AD': { 'config_ref': 'adconfig', 'enabled': True }, # define an Active Directory provider ANOTHER 'ANOTHER': { 'config_ref': 'anotherconfig', 'enabled': True } } } # end of authmanagers # In this example ldap attribut's description contains AD\\myuser or ANOTHER\\myuser coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } # # define the first DOMAIN AD # The adconfig ref for domain AD # adconfig : { 'AD': { 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ] } } # # define the second DOMAIN ANOTHER # The anotherconfig ref for domain ANOTHER # anotherconfig : { 'ANOTHER': { 'ldap_basedn' : 'DC=another,DC=super,DC=local', 'ldap_fqdn' : '_ldap._tcp.another.super.local', 'domain' : 'ANOTHER', 'auth_type' : 'KERBEROS', 'domain_fqdn' : 'ANOTHER.SUPER.LOCAL', 'servers' : [ 'ldap://192.168.10.12' ], 'kerberos_realm': 'AD.SUPER.LOCAL' } } metadirectory support metadirectory support the foreign security principal (FSP) to query security principal in the trusted external forest. These objects are created in the foreign security principals container of the domain. metadirectory support isMemberOf on foreign security principal. The user's SID of domain 'AD' or 'ANOTHER' is NOT read. A new ldap bind is done using the trusted domain on metadirectory provider and not unsing the service account. The ldap query is build : ( \"search_base={q.basedn}, search_scope={q.scope}, search_filter={filter}\" ) To get more information about foreign security principal (FSP), read : Foreign Security Principals Container Active Directory: Foreign Security Principals and Special Identities","title":"metadirectory"},{"location":"2.0/config/authmetaexplicit/#authentification-metaexplicit-for-microsoft-active-directory-services-with-trust-relationships","text":"","title":"Authentification metaexplicit for Microsoft Active Directory services with trust relationships"},{"location":"2.0/config/authmetaexplicit/#authmanagers-metaexplicit-object","text":"The metaexplicit authentification manager contains only one provider. The provider must be defined as metadirectory . 'metaexplicit': { 'providers': { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } Variable name Type Description providers dictionary { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True }}","title":"authmanagers metaexplicit object"},{"location":"2.0/config/authmetaexplicit/#metadirectory-provider-configuration","text":"The metadirectory provider is defined as a dictionnary object and must contain key name. The key name must be set as the name of a dictionaryin the config_ref . A metadirectory provider must contain a ldap attribut to describe the original DOMAIN and sAMaccountName. The ldap attribut is defined as join_key_ldapattribut . coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } Pyos binds the metadirectory ldap server with serviceaccount credentials Pyos read the ldap attribut description value to get the user's trusted domain. For example : description: AD\\john Then pyos look for provider AD configuration and process authentification on domain AD The metadirectory accounts can be disabled. The ldap attribut userAccountControl is not read on metaDirectory provider. The account can have the bit UF_ACCOUNT_DISABLE set or not. A service account must defined for a metadirectory provider. The service account is used to bind the metadirectory.","title":"metadirectory provider configuration"},{"location":"2.0/config/authmetaexplicit/#complete-example-with-a-metadirectory-provider-and-active-directory-user-domain","text":"The user's domain mane is AD. The meta domain name is CORPORATE. The meta domain use a dedicated attribut join_key_ldapattribut authmanagers: { # # define the meta explicit manager # This is the trusted external forest for the followed domain # 'metaexplicit': { 'providers': { # define the metadirectory provider # only one metadirectory provider is supported 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } }, # # define the Active Directory provider for each DOMAIN # define two domains in two disctinct forest with a trust relationship # 'explicit': { # define an Active Directory provider AD 'AD': { 'config_ref': 'adconfig', 'enabled': True }, # define an Active Directory provider ANOTHER 'ANOTHER': { 'config_ref': 'anotherconfig', 'enabled': True } } } # end of authmanagers # In this example ldap attribut's description contains AD\\myuser or ANOTHER\\myuser coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } # # define the first DOMAIN AD # The adconfig ref for domain AD # adconfig : { 'AD': { 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ] } } # # define the second DOMAIN ANOTHER # The anotherconfig ref for domain ANOTHER # anotherconfig : { 'ANOTHER': { 'ldap_basedn' : 'DC=another,DC=super,DC=local', 'ldap_fqdn' : '_ldap._tcp.another.super.local', 'domain' : 'ANOTHER', 'auth_type' : 'KERBEROS', 'domain_fqdn' : 'ANOTHER.SUPER.LOCAL', 'servers' : [ 'ldap://192.168.10.12' ], 'kerberos_realm': 'AD.SUPER.LOCAL' } }","title":"Complete example with a metadirectory provider and active directory user domain"},{"location":"2.0/config/authmetaexplicit/#metadirectorysupport","text":"metadirectory support the foreign security principal (FSP) to query security principal in the trusted external forest. These objects are created in the foreign security principals container of the domain. metadirectory support isMemberOf on foreign security principal. The user's SID of domain 'AD' or 'ANOTHER' is NOT read. A new ldap bind is done using the trusted domain on metadirectory provider and not unsing the service account. The ldap query is build : ( \"search_base={q.basedn}, search_scope={q.scope}, search_filter={filter}\" ) To get more information about foreign security principal (FSP), read : Foreign Security Principals Container Active Directory: Foreign Security Principals and Special Identities","title":"metadirectorysupport"},{"location":"2.0/config/balloon/","text":"balloon user entry in od.config balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"2.0/config/balloon/#balloon-user-entry-in-odconfig","text":"balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"2.0/config/controllers/","text":"Controllers Controllers abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information Access Permission The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Overview"},{"location":"2.0/config/controllers/#controllers","text":"","title":"Controllers"},{"location":"2.0/config/controllers/#controllers_1","text":"abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information","title":"Controllers"},{"location":"2.0/config/controllers/#access-permission","text":"The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Access Permission"},{"location":"2.0/config/desktop/","text":"desktop options in od.config The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode . desktop.options All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.usex11unixsocket boolean True desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'volume' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.allowPrivilegeEscalation boolean False desktop.securityopt list [ 'no-new-privileges', 'seccomp=unconfined' ] desktop.imagePullSecret string None desktop.image string 'abcdesktopio/oc.user.18.04:latest' desktop.imageprinter string 'abcdesktopio/oc.cupsd.18.04:latest' desktop.useprintercontainer boolean False desktop.soundimage string 'abcdesktopio/oc.pulseaudio.18.04' desktop.usesoundcontainer boolean False desktop.usecontainerimage boolean False desktop.initcontainerimage string 'abcdesktopio/oc.busybox' desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' } desktop.usex11unixsocket The desktop.usex11unixsocket force the X11 server to use local unix socket. The name of the X11 unix socket is /tmp/.X11-unix/X0 If this feature is enable : A container application need a the DISPLAY. The DISPLAY is in this case :0.0 . The container application and the oc.user container share the same volume /tmp , and share the X11 unix socket is /tmp/.X11-unix/X0 . If this feature is disable : A container application need a DISPLAY. The DISPLAY is :0.0 (don't think at IPADDRESS_OF_X11_SERVER:0.0 to protect X11 access control). The two containers share the same network stack by default. The X11 server NEED to listen to a TCP or UDP port. You can disable this features, but you have to replace the default TigerVNC by another X11 Server and a VNC Server. You can choose (x.org + x11vnc) for example, but you need more CPU ressource than TigerVNC. TigerVNC does not support to listen on TCP Port. TigerVNC is a X11 and a VNC Server. Set the desktop.usex11unixsocket value to True in most case, and this should not be changed. desktop.shareipcnamespace The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system\u2019s IPC namespace. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access \"container: \". Default value desktop.shareipcnamespace : 'shareable' desktop.homedirectory This option describes how the default home directory for user user ballon should be created : None : no dedicated volume is created, the oc.user container use a directory inside the container. All user data will be removed at logout. 'volume' : This value is only recommended in docker mode. 'volume' option create a dedicated volume, the oc.user container and applications may share this volume. User home data are persistent. 'persistentVolumeClaim' : This value is only avalaible in kubernetes. PersistentVolumeClaim option use a persistentVolumeClaim to create the user home directory. The persistentVolumeClaim can be mapped to differents storage data (like NFS, iSCSI, RBD...). Read more about persistentVolumeClaim on the kubernetes.io website. You need the set the value of desktop.persistentvolumeclaim or create a default Persistent Volume Claim named 'abcdesktop-pvc' desktop.persistentvolumeclaim This value is only avalaible in kubernetes mode. desktop.persistentvolumeclaim is the name of the Persistent Volume Claim if the desktop.homedirectory is set to 'persistentVolumeClaim' . The PVC (Persistent Volume Claim) must exist. Run the kubectl get pvc command to list the persistent volume claim NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE abcdesktop-pvc Bound abcdesktop-pv 5Gi RWO abcdesktop-standard 170d desktop.remotehomedirectorytype desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory . desktop.allowPrivilegeEscalation The desktop.allowPrivilegeEscalation option allow a user to run a sudo command. The execve system call can grant a newly-started program privileges that its parent did not have, such as the setuid or setgid Linux flags. The default value is False You should only set desktop.allowPrivilegeEscalation to run sudo command. In production this value MUST be set to False desktop.defaultbackgroundcolors The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example : desktop.imagePullSecret The desktop.imagePullSecret is the name of the secret used by Kubernetes to access to the private registry. The type of desktop.imagePullSecret is a string. This option is only available in Kubernetes mode, and anly used if you need to store the abcdesktop docker image on a private registry. Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU desktop.image The desktop.image is the name of the X11 server container The default value is abcdesktopio/oc.user.18.04 desktop.printerimage The desktop.printerimage is the name of the printer container The default value is abcdesktopio.oc.cupds.18.04 desktop.useprintercontainer The desktop.useprintercontainer is boolean, to use printer cupsd service as an separated container. This value is only available in kubernetes mode. The default value is False . desktop.soundimage The desktop.soundimage is the name of the sound container image The default value is abcdesktopio/oc.pulseaudio.18.04 desktop.usesoundcontainer The desktop.usesoundcontainer is boolean, to use pulseaudio service as a separated container. This value is only available in kubernetes mode. The default value is False . desktop.useinitcontainer The desktop.useinitcontainer is boolean, to use init container. The default value is False . The code call the desktop.initcontainercommand list . The initcontainerimage is a busybox shell, for example to make sure that the home directory belongs to user balloon . /home/balloon must belong to balloon default user and balloon default group. desktop.initcontainercommand The desktop.initcontainercommand runs the command at init container. The default value is None , the default type is list . desktop.initcontainercommand example : desktop.initcontainercommand : [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] This option is used when presistent volume data mount a nfs storage. The uid and gid of /home/balloon must be set to the default value of (balloon:balloon) (4096:4096) . desktop.initcontainerimage The desktop.initcontainerimage is the name of the init container image. The default value is busybox . desktop.envlocal desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'WINEARCH': 'win32', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon', 'PULSE_SERVER: '/tmp/.pulse.sock', 'CUPS_SERVER': '/tmp/.cups.sock' } Add 'CUPS_SERVER: '/tmp/.cups.sock' only if desktop.useprintercontainer is True. Add 'PULSE_SERVER: '/tmp/.pulse.sock' only if desktop.usesoundcontainer is True. desktop.nodeselector desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' } desktop.username desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userid desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.groupid desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userhomedirectory desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.uselocaltime The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime . desktop.policies The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 } desktop.application_config Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations desktop.host_config Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations desktop.webhookdict desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects. Experimental features desktop.desktopuseinternalfqdn WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"Desktop"},{"location":"2.0/config/desktop/#desktop-options-in-odconfig","text":"The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode .","title":"desktop options in od.config"},{"location":"2.0/config/desktop/#desktopoptions","text":"All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.usex11unixsocket boolean True desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'volume' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.allowPrivilegeEscalation boolean False desktop.securityopt list [ 'no-new-privileges', 'seccomp=unconfined' ] desktop.imagePullSecret string None desktop.image string 'abcdesktopio/oc.user.18.04:latest' desktop.imageprinter string 'abcdesktopio/oc.cupsd.18.04:latest' desktop.useprintercontainer boolean False desktop.soundimage string 'abcdesktopio/oc.pulseaudio.18.04' desktop.usesoundcontainer boolean False desktop.usecontainerimage boolean False desktop.initcontainerimage string 'abcdesktopio/oc.busybox' desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' }","title":"desktop.options"},{"location":"2.0/config/desktop/#desktopusex11unixsocket","text":"The desktop.usex11unixsocket force the X11 server to use local unix socket. The name of the X11 unix socket is /tmp/.X11-unix/X0 If this feature is enable : A container application need a the DISPLAY. The DISPLAY is in this case :0.0 . The container application and the oc.user container share the same volume /tmp , and share the X11 unix socket is /tmp/.X11-unix/X0 . If this feature is disable : A container application need a DISPLAY. The DISPLAY is :0.0 (don't think at IPADDRESS_OF_X11_SERVER:0.0 to protect X11 access control). The two containers share the same network stack by default. The X11 server NEED to listen to a TCP or UDP port. You can disable this features, but you have to replace the default TigerVNC by another X11 Server and a VNC Server. You can choose (x.org + x11vnc) for example, but you need more CPU ressource than TigerVNC. TigerVNC does not support to listen on TCP Port. TigerVNC is a X11 and a VNC Server. Set the desktop.usex11unixsocket value to True in most case, and this should not be changed.","title":"desktop.usex11unixsocket"},{"location":"2.0/config/desktop/#desktopshareipcnamespace","text":"The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system\u2019s IPC namespace. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access \"container: \". Default value desktop.shareipcnamespace : 'shareable'","title":"desktop.shareipcnamespace"},{"location":"2.0/config/desktop/#desktophomedirectory","text":"This option describes how the default home directory for user user ballon should be created : None : no dedicated volume is created, the oc.user container use a directory inside the container. All user data will be removed at logout. 'volume' : This value is only recommended in docker mode. 'volume' option create a dedicated volume, the oc.user container and applications may share this volume. User home data are persistent. 'persistentVolumeClaim' : This value is only avalaible in kubernetes. PersistentVolumeClaim option use a persistentVolumeClaim to create the user home directory. The persistentVolumeClaim can be mapped to differents storage data (like NFS, iSCSI, RBD...). Read more about persistentVolumeClaim on the kubernetes.io website. You need the set the value of desktop.persistentvolumeclaim or create a default Persistent Volume Claim named 'abcdesktop-pvc'","title":"desktop.homedirectory"},{"location":"2.0/config/desktop/#desktoppersistentvolumeclaim","text":"This value is only avalaible in kubernetes mode. desktop.persistentvolumeclaim is the name of the Persistent Volume Claim if the desktop.homedirectory is set to 'persistentVolumeClaim' . The PVC (Persistent Volume Claim) must exist. Run the kubectl get pvc command to list the persistent volume claim NAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGE abcdesktop-pvc Bound abcdesktop-pv 5Gi RWO abcdesktop-standard 170d","title":"desktop.persistentvolumeclaim"},{"location":"2.0/config/desktop/#desktopremotehomedirectorytype","text":"desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory .","title":"desktop.remotehomedirectorytype"},{"location":"2.0/config/desktop/#desktopallowprivilegeescalation","text":"The desktop.allowPrivilegeEscalation option allow a user to run a sudo command. The execve system call can grant a newly-started program privileges that its parent did not have, such as the setuid or setgid Linux flags. The default value is False You should only set desktop.allowPrivilegeEscalation to run sudo command. In production this value MUST be set to False","title":"desktop.allowPrivilegeEscalation"},{"location":"2.0/config/desktop/#desktopdefaultbackgroundcolors","text":"The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost, in your web browser, to start a simple abcdesktop.io container. http://localhost You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example :","title":"desktop.defaultbackgroundcolors"},{"location":"2.0/config/desktop/#desktopimagepullsecret","text":"The desktop.imagePullSecret is the name of the secret used by Kubernetes to access to the private registry. The type of desktop.imagePullSecret is a string. This option is only available in Kubernetes mode, and anly used if you need to store the abcdesktop docker image on a private registry. Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU","title":"desktop.imagePullSecret"},{"location":"2.0/config/desktop/#desktopimage","text":"The desktop.image is the name of the X11 server container The default value is abcdesktopio/oc.user.18.04","title":"desktop.image"},{"location":"2.0/config/desktop/#desktopprinterimage","text":"The desktop.printerimage is the name of the printer container The default value is abcdesktopio.oc.cupds.18.04","title":"desktop.printerimage"},{"location":"2.0/config/desktop/#desktopuseprintercontainer","text":"The desktop.useprintercontainer is boolean, to use printer cupsd service as an separated container. This value is only available in kubernetes mode. The default value is False .","title":"desktop.useprintercontainer"},{"location":"2.0/config/desktop/#desktopsoundimage","text":"The desktop.soundimage is the name of the sound container image The default value is abcdesktopio/oc.pulseaudio.18.04","title":"desktop.soundimage"},{"location":"2.0/config/desktop/#desktopusesoundcontainer","text":"The desktop.usesoundcontainer is boolean, to use pulseaudio service as a separated container. This value is only available in kubernetes mode. The default value is False .","title":"desktop.usesoundcontainer"},{"location":"2.0/config/desktop/#desktopuseinitcontainer","text":"The desktop.useinitcontainer is boolean, to use init container. The default value is False . The code call the desktop.initcontainercommand list . The initcontainerimage is a busybox shell, for example to make sure that the home directory belongs to user balloon . /home/balloon must belong to balloon default user and balloon default group.","title":"desktop.useinitcontainer"},{"location":"2.0/config/desktop/#desktopinitcontainercommand","text":"The desktop.initcontainercommand runs the command at init container. The default value is None , the default type is list . desktop.initcontainercommand example : desktop.initcontainercommand : [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] This option is used when presistent volume data mount a nfs storage. The uid and gid of /home/balloon must be set to the default value of (balloon:balloon) (4096:4096) .","title":"desktop.initcontainercommand"},{"location":"2.0/config/desktop/#desktopinitcontainerimage","text":"The desktop.initcontainerimage is the name of the init container image. The default value is busybox .","title":"desktop.initcontainerimage"},{"location":"2.0/config/desktop/#desktopenvlocal","text":"desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'WINEARCH': 'win32', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon', 'PULSE_SERVER: '/tmp/.pulse.sock', 'CUPS_SERVER': '/tmp/.cups.sock' } Add 'CUPS_SERVER: '/tmp/.cups.sock' only if desktop.useprintercontainer is True. Add 'PULSE_SERVER: '/tmp/.pulse.sock' only if desktop.usesoundcontainer is True.","title":"desktop.envlocal"},{"location":"2.0/config/desktop/#desktopnodeselector","text":"desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' }","title":"desktop.nodeselector"},{"location":"2.0/config/desktop/#desktopusername","text":"desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.username"},{"location":"2.0/config/desktop/#desktopuserid","text":"desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userid"},{"location":"2.0/config/desktop/#desktopgroupid","text":"desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.groupid"},{"location":"2.0/config/desktop/#desktopuserhomedirectory","text":"desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userhomedirectory"},{"location":"2.0/config/desktop/#desktopuselocaltime","text":"The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime .","title":"desktop.uselocaltime"},{"location":"2.0/config/desktop/#desktoppolicies","text":"The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 }","title":"desktop.policies"},{"location":"2.0/config/desktop/#desktopapplication_config","text":"Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations","title":"desktop.application_config"},{"location":"2.0/config/desktop/#desktophost_config","text":"Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations","title":"desktop.host_config"},{"location":"2.0/config/desktop/#desktopwebhookdict","text":"desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects.","title":"desktop.webhookdict"},{"location":"2.0/config/desktop/#experimental-features","text":"","title":"Experimental features"},{"location":"2.0/config/desktop/#desktopdesktopuseinternalfqdn","text":"WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"desktop.desktopuseinternalfqdn"},{"location":"2.0/config/editconfig/","text":"How to edit pyos core service configuration file Edit your configuration file Download the default od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors option in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local od.config file. To apply changes, you can replace the abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop | you can also use the replace command kubectl create configmap -n abcdesktop abcdesktop-config --from-file=od.config -o yaml --dry-run | kubectl replace -n abcdesktop -f - Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop Check that the new colours are presents in front : Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colour and you should have it as background colour : Great, you can easily update your configuration file od.config .","title":"Edit your configuration file"},{"location":"2.0/config/editconfig/#how-to-edit-pyos-core-service-configuration-file","text":"","title":"How to edit pyos core service configuration file"},{"location":"2.0/config/editconfig/#edit-your-configuration-file","text":"Download the default od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors option in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local od.config file. To apply changes, you can replace the abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop | you can also use the replace command kubectl create configmap -n abcdesktop abcdesktop-config --from-file=od.config -o yaml --dry-run | kubectl replace -n abcdesktop -f - Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop","title":"Edit your configuration file"},{"location":"2.0/config/editconfig/#check-that-the-new-colours-are-presents-in-front","text":"Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colour and you should have it as background colour : Great, you can easily update your configuration file od.config .","title":"Check that the new colours are presents in front :"},{"location":"2.0/config/frontjs/","text":"dock configuration in od.config Menu Setting The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True } default dock config The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } } Additional applications This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Front"},{"location":"2.0/config/frontjs/#dock-configuration-in-odconfig","text":"","title":"dock configuration in od.config"},{"location":"2.0/config/frontjs/#menu-setting","text":"The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True }","title":"Menu Setting"},{"location":"2.0/config/frontjs/#default-dock-config","text":"The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } }","title":"default dock config"},{"location":"2.0/config/frontjs/#additional-applications","text":"This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Additional applications"},{"location":"2.0/config/host_config/","text":"host_config resource description host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" } host_config entries Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings. Main host_config entries descriptions auto_remove The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True cpu_period cpu_quota cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling. privileged The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False. ipc_mode The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers. security_opt The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website. capabilities cap_add cap_drop This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"host_config resource description"},{"location":"2.0/config/host_config/#host_config-resource-description","text":"host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" }","title":"host_config resource description"},{"location":"2.0/config/host_config/#host_config-entries","text":"Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings.","title":"host_config entries"},{"location":"2.0/config/host_config/#main-host_config-entries-descriptions","text":"","title":"Main host_config entries descriptions"},{"location":"2.0/config/host_config/#auto_remove","text":"The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True","title":"auto_remove"},{"location":"2.0/config/host_config/#cpu_period-cpu_quota","text":"cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling.","title":"cpu_period  cpu_quota"},{"location":"2.0/config/host_config/#privileged","text":"The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False.","title":"privileged"},{"location":"2.0/config/host_config/#ipc_mode","text":"The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers.","title":"ipc_mode"},{"location":"2.0/config/host_config/#security_opt","text":"The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website.","title":"security_opt"},{"location":"2.0/config/host_config/#capabilities-cap_add-cap_drop","text":"This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"capabilities cap_add cap_drop"},{"location":"2.0/config/jira/","text":"JIRA configuration abcdesktop.io support JIRA JIRA option In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"Jira"},{"location":"2.0/config/jira/#jira-configuration","text":"abcdesktop.io support JIRA","title":"JIRA configuration"},{"location":"2.0/config/jira/#jira-option","text":"In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"JIRA option"},{"location":"2.0/config/language/","text":"Language entry in od.config The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US Language in abcdesktop.io oc.user The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header. Language in abcdesktop.io Applications abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session. Set the web browser's default language to en_US : The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language. Set the web browser's default language to fr_FR : You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Languages"},{"location":"2.0/config/language/#language-entry-in-odconfig","text":"The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US","title":"Language entry in od.config"},{"location":"2.0/config/language/#language-in-abcdesktopio-ocuser","text":"The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header.","title":"Language in abcdesktop.io oc.user"},{"location":"2.0/config/language/#language-in-abcdesktopio-applications","text":"abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session.","title":"Language in abcdesktop.io Applications"},{"location":"2.0/config/language/#set-the-web-browsers-default-language-to-en_us","text":"The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language.","title":"Set the web browser's default language to en_US :"},{"location":"2.0/config/language/#set-the-web-browsers-default-language-to-fr_fr","text":"You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Set the web browser's default language to fr_FR :"},{"location":"2.0/config/linux_syslog_config/","text":"Modify /etc/rsyslog.conf By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\") Restart rsyslog Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Linux syslog config"},{"location":"2.0/config/linux_syslog_config/#modify-etcrsyslogconf","text":"By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\")","title":"Modify /etc/rsyslog.conf"},{"location":"2.0/config/linux_syslog_config/#restart-rsyslog","text":"Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Restart rsyslog"},{"location":"2.0/config/logging/","text":"Logging configuration in od.config The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging"},{"location":"2.0/config/logging/#logging-configuration-in-odconfig","text":"The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging configuration in od.config"},{"location":"2.0/config/stack/","text":"stack entry in od.config stack.mode stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services stack.kubernetesdefaultdomain stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"stack entry in od.config"},{"location":"2.0/config/stack/#stack-entry-in-odconfig","text":"","title":"stack entry in od.config"},{"location":"2.0/config/stack/#stackmode","text":"stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services","title":"stack.mode"},{"location":"2.0/config/stack/#stackkubernetesdefaultdomain","text":"stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"stack.kubernetesdefaultdomain"},{"location":"2.0/config/sudo-kubernetes/","text":"How to get a root access inside a container running kubernetes abcdesktop ? run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"Sudo kubernetes"},{"location":"2.0/config/sudo-kubernetes/#how-to-get-a-root-access-inside-a-container-running-kubernetes-abcdesktop","text":"run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"How to get a root access inside a container running kubernetes abcdesktop ?"},{"location":"2.0/config/syslog/","text":"Syslog configuration in od.config Add syslog server support 'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication. Start syslog container Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0' Modify logging entry To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file) Add Syslog Handler In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1 Add loggers handlers entries In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } Resulting Modified sample configuration file # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } } Restart Pods To restart Pods, we will delete and recreate all pods Delete pods To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml Create pods To create pods, execute the following command: kubectl create -f abcdesktop.yaml Verify syslogs At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Syslog"},{"location":"2.0/config/syslog/#syslog-configuration-in-odconfig","text":"","title":"Syslog configuration in od.config"},{"location":"2.0/config/syslog/#add-syslog-server-support","text":"'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication.","title":"Add syslog server support"},{"location":"2.0/config/syslog/#start-syslog-container","text":"Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0'","title":"Start syslog container"},{"location":"2.0/config/syslog/#modify-logging-entry","text":"To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file)","title":"Modify logging entry"},{"location":"2.0/config/syslog/#add-syslog-handler","text":"In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1","title":"Add Syslog Handler"},{"location":"2.0/config/syslog/#add-loggers-handlers-entries","text":"In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False }","title":"Add loggers handlers entries"},{"location":"2.0/config/syslog/#resulting-modified-sample-configuration-file","text":"# # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } }","title":"Resulting Modified sample configuration file"},{"location":"2.0/config/syslog/#restart-pods","text":"To restart Pods, we will delete and recreate all pods","title":"Restart Pods"},{"location":"2.0/config/syslog/#delete-pods","text":"To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml","title":"Delete pods"},{"location":"2.0/config/syslog/#create-pods","text":"To create pods, execute the following command: kubectl create -f abcdesktop.yaml","title":"Create pods"},{"location":"2.0/config/syslog/#verify-syslogs","text":"At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Verify syslogs"},{"location":"2.0/config/webrtc/","text":"Sound server configuration By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser pulseaudio http stream (by default) By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink webrtc gateway enable To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats Requirements a janus server add webrtc configuration in od.config file Install a janus server Install janus Install a janus service from meetecho.com on a server apt-get install janus Add X509 certificats Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" } add the webrtc entry in od.config Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } } webrtc.enable webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio . webrtc.server webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"Pulseaudio"},{"location":"2.0/config/webrtc/#sound-server-configuration","text":"By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser","title":"Sound server configuration"},{"location":"2.0/config/webrtc/#pulseaudio-http-stream-by-default","text":"By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink","title":"pulseaudio http stream (by default)"},{"location":"2.0/config/webrtc/#webrtc-gateway-enable","text":"To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats","title":"webrtc gateway enable"},{"location":"2.0/config/webrtc/#requirements","text":"a janus server add webrtc configuration in od.config file","title":"Requirements"},{"location":"2.0/config/webrtc/#install-a-janus-server","text":"","title":"Install a janus server"},{"location":"2.0/config/webrtc/#install-janus","text":"Install a janus service from meetecho.com on a server apt-get install janus","title":"Install janus"},{"location":"2.0/config/webrtc/#add-x509-certificats","text":"Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" }","title":"Add X509 certificats"},{"location":"2.0/config/webrtc/#add-the-webrtc-entry-in-odconfig","text":"Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"add the webrtc entry in od.config"},{"location":"2.0/config/webrtc/#webrtcenable","text":"webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio .","title":"webrtc.enable"},{"location":"2.0/config/webrtc/#webrtcserver","text":"webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"webrtc.server"},{"location":"2.0/config/controllers/manager/","text":"ManagerController HTTP Request The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object buildapplist buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}} updateactivedirectorysite Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite garbagecollector Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"Manager"},{"location":"2.0/config/controllers/manager/#managercontroller","text":"","title":"ManagerController"},{"location":"2.0/config/controllers/manager/#http-request","text":"The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object","title":"HTTP Request"},{"location":"2.0/config/controllers/manager/#buildapplist","text":"buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}}","title":"buildapplist"},{"location":"2.0/config/controllers/manager/#updateactivedirectorysite","text":"Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite","title":"updateactivedirectorysite"},{"location":"2.0/config/controllers/manager/#garbagecollector","text":"Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"garbagecollector"},{"location":"2.0/setup/kubernetes_abcdesktop/","text":"abcdesktop.io in kubernetes mode abcdesktop.io release 2.x support only kubernetes mode. All applications containers can be distributed on different hosts. In kubernetes mode, the abcdesktop.io infrastructure use seven containers (oc.cups is optional), each container has a specific role : Container Role Image From oc.user user container abcdesktopio/oc.user.18.04:2.0 abcdesktopio oc.cups printing container abcdesktopio/oc.cupsd.18.04:2.0 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos:2.0 abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx:2.0 abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached Requirements You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. The command line openssl must be installed too. You can run the Quick installation process or choose the Manually installation step by step Quick installation (Linux or macOS) Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.2.x.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption create all services, pods, secrets and configmaps download user's core images: oc.user, oc.cupsd, oc.pulseaudio download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. You can also download the install.2.x.sh bash script, and read it and then run it. Manually installation step by step (Linux, macOS or Windows) The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server. Install abcdesktop Step 1: Create abcdesktop namespace We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands. Step 2: Securized abcdesktop All communications between nginx, pyos and user navigator are encrypted by JSON Web Tokens. The JSON Web Tokens payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JSON Web Tokens payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script and by pyos, export the public key using the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python and lua. The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop Verify Secrets You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s Step 3: Download core images, create Pods, and services On a worker node, fetch the three user default images, to make sure that Kubernetes will find the docker images at startup time. docker pull abcdesktopio/oc.user.kubernete.18.04:2.0 docker pull abcdesktopio/oc.cupsd.18.04:2.0 docker pull abcdesktopio/oc.pulseaudio.18.04:2.0 You should read on the standard output oc.user.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.user.18.04:2.0 oc.cupsd.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.cupsd.18.04 oc.pulseaudio.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.pulseaudio.18.04 Create the abcdesktop pods and services abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.2.0.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created Verify Pods Once the pods are created, all pods should be running. For the first time, status maybe long to become running as some container images may be downloaded kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s Connect your local abcdesktop Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen. Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some applications. Read the chapter add kubernetes container Troubleshoot All resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry. Verify Daemonsets kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 16m daemonset-pyos 1 1 1 1 1 <none> 16m Verify service ports kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 17m memcached ClusterIP 10.110.16.25 <none> 11211/TCP 17m mongodb ClusterIP 10.110.49.161 <none> 27017/TCP 17m nginx NodePort 10.102.13.5 <none> 80:30443/TCP 17m openldap ClusterIP 10.108.52.65 <none> 389/TCP 17m pyos ClusterIP 10.111.123.108 <none> 8000/TCP 17m speedtest ClusterIP 10.101.137.100 <none> 80/TCP 17m Verify cluster roles kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/exec [] [] [create get list watch update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] pods/log [] [] [get list watch] nodes [] [] [get watch list] Verify Cluster Role Bindind kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Name: pyos-rbac Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop View pyos logs Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop Note that you also can view logs using docker command Rollout daemonset To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Setup abcdesktop for Kubernetes"},{"location":"2.0/setup/kubernetes_abcdesktop/#abcdesktopio-in-kubernetes-mode","text":"abcdesktop.io release 2.x support only kubernetes mode. All applications containers can be distributed on different hosts. In kubernetes mode, the abcdesktop.io infrastructure use seven containers (oc.cups is optional), each container has a specific role : Container Role Image From oc.user user container abcdesktopio/oc.user.18.04:2.0 abcdesktopio oc.cups printing container abcdesktopio/oc.cupsd.18.04:2.0 abcdesktopio oc.pyos API Server abcdesktopio/oc.pyos:2.0 abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx:2.0 abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached","title":"abcdesktop.io in kubernetes mode"},{"location":"2.0/setup/kubernetes_abcdesktop/#requirements","text":"You need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. The command line openssl must be installed too. You can run the Quick installation process or choose the Manually installation step by step","title":"Requirements"},{"location":"2.0/setup/kubernetes_abcdesktop/#quick-installation-linux-or-macos","text":"Quick installation can be run on Linux or macOS operation system. For Microsoft Windows, please read the following chapter 'Manually installation step by step' Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install.2.x.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption create all services, pods, secrets and configmaps download user's core images: oc.user, oc.cupsd, oc.pulseaudio download some applications images sample: the LibreOffice suite (calc, writer, impress), Firefox, Gimp, and gnome-terminal. You can also download the install.2.x.sh bash script, and read it and then run it.","title":"Quick installation (Linux or macOS)"},{"location":"2.0/setup/kubernetes_abcdesktop/#manually-installation-step-by-step-linux-macos-or-windows","text":"The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server.","title":"Manually installation step by step (Linux, macOS or Windows)"},{"location":"2.0/setup/kubernetes_abcdesktop/#install-abcdesktop","text":"","title":"Install abcdesktop"},{"location":"2.0/setup/kubernetes_abcdesktop/#step-1-create-abcdesktop-namespace","text":"We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands.","title":"Step 1: Create abcdesktop namespace"},{"location":"2.0/setup/kubernetes_abcdesktop/#step-2-securized-abcdesktop","text":"All communications between nginx, pyos and user navigator are encrypted by JSON Web Tokens. The JSON Web Tokens payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JSON Web Tokens payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script and by pyos, export the public key using the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python and lua. The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop","title":"Step 2: Securized abcdesktop"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-secrets","text":"You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s","title":"Verify Secrets"},{"location":"2.0/setup/kubernetes_abcdesktop/#step-3-download-core-images-create-pods-and-services","text":"On a worker node, fetch the three user default images, to make sure that Kubernetes will find the docker images at startup time. docker pull abcdesktopio/oc.user.kubernete.18.04:2.0 docker pull abcdesktopio/oc.cupsd.18.04:2.0 docker pull abcdesktopio/oc.pulseaudio.18.04:2.0 You should read on the standard output oc.user.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.user.18.04:2.0 oc.cupsd.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.cupsd.18.04 oc.pulseaudio.18.04: Pulling from abcdesktopio ...[cut here]... docker.io/abcdesktopio/oc.pulseaudio.18.04 Create the abcdesktop pods and services abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop.2.0.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created persistentvolume/pv-volume-home-directory created persistentvolumeclaim/persistentvolumeclaim-home-directory created configmap/abcdesktop-config created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created","title":"Step 3: Download core images, create Pods, and services"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-pods","text":"Once the pods are created, all pods should be running. For the first time, status maybe long to become running as some container images may be downloaded kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s","title":"Verify Pods"},{"location":"2.0/setup/kubernetes_abcdesktop/#connect-your-local-abcdesktop","text":"Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container docker image oc.user.18.04. Few seconds later, processes are ready to run. You should see the abcdesktop main screen. Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some applications. Read the chapter add kubernetes container","title":"Connect your local abcdesktop"},{"location":"2.0/setup/kubernetes_abcdesktop/#troubleshoot","text":"All resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry.","title":"Troubleshoot"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-daemonsets","text":"kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 16m daemonset-pyos 1 1 1 1 1 <none> 16m","title":"Verify Daemonsets"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-service-ports","text":"kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 17m memcached ClusterIP 10.110.16.25 <none> 11211/TCP 17m mongodb ClusterIP 10.110.49.161 <none> 27017/TCP 17m nginx NodePort 10.102.13.5 <none> 80:30443/TCP 17m openldap ClusterIP 10.108.52.65 <none> 389/TCP 17m pyos ClusterIP 10.111.123.108 <none> 8000/TCP 17m speedtest ClusterIP 10.101.137.100 <none> 80/TCP 17m","title":"Verify service ports"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-cluster-roles","text":"kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/exec [] [] [create get list watch update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] pods/log [] [] [get list watch] nodes [] [] [get watch list]","title":"Verify cluster roles"},{"location":"2.0/setup/kubernetes_abcdesktop/#verify-cluster-role-bindind","text":"kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Name: pyos-rbac Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop","title":"Verify Cluster Role Bindind"},{"location":"2.0/setup/kubernetes_abcdesktop/#view-pyos-logs","text":"Since the abcdesktop pyos code needs to interact with the Docker API in order to CRUD containers, pyos need to mount /var/run/docker.sock into the container kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop Note that you also can view logs using docker command","title":"View pyos logs"},{"location":"2.0/setup/kubernetes_abcdesktop/#rollout-daemonset","text":"To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Rollout daemonset"},{"location":"2.0/setup/kubernetes_abcdesktop_applications/","text":"Setup applications for abcdesktop Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d:2.0 docker pull abcdesktopio/calc.d:2.0 docker pull abcdesktopio/impress.d:2.0 docker pull abcdesktopio/math.d:2.0 docker pull abcdesktopio/writer.d:2.0 Install Mozilla Suite docker pull abcdesktopio/firefox.d:2.0 docker pull abcdesktopio/thunderbird.d:2.0 Install Gnome games docker pull abcdesktopio/mines.d:2.0 docker pull abcdesktopio/tetravex.d:2.0 Install Gnome tools docker pull abcdesktopio/calculator.d:2.0 docker pull abcdesktopio/terminal.d:2.0 Connect to your abcdesktop The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Setup applications for abcdesktop"},{"location":"2.0/setup/kubernetes_abcdesktop_applications/#setup-applications-for-abcdesktop","text":"Each application is a docker container, to install new docker container run the docker pull command : Install LibreOffice Suite docker pull abcdesktopio/base.d:2.0 docker pull abcdesktopio/calc.d:2.0 docker pull abcdesktopio/impress.d:2.0 docker pull abcdesktopio/math.d:2.0 docker pull abcdesktopio/writer.d:2.0 Install Mozilla Suite docker pull abcdesktopio/firefox.d:2.0 docker pull abcdesktopio/thunderbird.d:2.0 Install Gnome games docker pull abcdesktopio/mines.d:2.0 docker pull abcdesktopio/tetravex.d:2.0 Install Gnome tools docker pull abcdesktopio/calculator.d:2.0 docker pull abcdesktopio/terminal.d:2.0","title":"Setup applications for abcdesktop"},{"location":"2.0/setup/kubernetes_abcdesktop_applications/#connect-to-your-abcdesktop","text":"The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Connect to your abcdesktop"},{"location":"2.0/setup/requirements/","text":"Requirements Prerequisites for abcdesktop setup in release 2.x Architecture x86-64 ( arm-64 is not yet available) 16 GB of free space to store sample applications ( gimp , libreoffice writer , libreoffice calc , libreoffice math , libreoffice impress , firefox ) and core image services Release 2.x Kubernetes release must be less than 1.24 You need to install docker on each worker node. There is a depend to dockerd in all releases 2.x. Application runs as docker container or as kubernetes pod . Pyos service use access to the dockerd socket . Supported Architectures Our images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest GNU/Linux The recommended distrubution is Ubuntu 20.04.5 LTS (Focal Fossa)","title":"Requirements"},{"location":"2.0/setup/requirements/#requirements","text":"","title":"Requirements"},{"location":"2.0/setup/requirements/#prerequisites-for-abcdesktop-setup-in-release-2x","text":"Architecture x86-64 ( arm-64 is not yet available) 16 GB of free space to store sample applications ( gimp , libreoffice writer , libreoffice calc , libreoffice math , libreoffice impress , firefox ) and core image services","title":"Prerequisites for abcdesktop setup in release 2.x"},{"location":"2.0/setup/requirements/#release-2x","text":"Kubernetes release must be less than 1.24 You need to install docker on each worker node. There is a depend to dockerd in all releases 2.x. Application runs as docker container or as kubernetes pod . Pyos service use access to the dockerd socket .","title":"Release 2.x"},{"location":"2.0/setup/requirements/#supported-architectures","text":"Our images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest","title":"Supported Architectures"},{"location":"2.0/setup/requirements/#gnulinux","text":"The recommended distrubution is Ubuntu 20.04.5 LTS (Focal Fossa)","title":"GNU/Linux"},{"location":"3.0/features/","text":"abcdesktop release 3.0 The abcdesktop release 3.0 has started in May 2022 Kubernetes release greater or equal to 1.24 No depend to docker, an application runs as pod or as an ephermeral container All container-runtimes are supported. containerd is recommended by default abcdesktop release 3.x is unstable, API endpoints can change. Architecture abcdesktop 3.0 In release 3.0, the abcdesktop control plane uses only Kubernetes API. It doesn't depend to dockerd . User pod Applications Application can run as : kubernetes pod kubernetes ephemeral container Volumes ephemeral container doesn't support subpath . It means that abcdesktop desktop application based on ephemeral container doesn't support subpath. abcdesktop user home directory MUST be mounted as hostPath on each worker node. In the release persistentVolumeClaim is not supported for user home directory, while ephemeral container doesn't support subpath .","title":"Notes and Features"},{"location":"3.0/features/#abcdesktop-release-30","text":"The abcdesktop release 3.0 has started in May 2022 Kubernetes release greater or equal to 1.24 No depend to docker, an application runs as pod or as an ephermeral container All container-runtimes are supported. containerd is recommended by default abcdesktop release 3.x is unstable, API endpoints can change.","title":"abcdesktop release 3.0"},{"location":"3.0/features/#architecture-abcdesktop-30","text":"In release 3.0, the abcdesktop control plane uses only Kubernetes API. It doesn't depend to dockerd .","title":"Architecture abcdesktop 3.0"},{"location":"3.0/features/#user-pod","text":"","title":"User pod"},{"location":"3.0/features/#applications","text":"Application can run as : kubernetes pod kubernetes ephemeral container","title":"Applications"},{"location":"3.0/features/#volumes","text":"ephemeral container doesn't support subpath . It means that abcdesktop desktop application based on ephemeral container doesn't support subpath. abcdesktop user home directory MUST be mounted as hostPath on each worker node. In the release persistentVolumeClaim is not supported for user home directory, while ephemeral container doesn't support subpath .","title":"Volumes"},{"location":"3.0/config/applications/","text":"","title":"Applications"},{"location":"3.0/config/authentification-rules/","text":"Authentification rules configuration All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to ) The rule object A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } The conditions object conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value. Examples: Example (TRUE and TRUE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True Example (TRUE and TRUE) expected FALSE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False Example (TRUE and FALSE) expected TRUE: To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True Example (FALSE and TRUE) expected TRUE: To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True The condition value name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513' condition boolean This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' } condition httpheader This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' } condition network This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' } IPv4 and IPv6 subnets support To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } } condition memberof This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' } condition primarygroupid This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"rules"},{"location":"3.0/config/authentification-rules/#authentification-rules-configuration","text":"All auth providers support rules configuration A rule take some parameters and set label to the auth user. All labels are stored inside the JWT Auth token. The labels are use to define a container execution context. For example to set a dedicated network for firefox application ( read the how-to )","title":"Authentification rules configuration"},{"location":"3.0/config/authentification-rules/#the-rule-object","text":"A rule is a dictionary object with : a name (the entry of the rules) one or more conditions and expected boolean value True or False a label to set if the conditions are equal to the expected boolean value Example : To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' }","title":"The rule object"},{"location":"3.0/config/authentification-rules/#the-conditions-object","text":"conditions is a list of condition. All condition are always tested, as a logical AND . The result must be equal to the expected value.","title":"The conditions object"},{"location":"3.0/config/authentification-rules/#examples","text":"","title":"Examples:"},{"location":"3.0/config/authentification-rules/#example-true-and-true-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnet80' } Add the labels 'shipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and TRUE) expected TRUE:"},{"location":"3.0/config/authentification-rules/#example-true-and-true-expected-false","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : False, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnonet80', if the 'expected' value is False","title":"Example (TRUE and TRUE) expected FALSE:"},{"location":"3.0/config/authentification-rules/#example-true-and-false-expected-true","text":"To test if the user source IP address is in the subnet to 80.0.0.0/8 AND is NOT a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : True }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : False } ], 'expected' : True, 'label': 'noshipcrewandnet80' } Add the labels 'noshipcrewandnet80', if the 'expected' value is True","title":"Example (TRUE and FALSE) expected TRUE:"},{"location":"3.0/config/authentification-rules/#example-false-and-true-expected-true","text":"To test if the user source IP address is NOT in the subnet to 80.0.0.0/8 AND is a memberOf ldap group DN 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' 'rule-sample': { 'conditions': [ { 'network': '80.0.0.0/8', 'expected' : False }, { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewandnonet80' } Add the labels 'shipcrewandnonet80', if the 'expected' value is True","title":"Example (FALSE and TRUE) expected TRUE:"},{"location":"3.0/config/authentification-rules/#the-condition-value","text":"name description example boolean always true or false 'boolean' : 'true' httpheader test a HTTP header value 'httpheader': memberOf test if the LDAP user object is member of group 'memberOf': [ 'cn=ship_crew,ou=people,dc=planetexpress,dc=com'] network test if the client user IP Address is in a network subnet 'network': [ '1.2.3.4/24'] primarygroupid test if the LDAP user object has a attibute primaryGroupID and is equal to value 'primarygroupid': '513'","title":"The condition value"},{"location":"3.0/config/authentification-rules/#condition-boolean","text":"This condition is a dummy condition; Only use to force a label or to disable a test. 'boolean': boolean The commun usage is 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'dummy' } or alway False 'rule-dummy': { 'conditions': [ { 'boolean': True, 'expected' : True } ], 'expected' : False, 'label': 'dummy' }","title":"condition boolean"},{"location":"3.0/config/authentification-rules/#condition-httpheader","text":"This condition is test if a HTTP Header value is equal to a string. 'httpheader': dict example : if the 'User-Agent' is equal to 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' then add the label 'chromemaxosx112' 'rule-httpheader': { 'conditions' : [ { 'httpheader': { 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.146 Safari/537.36' }, 'expected' : True } ], 'expected' : True, 'label': 'chromemaxosx112' }","title":"condition httpheader"},{"location":"3.0/config/authentification-rules/#condition-network","text":"This condition is test if the client source ip address is in a subnet. IPv4 and IPv6 are supported. 'network': string example To test if the user source IP address is equal to 8.8.8.1/32 'rule-home': { 'conditions' : [ { 'network': '8.8.8.1/32', 'expected' : True } ], 'expected' : True, 'label': 'homeipsource' } To test if the user source IP address is in the subnet 10.0.0.0/8 'rule-localnet': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'localnet' } To test if the user source IP address is NOT in the subnet 192.168.0.0/24 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : False } ], 'expected' : True, 'label': 'no192168net' } same as 'rule-localnet': { 'conditions' : [ { 'network': '192.168.0.0/24', 'expected' : True } ], 'expected' : False, 'label': 'no192168net' }","title":"condition network"},{"location":"3.0/config/authentification-rules/#ipv4-and-ipv6-subnets-support","text":"To support private ip addresses subnet in the rfc 1918 and rfc 3927 , write separated rules. Both IPv6 and IPv4 addresses are supported. You can share the same label privatenetwork a separated rule. 'policies': { 'acl' : {}, 'rules' : { 'rule-privatenetwork-10': { 'conditions' : [ { 'network': '10.0.0.0/8', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-172': {'conditions' : [ { 'network': '172.16.0.0/12', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-192': {'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'Rule-privatenetwork-169': {'conditions' : [ { 'network': '169.254.0.0/16', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' }, 'rule-privatenetwork-fe80':{ 'conditions' : [ { 'network': 'fe80::/10', 'expected' : True } ], 'expected' : True, 'label': 'privatenetwork' } } }","title":"IPv4 and IPv6 subnets support"},{"location":"3.0/config/authentification-rules/#condition-memberof","text":"This condition test if the user is a member of a LDAP Distinguished Name. 'memberOf': string 'rule-sample': { 'conditions': [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrewgrp' }","title":"condition memberof"},{"location":"3.0/config/authentification-rules/#condition-primarygroupid","text":"This test is only used with Microsoft Active Directory. primarygroupid test if the user attibute primaryGroupID is equal to a string. 'primarygroupid': string To check is a user is memberof a DOMAIN\\USER the primary group id is 513 'rule-domainuser': { 'conditions': [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label': 'domainuser' } However, if the user needed to be seen as a Domain Admin for POSIX , the PrimaryGroupID is 512 , the RID for that group. 'rule-posixdomainadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'posixdomainadmin' } The Enterprise Admins group , 519 , is also used to grant this level in POSIX. 'rule-enterpriseadmin': { 'conditions': [ { 'primarygroupid': '519', 'expected' : True } ], 'expected' : True, 'label': 'enterpriseadmin' }","title":"condition primarygroupid"},{"location":"3.0/config/authentification/","text":"Authentification Configuration file The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster. The dictionary authmanagers The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines four kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification metaexplicit : use Microsoft Active Directory Trusted relationship, with support of FSP (Foreign Security Principals) implicit : use for Anonymous Authentification and SSL-client certificat Related authmanagers authmanagers type Description external For OAuth 2.0 authentification metaexplicit For Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities explicit For LDAP, LDAPS, Active Directory Authentification, and Kerberos authentification implicit For anonymous authentification, for an always True Authentification, and SSL-client certificat Hands-on Requirements You should have read the hands-on : Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster. Change authmanagers configuration Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file, and restart the pyos daemonset Start your web browser and open the URL http://localhost:30443 The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users. authmanagers implicit : implicit is the easiest configuration mode, and is used to run Anonymous authentification (always True). Read the authmanagers implicit Section. authmanagers explicit : explicit is defined to use a directory service like LDAP. Read the authmanagers explicit Section. authmanagers metaexplicit : metaexplicit offers a support to Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities. Read the authmanagers explicit Section. authmanagers external : external use external OAuth 2.0 authentication, for example Google OAuth 2.0 , or Github OAuth 2.0 Read the authmanagers external Section. authmanagers sample In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionary as described with external , explicit and implicit authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13'], 'kerberos_realm': 'AD.DOMAIN.LOCAL' }}","title":"config"},{"location":"3.0/config/authentification/#authentification","text":"","title":"Authentification"},{"location":"3.0/config/authentification/#configuration-file","text":"The authentification configuration is set in the od.config file. In this chapter you will need to update the od.config configuration file. This update differs depending on the configuration docker mode or kubernetes mode. Read the Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster.","title":"Configuration file"},{"location":"3.0/config/authentification/#the-dictionary-authmanagers","text":"The authmanagers is defined as a dictionnary object : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } The od.config defines four kinds of entries in the authmanagers object : external : use for OAuth 2.0 Authentification explicit : use for LDAP, LDAPS and ActiveDirectory Authentification metaexplicit : use Microsoft Active Directory Trusted relationship, with support of FSP (Foreign Security Principals) implicit : use for Anonymous Authentification and SSL-client certificat","title":"The dictionary authmanagers"},{"location":"3.0/config/authentification/#related-authmanagers","text":"authmanagers type Description external For OAuth 2.0 authentification metaexplicit For Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities explicit For LDAP, LDAPS, Active Directory Authentification, and Kerberos authentification implicit For anonymous authentification, for an always True Authentification, and SSL-client certificat","title":"Related authmanagers"},{"location":"3.0/config/authentification/#hands-on","text":"","title":"Hands-on"},{"location":"3.0/config/authentification/#requirements","text":"You should have read the hands-on : Update your configuration file and apply the new configuration file section to make change in od.config file for kubernetes cluster.","title":"Requirements"},{"location":"3.0/config/authentification/#change-authmanagers-configuration","text":"Edit your od.config pyos configuration file, and set the value to the authmanagers dictionnay with empty values for implicit , explicit , and external , as describe : authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { } } Save your new od.config file, and restart the pyos daemonset Start your web browser and open the URL http://localhost:30443 The Web home page should only show the title abcdesktop.io. There is no authmanagers available. Great you can now add some value to authenticate your users.","title":"Change authmanagers configuration"},{"location":"3.0/config/authentification/#authmanagers-implicit","text":"implicit is the easiest configuration mode, and is used to run Anonymous authentification (always True). Read the authmanagers implicit Section.","title":"authmanagers implicit:"},{"location":"3.0/config/authentification/#authmanagers-explicit","text":"explicit is defined to use a directory service like LDAP. Read the authmanagers explicit Section.","title":"authmanagers explicit:"},{"location":"3.0/config/authentification/#authmanagers-metaexplicit","text":"metaexplicit offers a support to Microsoft Active Directory Trusted relationship, with support of Foreign Security Principals and Special Identities. Read the authmanagers explicit Section.","title":"authmanagers metaexplicit:"},{"location":"3.0/config/authentification/#authmanagers-external","text":"external use external OAuth 2.0 authentication, for example Google OAuth 2.0 , or Github OAuth 2.0 Read the authmanagers external Section.","title":"authmanagers external:"},{"location":"3.0/config/authentification/#authmanagers-sample","text":"In the authmanagers implicit section, authmanagers explicit section, and authmanagers external section, you have learned how to defined the providers. You can set a complete authmanagers dictionary as described with external , explicit and implicit authmanagers: { 'external': { 'providers': { 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'client_id': 'XXXXXXX', 'client_secret': 'YYYYYYY', 'dialog_url': 'https://www.facebook.com/dialog/oauth?client_id={client_id}&redirect_uri={callback_url}&response_type=code', 'auth_url': 'https://graph.facebook.com/v2.3/oauth/access_token?code={code}&redirect_uri={callback_url}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?access_token={access_token}&fields=picture.width(400),name', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } }, 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'client_id': 'AAAAAAAA', 'client_secret': 'BBBBBBBB', 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile+offline_access&response_type=code&prompt=login+consent&state={callba ck_url}', 'auth_url': 'https://api.orange.com/openidconnect/fr/v1/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/openidconnect/v1/userinfo', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'mobileorange': { 'displayname': 'Mobile Connect', 'enabled': False, 'client_id': 'CCCCCCCC', 'client_secret': 'DDDDDDDD', 'basic_auth': True, 'dialog_url': 'https://api.orange.com/oauth/v2/authorize?client_id={client_id}&redirect_uri={callback_url}&scope=openid+profile&response_type=code&prompt=login+consent&state=&state={callback_url}' , 'auth_url': 'https://api.orange.com/oauth/v2/token?code={code}&redirect_uri={callback_url}&grant_type=authorization_code', 'userinfo_url': 'https://api.orange.com/oauth/v2/authorize', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' }, 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'EEEEEEEE.apps.googleusercontent.com', 'client_secret': 'FFFFFFFF', 'scope': 'https://www.googleapis.com/auth/userinfo.email', 'dialog_url': 'https://accounts.google.com/o/oauth2/v2/auth?client_id={client_id}&redirect_uri={callback_url}&response_type=code&scope={scope}', 'auth_url': 'https://oauth2.googleapis.com/token?code={code}&grant_type=authorization_code&redirect_uri={callback_url}&scope={scope}&client_id={client_id}&client_secret={client_secret}', 'userinfo_url': 'https://openidconnect.googleapis.com/v1/userinfo?access_token={access_token}', 'callback_url': 'https://host.domain.com/API/auth/oauth?manager={manager.name}&provider={name}' } } }, 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } }} adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.1.12', 'ldaps://192.168.1.13'], 'kerberos_realm': 'AD.DOMAIN.LOCAL' }}","title":"authmanagers sample"},{"location":"3.0/config/authexplicit-activedirectory/","text":"Authentification explicit for Microsoft Active Directory services authmanagers explicit object The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL Service Account The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com) Site This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location'] Printers This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Active Directory"},{"location":"3.0/config/authexplicit-activedirectory/#authentification-explicit-for-microsoft-active-directory-services","text":"","title":"Authentification explicit for Microsoft Active Directory services"},{"location":"3.0/config/authexplicit-activedirectory/#authmanagers-explicit-object","text":"The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string Default domain name prefix if the user format does not containthe domain prefix like DOMAIN\\USER. If the user login value is USER, the login is prefixed with the default_domain\\USER providers dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"3.0/config/authexplicit-activedirectory/#providers-configuration","text":"The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set as the USERDOMAIN and defined in the config_ref with the exact same value. Providers : The provider is formated as a dictionnary { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The adconfig is a dictionnary. For example : adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } If this example, the Microsoft Active Directory value are set to : Variable name Value for example USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Type Description Example default boolean Use this domain as default domain True ldap_basedn string LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn string _ldap._tcp.Domain_Name _ldap._tcp.ad.domain.local domain_fqdn string domain FQDN (also know as Domain_Name) AD.DOMAIN.LOCAL servers list of string list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm string Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL The explicit authentification is support LDAP and LDAPS bind. The Microsoft Active Directory value are set to : Variable name Value USERDOMAIN AD USERDNSDOMAIN AD.DOMAIN.LOCAL For Active Directory authmanagers, replace the variable name with your own value. Variable name Description Example ldap_basedn Replace ldap_basedn with your LDAP Base Distinguished Names DC=ad,DC=domain,DC=local ldap_fqdn Replace ldap_fqdn with the _ldap._tcp fqdn _ldap._tcp.ad.domain.local domain_fqdn Replace domain_fqdn with domain FQDN value AD.DOMAIN.LOCAL servers Replace servers with list of the Active Director servers [ '192.168.1.12', '192.168.1.13' ] kerberos_realm Replace kerberos_realm wih your kerberos realm (in UPPER CASE) AD.DOMAIN.LOCAL","title":"providers configuration"},{"location":"3.0/config/authexplicit-activedirectory/#service-account","text":"The service account is use when od.py starts. It runs query to the Active Directory service to read the subnet and location from the sites in 'CN=Subnets,CN=Sites,CN=Configuration,' + BASE_DN , (for example CN=Subnets,CN=Sites,CN=Configuration,DC=example,DC=com)","title":"Service Account"},{"location":"3.0/config/authexplicit-activedirectory/#site","text":"This features is only available if a service account is defined. Site is used to locate a user from his ip adress. The attributs location and subnet are cached in memory. Variable name Type Defautl value site_subnetdn string CN=Subnets,CN=Sites,CN=Configuration, + config.get('basedn') ) site_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=subnet) site_attrs list ['cn', 'siteObject', 'location']","title":"Site"},{"location":"3.0/config/authexplicit-activedirectory/#printers","text":"This features is only available if a service account is defined. Printers are used to list printer available in the current user's site. The site is identified using the user's ip address. location is the join key to match local printer for the user. Variable name Type Defautl value printer_printerdn string OU=Applications + config.get('basedn') printer_scope ldap python ldap.SCOPE_SUBTREE read Python ldap reference for more details site_filter string (objectClass=printQueue) site_attrs list [ 'cn', 'uNCName', 'location', 'driverName', 'driverVersion', 'name', 'portName', 'printColor', 'printerName', 'printLanguage', 'printSharename', 'serverName', 'shortServerName', 'url', 'printMediaReady', 'printBinNames', 'printMediaSupported', 'printOrientationsSupported' ] Great, you have check how the explicit Authentification configuration works.","title":"Printers"},{"location":"3.0/config/authexplicit-ldap/","text":"Authentification explicit for LDAP Directory Services authmanagers explicit object explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string not used by ldap, only used by Active Directory providers dictionnary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }} providers configuration The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set with the same value in providers configuration and config_ref . Providers : The provider is formated as a dictionnary { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The ldapconfig is a dictionnary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.8.195' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} } ldap configuration reference Variable name Type Description Example default boolean Use this domain as default domain True ldap_protocol string protocol type. ldap or ldaps for LDAP directory services ldap tls_require_cert boolean The default value is False. tls_require_cert apply only if ldap_protocol is set to ldaps . Allow LDAPS connection if the ldaps server hostname does not match CommonName peer certificate. In production, set this value to True This will disable the ldap option call : ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER) False basedn string LDAP Base Distinguished Names ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. [ '192.168.1.12', '192.168.1.13' ] IP Address or FQDN values scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos auth credentials. the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) Hands-on : Configure Auth using an OpenLDAP for Docker Requirements You should have all read and done the hands-on : Setup abcdesktop.io in docker mode Edit your configuration file in docker mode OpenLDAP Docker Image for testing To configure abcdesktop.io to use an explicit authentification, we need a directory service. We use an OpenLDAP Docker Image for testing with provioned values. Read the OpenLDAP Docker Image for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing Update the docker-compose.yml file Update the docker-compose.yml file to add an ldap as directory server The specific openldap section is describe as a service. The new complete docker-compose.yml file is now : version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /Users/alexandredevely/src/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback openldap: image: abcdesktopio/oc.openldap networks: - netback networks: netuser: driver: bridge netback: internal: true Update the od.config configuration file Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionnary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} Note: the server name is the name of the service entry Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to make sure that the od.py the your new od.config file. docker-compose restart Open the URL: http://localhost The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. The LDAP structure of OpenLDAP Docker Image for testing BaseDN The basedn is dc=planetexpress,dc=com admin account The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone OU Users The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com Users cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes cn=Turanga Leela,ou=people,dc=planetexpress,dc=com Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela Groups cn=admin_staff,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com cn=ship_crew,ou=people,dc=planetexpress,dc=com Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com Insert the user credentials Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela : Applications remainted Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"LDAP"},{"location":"3.0/config/authexplicit-ldap/#authentification-explicit-for-ldap-directory-services","text":"","title":"Authentification explicit for LDAP Directory Services"},{"location":"3.0/config/authexplicit-ldap/#authmanagers-explicit-object","text":"explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. For example : 'explicit': { 'show_domains': True, 'providers': { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True } } In this example, ldapconfig dict must have a key LDAP Variable name Type Description show_domains boolean Permit the domain name to be listed in API getclientdata, the default value is False default_domain string not used by ldap, only used by Active Directory providers dictionnary { 'LDAP': { 'config_ref': 'ldapconfig', 'enabled': True }}","title":"authmanagers explicit object"},{"location":"3.0/config/authexplicit-ldap/#providers-configuration","text":"The provider authentification configuration is defined as a dictionnary object and must contain a key name. The key name must be set with the same value in providers configuration and config_ref . Providers : The provider is formated as a dictionnary { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } Variable name Type Description config_ref string For increased legibility, the USERDOMAIN configuration is defined in a dedicated dictionnary used the key:value 'config_ref': 'adconfig' , where key is config_ref and value is the dictionnay variable name. enable boolean enable or disable the domain entry The ldapconfig is a dictionnary. For example : ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.8.195' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} }","title":"providers configuration"},{"location":"3.0/config/authexplicit-ldap/#ldap-configuration-reference","text":"Variable name Type Description Example default boolean Use this domain as default domain True ldap_protocol string protocol type. ldap or ldaps for LDAP directory services ldap tls_require_cert boolean The default value is False. tls_require_cert apply only if ldap_protocol is set to ldaps . Allow LDAPS connection if the ldaps server hostname does not match CommonName peer certificate. In production, set this value to True This will disable the ldap option call : ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER) False basedn string LDAP Base Distinguished Names ou=people,dc=planetexpress,dc=com servers list of string list of LDAP servers (IP Adress or FQDN), if entry does not respond, the next one is used. [ '192.168.1.12', '192.168.1.13' ] IP Address or FQDN values scope LDAP Perform an LDAP search operation, with base as the DN of the entry at which to start the search, scope being one of SCOPE_BASE (to search the object itself), SCOPE_ONELEVEL (to search the object\u2019s immediate children), or SCOPE_SUBTREE (to search the object and all its descendants). ldap.SCOPE_SUBTREE timeout integer ldap time out in second 10 exec_timeout integer execute time out in seconds, to obtain ntlm_auth credentials, or cntlm auth credentials, or kerberos auth credentials. the exec timeout is used to run external command line. 10 users_ou string Users Organisation Unit ou=people,dc=planetexpress,dc=com attrs list list of default attributs to read in user object. read the Definition of the inetOrgPerson LDAP Object Class filter string LDAP filter to find user object (&(objectClass=inetOrgPerson)(cn=%s)) group_filter string LDAP filter to find group object (&(objectClass=Group)(cn=%s)) group_attrs string LDAP filter to find group object (&(objectClass=Group)(cn=%s))","title":"ldap configuration reference"},{"location":"3.0/config/authexplicit-ldap/#hands-on-configure-auth-using-an-openldap-for-docker","text":"","title":"Hands-on : Configure Auth using  an OpenLDAP for Docker"},{"location":"3.0/config/authexplicit-ldap/#requirements","text":"You should have all read and done the hands-on : Setup abcdesktop.io in docker mode Edit your configuration file in docker mode","title":"Requirements"},{"location":"3.0/config/authexplicit-ldap/#openldap-docker-image-for-testing","text":"To configure abcdesktop.io to use an explicit authentification, we need a directory service. We use an OpenLDAP Docker Image for testing with provioned values. Read the OpenLDAP Docker Image for testing documentation on the url abcdesktop OpenLDAP Docker Image for testing","title":"OpenLDAP Docker Image for testing"},{"location":"3.0/config/authexplicit-ldap/#update-the-docker-composeyml-file","text":"Update the docker-compose.yml file to add an ldap as directory server The specific openldap section is describe as a service. The new complete docker-compose.yml file is now : version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock - /Users/alexandredevely/src/abcdesktop/od.config:/var/pyos/od.config speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'abcdesktopio/oc.nginx' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback openldap: image: abcdesktopio/oc.openldap networks: - netback networks: netuser: driver: bridge netback: internal: true","title":"Update the docker-compose.yml file"},{"location":"3.0/config/authexplicit-ldap/#update-the-odconfig-configuration-file","text":"Update the od.config configuration file. Add the explicit entry to the dictionary authmanagers . authmanagers: { 'external': { }, 'explicit': { 'show_domains': True, 'providers': { 'planet': { 'config_ref': 'ldapconfig', 'enabled': True } } }, 'implicit': { }} Note: the config_ref is ldapconfig . Add a new dictionnary object named ldapconfig to the configuration file. These values come from the LDAP structure of OpenLDAP Docker Image for testing ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' } }} Note: the server name is the name of the service entry Save your new od.config file. The config file od.config has changed and od.py running inside the container should restart. If it doesn't, restart your docker-compose to make sure that the od.py the your new od.config file. docker-compose restart Open the URL: http://localhost The authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Update the od.config configuration file"},{"location":"3.0/config/authexplicit-ldap/#the-ldap-structure-of-openldap-docker-image-for-testing","text":"","title":"The LDAP structure of OpenLDAP Docker Image for testing"},{"location":"3.0/config/authexplicit-ldap/#basedn","text":"The basedn is dc=planetexpress,dc=com","title":"BaseDN"},{"location":"3.0/config/authexplicit-ldap/#admin-account","text":"The admin account is described as Admin Secret cn=admin,dc=planetexpress,dc=com GoodNewsEveryone","title":"admin account"},{"location":"3.0/config/authexplicit-ldap/#ou-users","text":"The User Orgnanistation Unit is ou=people,dc=planetexpress,dc=com","title":"OU Users"},{"location":"3.0/config/authexplicit-ldap/#users","text":"","title":"Users"},{"location":"3.0/config/authexplicit-ldap/#cnhubert-j-farnsworthoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hubert J. Farnsworth sn Farnsworth description Human displayName Professor Farnsworth employeeType Owner employeeType Founder givenName Hubert jpegPhoto JPEG-Photo (630x507 Pixel, 26780 Bytes) mail professor@planetexpress.com mail hubert@planetexpress.com ou Office Management title Professor uid professor userPassword professor","title":"cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#cnphilip-j-fryoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Philip J. Fry sn Fry description Human displayName Fry employeeType Delivery boy givenName Philip jpegPhoto JPEG-Photo (429x350 Pixel, 22132 Bytes) mail fry@planetexpress.com ou Delivering Crew uid fry userPassword fry","title":"cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#cnjohn-a-zoidbergoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn John A. Zoidberg sn Zoidberg description Decapodian displayName Zoidberg employeeType Doctor givenName John jpegPhoto JPEG-Photo (343x280 Pixel, 26438 Bytes) mail zoidberg@planetexpress.com ou Staff title Ph. D. uid zoidberg userPassword zoidberg","title":"cn=John A. Zoidberg,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#cnhermes-conradoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Hermes Conrad sn Conrad description Human employeeType Bureaucrat employeeType Accountant givenName Hermes mail hermes@planetexpress.com ou Office Management uid hermes userPassword hermes","title":"cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#cnturanga-leelaoupeopledcplanetexpressdccom","text":"Attribute Value objectClass inetOrgPerson cn Turanga Leela sn Turanga description Mutant employeeType Captain employeeType Pilot givenName Leela jpegPhoto JPEG-Photo (429x350 Pixel, 26526 Bytes) mail leela@planetexpress.com ou Delivering Crew uid leela userPassword leela","title":"cn=Turanga Leela,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#groups","text":"","title":"Groups"},{"location":"3.0/config/authexplicit-ldap/#cnadmin_staffoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn admin_staff member cn=Hubert J. Farnsworth,ou=people,dc=planetexpress,dc=com member cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com","title":"cn=admin_staff,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#cnship_crewoupeopledcplanetexpressdccom","text":"Attribute Value objectClass Group cn ship_crew member cn=Turanga Leela,ou=people,dc=planetexpress,dc=com member cn=Philip J. Fry,ou=people,dc=planetexpress,dc=com member cn=Bender Bending Rodr\u00edguez,ou=people,dc=planetexpress,dc=com","title":"cn=ship_crew,ou=people,dc=planetexpress,dc=com"},{"location":"3.0/config/authexplicit-ldap/#insert-the-user-credentials","text":"Start your web browser and open the URL http://localhost The Web home page contains the new input values Login and Password to authenticate this user. You can use for example on user of the list above. Credentials Value Login Turanga Leela Password leela Insert the login credentials : Turanga Leela as login and leela as password, then click on the Sign in button. Look at the top of the sreen. The user name is Turanga Leela :","title":"Insert the user credentials"},{"location":"3.0/config/authexplicit-ldap/#applications-remainted","text":"Start LibreOffice Writer, and start a new file for your instructor. Type few words for example : I like this amazing project abcdesktop.io Do not save your file and just close your web browser. Start your web browser again, and open the same URL http://localhost , and log in with the same account: Turanga Leela as login and leela as password, then click on the Sign in button. The application LibreOffice Writer is still running and the greeting message I like this amazing project abcdesktop.io All applications are maintained. Great, you have check how the explicit Authentification configuration works, install an openldap directory service, and check that all sessions are maintained.","title":"Applications remainted"},{"location":"3.0/config/authexplicit/","text":"Authentification explicit authmanagers explicit : explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. The explicit authentification support the directory services ldap , ldaps , and Microsoft Active Directory . Configuration sample for Microsoft Active Directory For example : 'explicit': { 'show_domains': True, 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } } Home page authentification If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user. LDAP authmanagers : Read the specific chapter on LDAP LDAP and LDAPS explicit authmanagers Microsoft Active Directory authmanagers : Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Directory services"},{"location":"3.0/config/authexplicit/#authentification-explicit","text":"","title":"Authentification explicit"},{"location":"3.0/config/authexplicit/#authmanagers-explicit","text":"explicit authentification use a directory service. The bind operation is used to authenticate clients to the directory server, to establish an authorization identity that will be used for subsequent operations processed on that connection. The explicit authentification configuration is defined as a dictionnary object and contains an explicit provider. The explicit authentification support the directory services ldap , ldaps , and Microsoft Active Directory . Configuration sample for Microsoft Active Directory For example : 'explicit': { 'show_domains': True, 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn': 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'query_dcs' : True, 'wins_servers' : [ '192.168.1.12' ], 'serviceaccount': { 'login': 'SVCACCOUNT', 'password': 'SVCACCOUNTPASSWORD' } } }","title":"authmanagers explicit:"},{"location":"3.0/config/authexplicit/#home-page-authentification","text":"If the authmanagers explicit is enabled. The Web home page insert the new input values Login and Password to authenticate this user.","title":"Home page authentification"},{"location":"3.0/config/authexplicit/#ldap-authmanagers","text":"Read the specific chapter on LDAP LDAP and LDAPS explicit authmanagers","title":"LDAP authmanagers :"},{"location":"3.0/config/authexplicit/#microsoft-active-directory-authmanagers","text":"Microsoft Active Directory is implemented as a LDAP Server, start reading the chapter on LDAP LDAP and LDAPS explicit authmanagers , then read the specific chapter for Microsoft Active Director Microsoft Active Directory explicit authmanagers Great, you have check how the explicit Authentification configuration works.","title":"Microsoft Active Directory authmanagers :"},{"location":"3.0/config/authexternal/","text":"Authentification external Requirements To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https. Library abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients. authmanagers external : external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring . Orange OAuth 2.0 Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation. Orange Application Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', } Facebook OAuth 2.0 Facebook's OAuth is supported for authentication. Facebook Application Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' } Google OAuth 2.0 Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret. Google Application Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"external"},{"location":"3.0/config/authexternal/#authentification-external","text":"","title":"Authentification external"},{"location":"3.0/config/authexternal/#requirements","text":"To use external Authentification OAuth 1.0 and or OAuth 2.0, you need an internet FQDN and a secured web site with https.","title":"Requirements"},{"location":"3.0/config/authexternal/#library","text":"abcdesktop uses requests_oauthlib python module. Requests-OAuthlib uses the Python Requests and OAuthlib libraries for building OAuth1 and OAuth2 clients.","title":"Library"},{"location":"3.0/config/authexternal/#authmanagers-external","text":"external authentification use OAuth 2.0 authenticaton. The external authentification configuration is defined as a dictionary object and contains a list of external provider. Sample providers entry using the Google OAuth 2.0 authentification service. 'external': { 'providers': { 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } } The variable values client_id and client_secret have been set to obfuscate value 'XXX'. The FQDN is refered to the public server FQDN. Variable name Type Description Sample displayname string Display Name show in Web front Google enabled boolean LDAP Base Distinguished Names True client_id string client id XXX-YYY.apps.googleusercontent.com client_secret string client secret XXX scope list of string scope [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ] userinfo_url string dialog URL `https://www.googleapis.com/oauth2/v1/userinfo' redirect_uri_prefix string redirect URL https://hostname.domain.local/API/auth/oauth redirect_uri_querystring string URL query string manager=external&provider=google authorization_base_url string callback URL https://accounts.google.com/o/oauth2/v2/auth token_url string token URL https://oauth2.googleapis.com/token The complete redirect url concats the two values redirect_uri_prefix and redirect_uri_querystring .","title":"authmanagers external:"},{"location":"3.0/config/authexternal/#orange-oauth-20","text":"Orange's OAuth is supported for authentication. This API is based on OpenID Connect, which combines end-user authentication with OAuth2 authorisation.","title":"Orange OAuth 2.0"},{"location":"3.0/config/authexternal/#orange-application","text":"Create your Orange Application here https://developer.orange.com/apis and set credentials for Orange Authentification API in the section 'orange': { 'displayname': 'Orange', 'enabled': True, 'basic_auth': True, 'userinfo_auth': True, 'scope' : [ 'openid', 'form_filling' ], 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=orange', 'authorization_base_url': 'https://api.orange.com/openidconnect/fr/v1/authorize', 'token_url': 'https://api.orange.com/openidconnect/fr/v1/token', 'userinfo_url': 'https://api.orange.com/formfilling/fr/v1/userinfo', }","title":"Orange Application"},{"location":"3.0/config/authexternal/#facebook-oauth-20","text":"Facebook's OAuth is supported for authentication.","title":"Facebook OAuth 2.0"},{"location":"3.0/config/authexternal/#facebook-application","text":"Create your Facebook Application credentials here : https://developers.facebook.com/apps/ and set the credentials for Facebook Authentification API 'facebook': { 'displayname': 'Facebook', 'enabled': True, 'userinfo_auth': True, 'client_id': 'XXX', 'client_secret': 'YYY', 'redirect_uri_prefix' : 'https://hostname.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=facebook', 'authorization_base_url': 'https://www.facebook.com/dialog/oauth', 'userinfo_url': 'https://graph.facebook.com/v2.6/me?fields=picture.width(400),name', 'token_url': 'https://graph.facebook.com/v2.3/oauth/access_token', 'userinfomap': { '*': '*', 'picture': 'picture.data.url' }","title":"Facebook Application"},{"location":"3.0/config/authexternal/#google-oauth-20","text":"Google's OAuth is supported for authentication. The client_id is the google's OAuth client ID, and the client_secret is the OAuth client secret.","title":"Google OAuth 2.0"},{"location":"3.0/config/authexternal/#google-application","text":"Create your Google credentials here : https://console.developers.google.com/apis/ and set the correct credentials for Google Authentification API in the section [gauth] 'google': { 'displayname': 'Google', 'enabled': True, 'client_id': 'XXX-YYY.apps.googleusercontent.com', 'client_secret': 'XXX', 'userinfo_auth': True, 'scope': [ 'https://www.googleapis.com/auth/userinfo.email', 'openid' ], 'userinfo_url': 'https://www.googleapis.com/oauth2/v1/userinfo', 'redirect_uri_prefix' : 'https://host.domain.local/API/auth/oauth', 'redirect_uri_querystring': 'manager=external&provider=google', 'authorization_base_url': 'https://accounts.google.com/o/oauth2/v2/auth', 'token_url': 'https://oauth2.googleapis.com/token' } Great, you have check how the implicit Authentification configuration works.","title":"Google Application"},{"location":"3.0/config/authimplicit/","text":"Authentification implicit authmanagers implicit : implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionnary object and contains an anononymous provider. anononymous provider always permit authentification, and create a uuid as userid. anononymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anononymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionnary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Press the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command docker ps -a docker ps -a Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When the anonymous container is removed, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"implicit"},{"location":"3.0/config/authimplicit/#authentification-implicit","text":"","title":"Authentification implicit"},{"location":"3.0/config/authimplicit/#authmanagers-implicit","text":"implicit is the easyest configuration mode, and is used as 'Anonymous' authentification. The provider is defined as a dictionnary object and contains an anononymous provider. anononymous provider always permit authentification, and create a uuid as userid. anononymous provider is used to skip the authentification process in a demonstration mode. 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous' } } anononymous provider always permit authentification, and create a uuid as userid. Set in your configuration file the authmanagers dictionnary as described authmanagers: { 'external': { }, 'explicit': { }, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Anonymous', 'userid': 'anonymous', 'username': 'Anonymous' } } } Update your configuration file and apply the new configuration file Open a new Web Browser and go to your abcdesktop URL. You should see the login HTML page with the Anonymous button : Press the Sign-In Anonymously button. Then, choose the settings in the menu at the upper right corner Choose the System in the settings control panel. Then choose User containers This screen show you the hostname . You can read the hostname. In the example the hostname is f097ab7aac57 , from the container id. Using a shell, run the command docker ps -a docker ps -a Find a running container with the containerid previously identified. In this example the containerid is f097ab7aac57 f097ab7aac57 abcdesktopio/oc.user.18.04 \"/composer/docker-en\u2026\" 8 minutes ago Up 8 minutes 4714/tcp, 6081/tcp, 29780-29781/tcp, 29783-29784/tcp, 29786/tcp, 55556-55557/tcp g-06b686a5-c98d-4889-b73d-3455f692e6c2 Run the command docker inspect CONTAINERID , replace the string CONTAINERID with your container id value. For example docker inspect f097ab7aac57 docker inspect f097ab7aac57 Locate the Mounts description. User's containers created with an implicit provider anonymous have only one volume type. Anonymous home directory DO NOT USE persistant volume data. Explicit and \"Mounts\": [ { \"Type\": \"volume\", \"Name\": \"tmp-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/tmp-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/tmp\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" }, { \"Type\": \"volume\", \"Name\": \"home-06b686a5-c98d-4889-b73d-3455f692e6c2\", \"Source\": \"/var/lib/docker/volumes/home-06b686a5-c98d-4889-b73d-3455f692e6c2/_data\", \"Destination\": \"/home/balloon\", \"Driver\": \"local\", \"Mode\": \"z\", \"RW\": true, \"Propagation\": \"\" } ], When the anonymous container is removed, the anonymous home directory is deleted . Great, you have check how the implicit Authentification configuration works.","title":"authmanagers implicit:"},{"location":"3.0/config/authmetaexplicit/","text":"Authentification metaexplicit for Microsoft Active Directory services with trust relationships authmanagers metaexplicit object The metaexplicit authentification manager contains only one provider. The provider must be defined as metadirectory . 'metaexplicit': { 'providers': { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } Variable name Type Description providers dictionary { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True }} metadirectory provider configuration The metadirectory provider is defined as a dictionnary object and must contain key name. The key name must be set as the name of a dictionaryin the config_ref . A metadirectory provider must contain a ldap attribut to describe the original DOMAIN and sAMaccountName. The ldap attribut is defined as join_key_ldapattribut . coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } Pyos binds the metadirectory ldap server with serviceaccount credentials Pyos read the ldap attribut description value to get the user's trusted domain. For example : description: AD\\john Then pyos look for provider AD configuration and process authentification on domain AD The metadirectory accounts can be disabled. The ldap attribut userAccountControl is not read on metaDirectory provider. The account can have the bit UF_ACCOUNT_DISABLE set or not. A service account must defined for a metadirectory provider. The service account is used to bind the metadirectory. Complete example with a metadirectory provider and active directory user domain The user's domain mane is AD. The meta domain name is CORPORATE. The meta domain use a dedicated attribut join_key_ldapattribut authmanagers: { # # define the meta explicit manager # This is the trusted external forest for the followed domain # 'metaexplicit': { 'providers': { # define the metadirectory provider # only one metadirectory provider is supported 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } }, # # define the Active Directory provider for each DOMAIN # define two domains in two disctinct forest with a trust relationship # 'explicit': { # define an Active Directory provider AD 'AD': { 'config_ref': 'adconfig', 'enabled': True }, # define an Active Directory provider ANOTHER 'ANOTHER': { 'config_ref': 'anotherconfig', 'enabled': True } } } # end of authmanagers # In this example ldap attribut's description contains AD\\myuser or ANOTHER\\myuser coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } # # define the first DOMAIN AD # The adconfig ref for domain AD # adconfig : { 'AD': { 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ] } } # # define the second DOMAIN ANOTHER # The anotherconfig ref for domain ANOTHER # anotherconfig : { 'ANOTHER': { 'ldap_basedn' : 'DC=another,DC=super,DC=local', 'ldap_fqdn' : '_ldap._tcp.another.super.local', 'domain' : 'ANOTHER', 'auth_type' : 'KERBEROS', 'domain_fqdn' : 'ANOTHER.SUPER.LOCAL', 'servers' : [ 'ldap://192.168.10.12' ], 'kerberos_realm': 'AD.SUPER.LOCAL' } } metadirectory support metadirectory support the foreign security principal (FSP) to query security principal in the trusted external forest. These objects are created in the foreign security principals container of the domain. metadirectory support isMemberOf on foreign security principal. The user's SID of domain 'AD' or 'ANOTHER' is NOT read. A new ldap bind is done using the trusted domain on metadirectory provider and not unsing the service account. The ldap query is build : ( \"search_base={q.basedn}, search_scope={q.scope}, search_filter={filter}\" ) To get more information about foreign security principal (FSP), read : Foreign Security Principals Container Active Directory: Foreign Security Principals and Special Identities","title":"Authentification `metaexplicit` for Microsoft Active Directory services with trust relationships"},{"location":"3.0/config/authmetaexplicit/#authentification-metaexplicit-for-microsoft-active-directory-services-with-trust-relationships","text":"","title":"Authentification metaexplicit for Microsoft Active Directory services with trust relationships"},{"location":"3.0/config/authmetaexplicit/#authmanagers-metaexplicit-object","text":"The metaexplicit authentification manager contains only one provider. The provider must be defined as metadirectory . 'metaexplicit': { 'providers': { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } Variable name Type Description providers dictionary { 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True }}","title":"authmanagers metaexplicit object"},{"location":"3.0/config/authmetaexplicit/#metadirectory-provider-configuration","text":"The metadirectory provider is defined as a dictionnary object and must contain key name. The key name must be set as the name of a dictionaryin the config_ref . A metadirectory provider must contain a ldap attribut to describe the original DOMAIN and sAMaccountName. The ldap attribut is defined as join_key_ldapattribut . coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } Pyos binds the metadirectory ldap server with serviceaccount credentials Pyos read the ldap attribut description value to get the user's trusted domain. For example : description: AD\\john Then pyos look for provider AD configuration and process authentification on domain AD The metadirectory accounts can be disabled. The ldap attribut userAccountControl is not read on metaDirectory provider. The account can have the bit UF_ACCOUNT_DISABLE set or not. A service account must defined for a metadirectory provider. The service account is used to bind the metadirectory.","title":"metadirectory provider configuration"},{"location":"3.0/config/authmetaexplicit/#complete-example-with-a-metadirectory-provider-and-active-directory-user-domain","text":"The user's domain mane is AD. The meta domain name is CORPORATE. The meta domain use a dedicated attribut join_key_ldapattribut authmanagers: { # # define the meta explicit manager # This is the trusted external forest for the followed domain # 'metaexplicit': { 'providers': { # define the metadirectory provider # only one metadirectory provider is supported 'metadirectory': { 'config_ref': 'coporateconfig', 'enabled': True } } }, # # define the Active Directory provider for each DOMAIN # define two domains in two disctinct forest with a trust relationship # 'explicit': { # define an Active Directory provider AD 'AD': { 'config_ref': 'adconfig', 'enabled': True }, # define an Active Directory provider ANOTHER 'ANOTHER': { 'config_ref': 'anotherconfig', 'enabled': True } } } # end of authmanagers # In this example ldap attribut's description contains AD\\myuser or ANOTHER\\myuser coporateconfig : { 'metadirectory': { 'domain' : 'CORPORATE', 'ldap_basedn' : 'DC=foo,DC=corporate,DC=local', 'ldap_fqdn' : '_ldap._tcp.foo.corporate.local', 'servers' : [ 'ldap://192.168.9.11', 'ldap://192.168.7.12', 'ldap://192.168.7.13' ], # join_key_ldapattribut must be defined for a metadirectory provider 'join_key_ldapattribut' : 'description', 'auth_type' : 'KERBEROS', 'domain_fqdn': 'foo.corporate.local', 'kerberos_realm': 'FOO.CORPORATE.LOCAL', # serviceaccount must be defined for a metadirectory provider 'serviceaccount': { 'login': 'svcaccount', 'password':'superpass' } } } # # define the first DOMAIN AD # The adconfig ref for domain AD # adconfig : { 'AD': { 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'auth_type' : 'NTLM', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ 'ldap://192.168.7.12' ] } } # # define the second DOMAIN ANOTHER # The anotherconfig ref for domain ANOTHER # anotherconfig : { 'ANOTHER': { 'ldap_basedn' : 'DC=another,DC=super,DC=local', 'ldap_fqdn' : '_ldap._tcp.another.super.local', 'domain' : 'ANOTHER', 'auth_type' : 'KERBEROS', 'domain_fqdn' : 'ANOTHER.SUPER.LOCAL', 'servers' : [ 'ldap://192.168.10.12' ], 'kerberos_realm': 'AD.SUPER.LOCAL' } }","title":"Complete example with a metadirectory provider and active directory user domain"},{"location":"3.0/config/authmetaexplicit/#metadirectorysupport","text":"metadirectory support the foreign security principal (FSP) to query security principal in the trusted external forest. These objects are created in the foreign security principals container of the domain. metadirectory support isMemberOf on foreign security principal. The user's SID of domain 'AD' or 'ANOTHER' is NOT read. A new ldap bind is done using the trusted domain on metadirectory provider and not unsing the service account. The ldap query is build : ( \"search_base={q.basedn}, search_scope={q.scope}, search_filter={filter}\" ) To get more information about foreign security principal (FSP), read : Foreign Security Principals Container Active Directory: Foreign Security Principals and Special Identities","title":"metadirectorysupport"},{"location":"3.0/config/balloon/","text":"balloon user entry in od.config balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"3.0/config/balloon/#balloon-user-entry-in-odconfig","text":"balloon is the default generic user. The balloon user is created inside the oc.user container The default values are balloon Default Values name balloon uid 4096 gid 4096 homedirectory /home/balloon If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"balloon user entry in od.config"},{"location":"3.0/config/controllers/","text":"Controllers Controllers abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information Access Permission The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Overview"},{"location":"3.0/config/controllers/#controllers","text":"","title":"Controllers"},{"location":"3.0/config/controllers/#controllers_1","text":"abcdesktop.io use a Model\u2013view\u2013controller (usually known as MVC) is a software design pattern commonly used for developing user interfaces which divides the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user. Controller Description AccountingController accounting data json and ebnf format AuthController authenticate user ComposerController CRUD main services (like createDesktop, runApplication) CoreController get configuration and user message info ManagerController manage pyos PrinterController CRUD printer object StoreController CRUD key value data UserController retrieve user information","title":"Controllers"},{"location":"3.0/config/controllers/#access-permission","text":"The AccountingController and ManagerController access is protected with a source ip address filter. The access control filter is defined in a dictionary. Each dictionary entry use the controller name and with an entry permitip . The permitip is a list of subnet, for example [ '10.0.0.0/8', '172.16.0.0/12' ] . If permitip is not set or the controller name is not set, all ip source address are allowed the send a request to the controller. The controllers dictionnary is defined in the od.config file. By default the configuration permit private network defined in rfc1918 and rfc4193 . Get more information about the private network . By default others controllers access is enabled, without ip restriction. controllers : { 'AccountingController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'AuthController' : { 'permitip': None }, 'ComposerController' : { 'permitip': None }, 'CoreController' : { 'permitip': None }, 'ManagerController': { 'permitip': [ '10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fd00::/8', '169.254.0.0/16', '127.0.0.0/8' ] }, 'PrinterController' : { 'permitip': None }, 'StoreController' : { 'permitip': None }, 'UserController' : { 'permitip': None } } If the source ip address is not allowed, the response is a HTTP status code 403 Forbidden {\"status\": 403, \"status_message\": \"403 Forbidden\", \"message\": \"Request forbidden -- authorization will not help\"}","title":"Access Permission"},{"location":"3.0/config/desktop/","text":"desktop options in od.config The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode . desktop.options All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'hostPath' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' } desktop.shareipcnamespace The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'host' Use the host system\u2019s IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access container:<donor-name-or-ID> . The default value is desktop.shareipcnamespace : 'shareable' desktop.homedirectory This option describes how the default home directory for user user ballon should be created. The value can be defined as : 'None' : no dedicated volume is created, the oc.user container use an emptyDir': { 'medium': 'Memory'} . All user data will be removed at logout. 'hostPath' : In release 3.0, ONLY 'hostPath' is supported to set a dedicated volume, the oc.user container and applications share this volume. User home data are persistent. desktop.remotehomedirectorytype desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory . desktop.defaultbackgroundcolors The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost:30443, in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example : desktop.envlocal desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'X11LISTEN': 'tcp' } Reserved variables Variable Values Description X11LISTEN tcp permit X11 to listen on tcp port, default is udp ABCDESKTOP_RUN_DIR /var/run/desktop directory to write pid services ABCDESKTOP_LOG_DIR /var/log/desktop directory to write log files services DISABLE_REMOTEIP_FILTERING disabled disabled remote ip filtering inside pod user, default is disabled , change to enabled to remove core ip filtering SET_DEFAULT_WALLPAPER myfile.jpeg name of file to set the user wallpaper, this file must exist in ~/.wallpapers SET_DEFAULT_COLOR #6EC6F0 Value of default colour saved in file ~/.store/currentColor SENDCUTTEXT enabled Send clipboard changes to user. Set value to disabled to disable clipboard changes to user web browser. This value is overwrite by label ABCDESKTOP_LABEL_sendcuttext if exist SENDCUTTEXT=${ABCDESKTOP_LABEL_sendcuttext:-$SENDCUTTEXT} . The default value is enabled ACCEPTCUTTEXT enabled Accept clipboard updates from user. Set value to disabled to disable clipboard changes to user web browser. This value is overwrite by label ABCDESKTOP_LABEL_acceptcuttext if exist ACCEPTCUTTEXT=${ABCDESKTOP_LABEL_acceptcuttext:-$ACCEPTCUTTEXT} . The default value is enabled desktop.nodeselector desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' } desktop.username desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userid desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.groupid desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.userhomedirectory desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid. desktop.uselocaltime The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime . desktop.policies The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 } desktop.application_config Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations desktop.host_config Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations desktop.webhookdict desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects. Experimental features desktop.desktopuseinternalfqdn WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"Desktop"},{"location":"3.0/config/desktop/#desktop-options-in-odconfig","text":"The od.config contains options to describe how the oc.user and applications containers have to be created. Options differ if abcdesktop.io is running in docker mode or in kubernetes mode .","title":"desktop options in od.config"},{"location":"3.0/config/desktop/#desktopoptions","text":"All desktop options are defined in od.config file. Desktop options start with the prefix desktop. , then add the name of the option. Option name Type Sample desktop.defaultbackgroundcolors list [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] desktop.homedirectorytype string 'hostPath' desktop.remotehomedirectorytype list [] desktop.persistentvolumeclaim string None desktop.envlocal dictionary { 'DISPLAY': ':0.0', 'USER': 'balloon', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'LOGNAME': 'balloon' } desktop.nodeselector dictionary {} desktop.username string 'balloon' desktop.userid integer 4096 desktop.groupid integer 4096 desktop.userhomedirectory string '/home/balloon' desktop.useinternalfqdn boolean False desktop.uselocaltime boolean False desktop.host_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'network_mode' : 'container', 'shm_size' : '128M', 'mem_limit' : '512M', 'cpu_period' : 100000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.application_config dictionary { 'auto_remove' : True, 'ipc_mode' : 'shareable', 'pid_mode' : True, 'network_mode' : 'container', 'shm_size' : '512M', 'mem_limit' : '2G', 'cpu_period' : 200000, 'cpu_quota' : 150000, 'security_opt' : [ 'seccomp=unconfined' ] } desktop.policies dictionary { 'rules':{}, 'max_app_counter':5 } desktop.webhookdict dictionary { 'firewall': '192.168.7.1' }","title":"desktop.options"},{"location":"3.0/config/desktop/#desktopshareipcnamespace","text":"The type of desktop.shareipcnamespace is a string. The default value is 'shareable' This option permit user contain to share the ipc namespace with application Value Description '' Use daemon\u2019s default. 'none' Own private IPC namespace, with /dev/shm not mounted. 'private' Own private IPC namespace. 'host' Use the host system\u2019s IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. If not specified, daemon default is used, which can either be 'private' or 'shareable' , depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built (typically C/OpenMPI, C++/using boost libraries) high performance applications for scientific computing and financial services industries. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using \"shareable\" mode for the main (i.e. \u201cdonor\u201d) container, and containers can access container:<donor-name-or-ID> . The default value is desktop.shareipcnamespace : 'shareable'","title":"desktop.shareipcnamespace"},{"location":"3.0/config/desktop/#desktophomedirectory","text":"This option describes how the default home directory for user user ballon should be created. The value can be defined as : 'None' : no dedicated volume is created, the oc.user container use an emptyDir': { 'medium': 'Memory'} . All user data will be removed at logout. 'hostPath' : In release 3.0, ONLY 'hostPath' is supported to set a dedicated volume, the oc.user container and applications share this volume. User home data are persistent.","title":"desktop.homedirectory"},{"location":"3.0/config/desktop/#desktopremotehomedirectorytype","text":"desktop.remotehomedirectorytype is a list of string. Each string describe if the remount access to a directory is allowed. example [ 'cifs', 'webdav' ] For each entry in the desktop.remotehomedirectorytype list, abcdesktop.io try to mount the remote file system using data from the implicit auth provider. If desktop.remotehomedirectorytype contains 'cifs' and if the authentification provider get homeDrive and homeDirectory attributs then abcdesktop request the kubernetes abcdesktop/CIFS Driver to mount the remote filesystem. The user find a mount point named homeDrive value, and mounted to homeDirectory .","title":"desktop.remotehomedirectorytype"},{"location":"3.0/config/desktop/#desktopdefaultbackgroundcolors","text":"The desktop.defaultbackgroundcolors allow you to change the default background color. The default value is a list of string [ '#6EC6F0', '#333333', '#666666', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] The desktop.defaultbackgroundcolors length can contain up to 8 entries. To see the color Open the url http://localhost:30443, in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Connect with Anonymous access, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors You should see the default background colors, for example :","title":"desktop.defaultbackgroundcolors"},{"location":"3.0/config/desktop/#desktopenvlocal","text":"desktop.envlocal is a dictionary. desktop.envlocal contains a (key,value) added as environment variables to oc.user. The default value is : { 'DISPLAY': ':0.0', 'LIBOVERLAY_SCROLLBAR': '0', 'UBUNTU_MENUPROXY': '0', 'HOME': '/home/balloon', 'X11LISTEN': 'tcp' }","title":"desktop.envlocal"},{"location":"3.0/config/desktop/#reserved-variables","text":"Variable Values Description X11LISTEN tcp permit X11 to listen on tcp port, default is udp ABCDESKTOP_RUN_DIR /var/run/desktop directory to write pid services ABCDESKTOP_LOG_DIR /var/log/desktop directory to write log files services DISABLE_REMOTEIP_FILTERING disabled disabled remote ip filtering inside pod user, default is disabled , change to enabled to remove core ip filtering SET_DEFAULT_WALLPAPER myfile.jpeg name of file to set the user wallpaper, this file must exist in ~/.wallpapers SET_DEFAULT_COLOR #6EC6F0 Value of default colour saved in file ~/.store/currentColor SENDCUTTEXT enabled Send clipboard changes to user. Set value to disabled to disable clipboard changes to user web browser. This value is overwrite by label ABCDESKTOP_LABEL_sendcuttext if exist SENDCUTTEXT=${ABCDESKTOP_LABEL_sendcuttext:-$SENDCUTTEXT} . The default value is enabled ACCEPTCUTTEXT enabled Accept clipboard updates from user. Set value to disabled to disable clipboard changes to user web browser. This value is overwrite by label ABCDESKTOP_LABEL_acceptcuttext if exist ACCEPTCUTTEXT=${ABCDESKTOP_LABEL_acceptcuttext:-$ACCEPTCUTTEXT} . The default value is enabled","title":"Reserved variables"},{"location":"3.0/config/desktop/#desktopnodeselector","text":"desktop.nodeselector is a dictionary. This option permits to assign user pods to nodes. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair. { 'disktype': 'ssd' }","title":"desktop.nodeselector"},{"location":"3.0/config/desktop/#desktopusername","text":"desktop.username describes the balloon user created inside the oc.user container. The type of desktop.username is string. The default value is 'balloon'. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.username"},{"location":"3.0/config/desktop/#desktopuserid","text":"desktop.userid describes the uid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userid"},{"location":"3.0/config/desktop/#desktopgroupid","text":"desktop.groupid describes the gid of the user created inside the oc.user container. The type of desktop.userid is integer. The default value is 4096. If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : RUN groupadd --gid 4096 $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.groupid"},{"location":"3.0/config/desktop/#desktopuserhomedirectory","text":"desktop.userhomedirectory describes the homedirectory of the user created inside the oc.user container. The type of desktop.userhomedirectory is string. The default value is /home/balloon . If you change this value, you have to rebuild your own oc.user file The script oc.user in Dockerfile oc.user : ENV BUSER balloon RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Read the dedicated page on balloon to gaet more information about user balloon, uid, and gid.","title":"desktop.userhomedirectory"},{"location":"3.0/config/desktop/#desktopuselocaltime","text":"The desktop.uselocaltime is boolean, to use host value of /etc/localtime . The default value is False . If desktop.uselocaltime is True, this add a volume mapping from host file /etc/localtime to container file /etc/localtime .","title":"desktop.uselocaltime"},{"location":"3.0/config/desktop/#desktoppolicies","text":"The desktop.policies is a dictionary. Entry Description max_app_counter limit applications counter, without checking the docker container status rules rules dictionary 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } acl allow or denied desktop creation Example desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' }, 'Mygroupteam': { 'type': 'cifs', 'name': 'toto', 'unc': '//192.168.7.101/team', 'volumename': 'team' } } }, 'acls' : {}, 'max_app_counter' : 4 }","title":"desktop.policies"},{"location":"3.0/config/desktop/#desktopapplication_config","text":"Default application host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the application can be run, read host_config description page to get more informations","title":"desktop.application_config"},{"location":"3.0/config/desktop/#desktophost_config","text":"Default desktop oc.user host_config dictionary, maps the dictionary as arguments from docker API create_host_config Define how the oc.user container can be run, read host_config description page to get more informations","title":"desktop.host_config"},{"location":"3.0/config/desktop/#desktopwebhookdict","text":"desktop.webhookdict is a dictionary to add key/value to the command create and destroy in rules objects.","title":"desktop.webhookdict"},{"location":"3.0/config/desktop/#experimental-features","text":"","title":"Experimental features"},{"location":"3.0/config/desktop/#desktopdesktopuseinternalfqdn","text":"WARNING desktop.desktopuseinternalfqdn is an experimental feature , keep this value to False in production desktop.desktopuseinternalfqdn describes the content of the payload data in the JWT Desktop Token. The default value is False . Nginx front end act as a reverse proxy. This reverse proxy use the FQDN of the user's pod to route http request. If this value is set to False the payload data in the JWT Desktop Token contains the IP Address of the user Pod . If this value is set to True the payload data in the JWT Desktop Token contains the FQDN of the user Pod . If you CAN NOT add endpoint_pod_names in the coredns configuration, you MUST set desktop.desktopuseinternalfqdn to False . This choice is less secure. To set desktop.desktopuseinternalfqdn to True value, you have to update the coredns ConfigMap. kind: ConfigMap apiVersion: v1 metadata: name: coredns namespace: kube-system data: Corefile: | .:53 { log errors health ready kubernetes cluster.local in-addr.arpa ip6.arpa { endpoint_pod_names pods insecure fallthrough in-addr.arpa ip6.arpa transfer to * ttl 30 } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance }","title":"desktop.desktopuseinternalfqdn"},{"location":"3.0/config/desktop.pod/","text":"desktop.pod abcdesktop defines a user desktop as a group of user's containers. This is a main features of abcdesktop. Each container offers a service. For example printer is a service. printer service runs inside the user pod. graphical is a service. graphical service runs inside the user pod and is the default service. containers in the user pod init contains init command for user pod graphical is the user graphical service (X11 and VNC) spawner is the command service for graphical service broadcast is the broadcast service for graphical service webshell is the shell (bash) service for graphical service printer is the printer service (cupsd) printerfile is the file service to download generated PDF file (this file transfert service is dedicated for printer service) sound is the sound service (pulseaudio) to send rtp stream from a container to the web browser via janus webrtc gateway filer is the filer service to upload and download file into the user home directory storage contains abcdesktop user secrets Each service : can be enable or disable 'enable': True can set dedicated 'resources' limits resources for a container can set dedicated 'acl' to start or not using rules can set dedicated 'securityContext' or use the spec securityContext can set dedicated 'secrets_requirement , a list of secrets to run example ['abcdesktop/vnc', 'abcdesktop/kerberos'] default desktop.pod desktop.pod : { 'spec' : { 'shareProcessNamespace': True, 'shareProcessMemory': True, 'shareProcessMemorySize': '256Mi', 'securityContext': { 'supplementalGroups': [ '{{ supplementalGroups }}' ], 'runAsUser': '{{ uidNumber }}', 'runAsGroup': '{{ gidNumber }}', 'readOnlyRootFilesystem': False, 'allowPrivilegeEscalation': True } }, 'graphical' : { 'image': { 'default': 'abcdesktopio/oc.user.kubernetes.18.04:3.0' }, 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'waitportbin': '/composer/node/wait-port/node_modules/.bin/wait-port', 'resources': { 'requests': { 'memory': \"320Mi\", 'cpu': \"250m\" }, 'limits': { 'memory': \"1Gi\", 'cpu': \"1000m\" } }, 'shareProcessNamespace': True, 'tcpport': 6081, 'secrets_requirement' : [ 'abcdesktop/vnc', 'abcdesktop/kerberos'] }, 'spawner' : { 'enable': True, 'tcpport': 29786, 'waitportbin' : '/composer/node/wait-port/node_modules/.bin/wait-port', 'acl': { 'permit': [ 'all' ] } }, 'broadcast' : { 'enable': True, 'tcpport': 29784, 'acl': { 'permit': [ 'all' ] } }, 'webshell' : { 'enable': True, 'tcpport': 29781, 'acl': { 'permit': [ 'all' ] } }, 'printer' : { 'image': 'abcdesktopio/oc.cupsd.18.04:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'tcpport': 681, # cupsd need to start as root 'securityContext': { 'runAsUser': 0 }, 'resources': { 'requests': { 'memory': \"64Mi\", 'cpu': \"125m\" }, 'limits' : { 'memory': \"512Mi\", 'cpu': \"500m\" } }, 'acl': { 'permit': [ 'all' ] } }, 'printerfile' : { 'enable': True, 'tcpport': 29782, 'acl': { 'permit': [ 'all' ] } }, 'filer' : { 'image': 'abcdesktopio/oc.filer:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'tcpport': 29783, 'acl': { 'permit': [ 'all' ] } }, 'storage' : { 'image': 'k8s.gcr.io/pause:3.8', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"32Mi\", 'cpu': \"100m\" }, 'limits' : { 'memory': \"128Mi\", 'cpu': \"250m\" } } }, 'sound': { 'image': 'abcdesktopio/oc.pulseaudio.22.04:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': False, 'tcpport': 4714, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"8Mi\", 'cpu': \"50m\" }, 'limits' : { 'memory': \"64Mi\", 'cpu': \"250m\" } } }, 'init': { 'image': 'busybox', 'enable': True, # 'imagePullSecrets': [ { 'name': name_of_secret } ] 'imagePullPolicy': 'IfNotPresent', 'securityContext': { 'runAsUser': 0 }, 'acl': { 'permit': [ 'all' ] }, 'command': [ 'sh', '-c', 'chmod 750 ~ && chown {{ uidNumber }}:{{ gidNumber }} ~' ] }, 'ephemeral_container': { 'enable': True, 'acl': { 'permit': [ 'all' ] } }, 'pod_application' : { 'enable': True, # 'imagePullSecrets': [ { 'name': name_of_secret } ] 'acl': { 'permit': [ 'all' ] } } } common options enable The container is added to the user pod if 'enable': True acl The container is added to the user pod if acl matches. acl is based on tags and rules. Read the authentification-rules abcdesktop documentation to defined tags. pullpolicy The image use the kubernetes pull policy values : IfNotPresent the image is pulled only if it is not already present locally. Always kubelet queries the container image registry to resolve the name to an image digest. Never the kubelet does not try fetching the image. If the image is somehow already present locally, the kubelet attempts to start the container; otherwise, startup fails. Read the pullpolicy kubernetes documentation to get more details. waitportbin waitportbin is a binary command line, embedded inside the container, to check if the container is ready to run. Commonly it uses the tcpport value. The command is run with parameters : /composer/node/wait-port/node_modules/.bin/wait-port -t {waitportbintimeout}*1000 {container_ipaddr}:{container_tcpport} waitportbintimeout waitportbintimeout is the timeout in seconds for the waitportbin command. image Image describe the container image name ( by example 'image': 'abcdesktopio/oc.user.kubernetes.18.04:3.0' ) imagePullSecrets The imagePullSecret entry is the list of the secret name used by kubernetes to access to the private registry. The type of imagePullSecret is a list. This option is used if you need to store the abcdesktop docker image on your a private registry. imagePullSecret : [ { 'name': name_of_secret } ] Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU The imagePullSecret become in this sample imagePullSecret : [ { 'name': 'abcdesktopregistrysecret' } ] resources resources come from the kubernetes resources containers management. Read the resources kubernetes documentation to get more details. spec entry spec entry defines the spec entry for a pod. All kubernetes entries are supported. Some of them are overwrited by abcdesktop. {{ uidNumber }} is replaced by the user's uidNumber on ldap if the objectClass is posixAccount or if not set by the default user id set in option desktop.userid {{ gidNumber }} is replaced by the user's gidNumber on ldap if the objectClass is posixAccount is replaced by the ldap gidNumber or if not set by the default group id set in option desktop.groupid {{ supplementalGroups }} is replaced by the list of groups gidNumber is posixGroup shareProcessNamespace When process namespace sharing is enabled, processes in a container are visible to all other containers in the same pod. Read the kubernetes shareProcessNamespace details, to get more details. shareProcessMemory POSIX shared memory requires that a tmpfs be mounted at /dev/shm. The containers in a pod do not share their mount namespaces so we use volumes to provide the same /dev/shm into each container in a pod. To get more details, read shared_memory . It is defined as an emptyDir volume { 'name': 'shm', { 'medium': 'Memory', 'sizeLimit': shareProcessMemorySize } } shareProcessMemorySize is the size of shareProcessMemory . The size is set to the shm volume 'sizeLimit': shareProcessMemorySize 'spec' : { 'shareProcessNamespace': True, 'shareProcessMemory': True, 'shareProcessMemorySize': '256Mi', 'securityContext': { 'supplementalGroups': [ '{{ supplementalGroups }}' ], 'runAsUser': '{{ uidNumber }}', 'runAsGroup': '{{ gidNumber }}', 'readOnlyRootFilesystem': False, 'allowPrivilegeEscalation': True } init container init container run the init command. It changes access right to the user home directory. The init command runs as root by default with a securityContext 'securityContext': {'runAsUser':0, 'runAsGroup':0 } . The command support {{ }} values. Values can be '{{ uidNumber }}' '{{ gidNumber }}' '{{ uid }}' Values are read from the previous ldap authentification. '{{ uidNumber }}' is replaced by the ldap uidNumber or if not set by the default user id set in option desktop.userid '{{ gidNumber }}' is replaced by the ldap gidNumber or if not set by the default group id set in option desktop.groupid '{{ uid }}' is replaced by the ldap uid or if not set by the default user name set in option desktop.username Example 'command': [ 'sh', '-c', 'chmod 755 ~ && chown {{ uidNumber }}:{{ gidNumber }} ~' ]","title":"Pod User"},{"location":"3.0/config/desktop.pod/#desktoppod","text":"abcdesktop defines a user desktop as a group of user's containers. This is a main features of abcdesktop. Each container offers a service. For example printer is a service. printer service runs inside the user pod. graphical is a service. graphical service runs inside the user pod and is the default service.","title":"desktop.pod"},{"location":"3.0/config/desktop.pod/#containers-in-the-user-pod","text":"init contains init command for user pod graphical is the user graphical service (X11 and VNC) spawner is the command service for graphical service broadcast is the broadcast service for graphical service webshell is the shell (bash) service for graphical service printer is the printer service (cupsd) printerfile is the file service to download generated PDF file (this file transfert service is dedicated for printer service) sound is the sound service (pulseaudio) to send rtp stream from a container to the web browser via janus webrtc gateway filer is the filer service to upload and download file into the user home directory storage contains abcdesktop user secrets Each service : can be enable or disable 'enable': True can set dedicated 'resources' limits resources for a container can set dedicated 'acl' to start or not using rules can set dedicated 'securityContext' or use the spec securityContext can set dedicated 'secrets_requirement , a list of secrets to run example ['abcdesktop/vnc', 'abcdesktop/kerberos']","title":"containers in the user pod"},{"location":"3.0/config/desktop.pod/#default-desktoppod","text":"desktop.pod : { 'spec' : { 'shareProcessNamespace': True, 'shareProcessMemory': True, 'shareProcessMemorySize': '256Mi', 'securityContext': { 'supplementalGroups': [ '{{ supplementalGroups }}' ], 'runAsUser': '{{ uidNumber }}', 'runAsGroup': '{{ gidNumber }}', 'readOnlyRootFilesystem': False, 'allowPrivilegeEscalation': True } }, 'graphical' : { 'image': { 'default': 'abcdesktopio/oc.user.kubernetes.18.04:3.0' }, 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'waitportbin': '/composer/node/wait-port/node_modules/.bin/wait-port', 'resources': { 'requests': { 'memory': \"320Mi\", 'cpu': \"250m\" }, 'limits': { 'memory': \"1Gi\", 'cpu': \"1000m\" } }, 'shareProcessNamespace': True, 'tcpport': 6081, 'secrets_requirement' : [ 'abcdesktop/vnc', 'abcdesktop/kerberos'] }, 'spawner' : { 'enable': True, 'tcpport': 29786, 'waitportbin' : '/composer/node/wait-port/node_modules/.bin/wait-port', 'acl': { 'permit': [ 'all' ] } }, 'broadcast' : { 'enable': True, 'tcpport': 29784, 'acl': { 'permit': [ 'all' ] } }, 'webshell' : { 'enable': True, 'tcpport': 29781, 'acl': { 'permit': [ 'all' ] } }, 'printer' : { 'image': 'abcdesktopio/oc.cupsd.18.04:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'tcpport': 681, # cupsd need to start as root 'securityContext': { 'runAsUser': 0 }, 'resources': { 'requests': { 'memory': \"64Mi\", 'cpu': \"125m\" }, 'limits' : { 'memory': \"512Mi\", 'cpu': \"500m\" } }, 'acl': { 'permit': [ 'all' ] } }, 'printerfile' : { 'enable': True, 'tcpport': 29782, 'acl': { 'permit': [ 'all' ] } }, 'filer' : { 'image': 'abcdesktopio/oc.filer:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'tcpport': 29783, 'acl': { 'permit': [ 'all' ] } }, 'storage' : { 'image': 'k8s.gcr.io/pause:3.8', 'imagePullPolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"32Mi\", 'cpu': \"100m\" }, 'limits' : { 'memory': \"128Mi\", 'cpu': \"250m\" } } }, 'sound': { 'image': 'abcdesktopio/oc.pulseaudio.22.04:3.0', 'imagePullPolicy': 'IfNotPresent', 'enable': False, 'tcpport': 4714, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"8Mi\", 'cpu': \"50m\" }, 'limits' : { 'memory': \"64Mi\", 'cpu': \"250m\" } } }, 'init': { 'image': 'busybox', 'enable': True, # 'imagePullSecrets': [ { 'name': name_of_secret } ] 'imagePullPolicy': 'IfNotPresent', 'securityContext': { 'runAsUser': 0 }, 'acl': { 'permit': [ 'all' ] }, 'command': [ 'sh', '-c', 'chmod 750 ~ && chown {{ uidNumber }}:{{ gidNumber }} ~' ] }, 'ephemeral_container': { 'enable': True, 'acl': { 'permit': [ 'all' ] } }, 'pod_application' : { 'enable': True, # 'imagePullSecrets': [ { 'name': name_of_secret } ] 'acl': { 'permit': [ 'all' ] } } }","title":"default desktop.pod"},{"location":"3.0/config/desktop.pod/#common-options","text":"","title":"common options"},{"location":"3.0/config/desktop.pod/#enable","text":"The container is added to the user pod if 'enable': True","title":"enable"},{"location":"3.0/config/desktop.pod/#acl","text":"The container is added to the user pod if acl matches. acl is based on tags and rules. Read the authentification-rules abcdesktop documentation to defined tags.","title":"acl"},{"location":"3.0/config/desktop.pod/#pullpolicy","text":"The image use the kubernetes pull policy values : IfNotPresent the image is pulled only if it is not already present locally. Always kubelet queries the container image registry to resolve the name to an image digest. Never the kubelet does not try fetching the image. If the image is somehow already present locally, the kubelet attempts to start the container; otherwise, startup fails. Read the pullpolicy kubernetes documentation to get more details.","title":"pullpolicy"},{"location":"3.0/config/desktop.pod/#waitportbin","text":"waitportbin is a binary command line, embedded inside the container, to check if the container is ready to run. Commonly it uses the tcpport value. The command is run with parameters : /composer/node/wait-port/node_modules/.bin/wait-port -t {waitportbintimeout}*1000 {container_ipaddr}:{container_tcpport}","title":"waitportbin"},{"location":"3.0/config/desktop.pod/#waitportbintimeout","text":"waitportbintimeout is the timeout in seconds for the waitportbin command.","title":"waitportbintimeout"},{"location":"3.0/config/desktop.pod/#image","text":"Image describe the container image name ( by example 'image': 'abcdesktopio/oc.user.kubernetes.18.04:3.0' )","title":"image"},{"location":"3.0/config/desktop.pod/#imagepullsecrets","text":"The imagePullSecret entry is the list of the secret name used by kubernetes to access to the private registry. The type of imagePullSecret is a list. This option is used if you need to store the abcdesktop docker image on your a private registry. imagePullSecret : [ { 'name': name_of_secret } ] Example to build a registry Kubernetes secret named abcdesktopregistrysecret with the docker hub. kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=https://index.docker.io/v1/ --docker-username=XXXXXXX --docker-password=YYYYYYYU Example to build a registry Kubernetes secret named abcdesktopregistrysecret with your own privateregistry kubectl create secret docker-registry abcdesktopregistrysecret --docker-server=registry.mydomain.local:443 --docker-username=XXXXXXX --docker-password=YYYYYYYU The imagePullSecret become in this sample imagePullSecret : [ { 'name': 'abcdesktopregistrysecret' } ]","title":"imagePullSecrets"},{"location":"3.0/config/desktop.pod/#resources","text":"resources come from the kubernetes resources containers management. Read the resources kubernetes documentation to get more details.","title":"resources"},{"location":"3.0/config/desktop.pod/#spec-entry","text":"spec entry defines the spec entry for a pod. All kubernetes entries are supported. Some of them are overwrited by abcdesktop. {{ uidNumber }} is replaced by the user's uidNumber on ldap if the objectClass is posixAccount or if not set by the default user id set in option desktop.userid {{ gidNumber }} is replaced by the user's gidNumber on ldap if the objectClass is posixAccount is replaced by the ldap gidNumber or if not set by the default group id set in option desktop.groupid {{ supplementalGroups }} is replaced by the list of groups gidNumber is posixGroup shareProcessNamespace When process namespace sharing is enabled, processes in a container are visible to all other containers in the same pod. Read the kubernetes shareProcessNamespace details, to get more details. shareProcessMemory POSIX shared memory requires that a tmpfs be mounted at /dev/shm. The containers in a pod do not share their mount namespaces so we use volumes to provide the same /dev/shm into each container in a pod. To get more details, read shared_memory . It is defined as an emptyDir volume { 'name': 'shm', { 'medium': 'Memory', 'sizeLimit': shareProcessMemorySize } } shareProcessMemorySize is the size of shareProcessMemory . The size is set to the shm volume 'sizeLimit': shareProcessMemorySize 'spec' : { 'shareProcessNamespace': True, 'shareProcessMemory': True, 'shareProcessMemorySize': '256Mi', 'securityContext': { 'supplementalGroups': [ '{{ supplementalGroups }}' ], 'runAsUser': '{{ uidNumber }}', 'runAsGroup': '{{ gidNumber }}', 'readOnlyRootFilesystem': False, 'allowPrivilegeEscalation': True }","title":"spec entry"},{"location":"3.0/config/desktop.pod/#init-container","text":"init container run the init command. It changes access right to the user home directory. The init command runs as root by default with a securityContext 'securityContext': {'runAsUser':0, 'runAsGroup':0 } . The command support {{ }} values. Values can be '{{ uidNumber }}' '{{ gidNumber }}' '{{ uid }}' Values are read from the previous ldap authentification. '{{ uidNumber }}' is replaced by the ldap uidNumber or if not set by the default user id set in option desktop.userid '{{ gidNumber }}' is replaced by the ldap gidNumber or if not set by the default group id set in option desktop.groupid '{{ uid }}' is replaced by the ldap uid or if not set by the default user name set in option desktop.username Example 'command': [ 'sh', '-c', 'chmod 755 ~ && chown {{ uidNumber }}:{{ gidNumber }} ~' ]","title":"init container"},{"location":"3.0/config/editconfig/","text":"How to edit pyos core service configuration file Edit your configuration file Download the default od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors option in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local od.config file. To apply changes, you can replace the abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop | you can also use the replace command kubectl create configmap -n abcdesktop abcdesktop-config --from-file=od.config -o yaml --dry-run | kubectl replace -n abcdesktop -f - Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop Check that the new colours are presents in front : Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colour and you should have it as background colour : Great, you can easily update your configuration file od.config .","title":"Edit your configuration file"},{"location":"3.0/config/editconfig/#how-to-edit-pyos-core-service-configuration-file","text":"","title":"How to edit pyos core service configuration file"},{"location":"3.0/config/editconfig/#edit-your-configuration-file","text":"Download the default od.config file and save it to your abcdesktop local directory. To make change, edit your own od.config file vim od.config Change the defaultbackgroundcolors option in the desktop options. Locate the line desktop.defaultbackgroundcolors and update the first entries with the values '#FF0000', '#FFFFFF', '#0000FF' desktop.defaultbackgroundcolors : [ '#FF0000', '#FFFFFF', '#0000FF', '#CD3C14', '#4BB4E6', '#50BE87', '#A885D8', '#FFB4E6' ] Save your local od.config file. To apply changes, you can replace the abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop | you can also use the replace command kubectl create configmap -n abcdesktop abcdesktop-config --from-file=od.config -o yaml --dry-run | kubectl replace -n abcdesktop -f - Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop","title":"Edit your configuration file"},{"location":"3.0/config/editconfig/#check-that-the-new-colours-are-presents-in-front","text":"Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io container. http://localhost:30443 You should see the abcdesktop.io home page. Press the Sign-in Anonymously, have look At the right top corner, click on the menu and choose Settings , then click on Screen Colors Choose your colour and you should have it as background colour : Great, you can easily update your configuration file od.config .","title":"Check that the new colours are presents in front :"},{"location":"3.0/config/frontjs/","text":"dock configuration in od.config Menu Setting The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True } default dock config The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } } Additional applications This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Front"},{"location":"3.0/config/frontjs/#dock-configuration-in-odconfig","text":"","title":"dock configuration in od.config"},{"location":"3.0/config/frontjs/#menu-setting","text":"The menu can be changed using the dictionnary object menuconfig menuconfig : { 'settings' : True, 'appstore' : True, 'screenshot' : True, 'download' : True, 'logout' : True, 'disconnect' : True }","title":"Menu Setting"},{"location":"3.0/config/frontjs/#default-dock-config","text":"The dock session in od.config file describe the default docker in abcdesktop.io. The default dock value contains the default applications. The dock option is a dictionnary read by the front web as a json object. docker entry Descriptions filemanager FileManager application terminal Terminal application webshell HTML 5, terminal application based on xterm.js webshorcut Web browser url launch inside the container dock : { 'filemanager': { 'args': None, 'showinview': u'dock', 'name': u'FileManager', 'keyword': u'files,file manager', 'launch': u'nautilus.Nautilus', 'displayname': u'FileManager', 'execmode': u'builtin', 'cat': u'utilities,office', 'id': u'filemanager.d', 'icon': u'pantheon-files-icons.svg' }, 'terminal': { 'args': '', 'name': u'TerminalBuiltin', 'keyword': u'terminal,shell,bash,builtin,pantheon', 'launch': u'qterminal.qterminal', 'displayname': u'Terminal Builtin', 'execmode': u'builtin', 'cat': u'utilities,development', 'id': u'terminalbuiltin.d', 'hideindock': True, 'icon': u'pantheon-terminal-builtin-icons.svg' }, 'webshell': { 'name': u'WebShell', 'keyword': u'terminal,shell,webshell,bash', 'launch': u'frontendjs.webshell', 'displayname': u'Web Shell', 'execmode': u'frontendjs', 'cat': u'utilities,development', 'id': u'webshell.d', 'icon': u'webshell.svg' } }","title":"default dock config"},{"location":"3.0/config/frontjs/#additional-applications","text":"This feature is deprecated. To run embeded application inside the oc.user image container, with specific attribut { 'execmode': 'builtin' } add 'webshortcut': { 'name': u'xlogo', 'showinview': u'dock', 'keyword': u'xlogo', 'execmode': u'builtin', 'launch': u'/usr/bin/xlogo', 'displayname': u'xlogo', 'execmode': u'builtin', 'cat': u'utilities', 'id': u'xlogo.d', 'icon': u'xlogo.svg', 'hideindock': False, 'args': '' }","title":"Additional applications"},{"location":"3.0/config/host_config/","text":"host_config resource description host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" } host_config entries Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings. Main host_config entries descriptions auto_remove The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True cpu_period cpu_quota cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling. privileged The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False. ipc_mode The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers. security_opt The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website. capabilities cap_add cap_drop This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"host_config resource description"},{"location":"3.0/config/host_config/#host_config-resource-description","text":"host_config resource description allows to change the running context for docker application. host_config is a dictionary and uses the same format in applist.json file and od.config file. The same host_config format is reused in a multiple configuration files. host_config is present in applist.json file to build application image, and in od.config to set default running values in desktop and in application. For example you can set low cpu and memory values to an application like the great X11 xeyes. { \"mem_limit\": \"32M\", \"shm_size\": \"OM\", \"cpu_period\": 50000, \"cpu_quota\": 50000, \"pid_mode\": false, \"network_mode\": \"none\" }","title":"host_config resource description"},{"location":"3.0/config/host_config/#host_config-entries","text":"Key name Type Description auto_remove bool enable auto removal of the container on daemon side when the container\u2019s process exits. cpu_period int The length of a CPU period in microseconds. cpu_quota int Microseconds of CPU time that the container can get in a CPU period. cpu_shares int CPU shares relative weight. cpuset_cpus str CPUs in which to allow execution 0 3 0 1 . cpuset_mems str Memory nodes MEMs in which to allow execution 0 3 0 1. Only effective on NUMA systems. device_cgroup_rules list A list of cgroup rules to apply to the container. device_read_bps bytes per second Limit read rate from a device in the form of: [{\u201cPath\u201d: \u201cdevice_path\u201d \u201cRate\u201d: rate}] device_read_iops IO per second Limit read rate from a device. device_write_bps bytes per second Limit write rate from a device. device_write_iops IO per second Limit write rate from a device. devices list Expose host devices to the container as a list of strings in the form : : . For example /dev/sda:/dev/xvda:rwm allows the container to have read write access to the host\u2019s /dev/sda via a node named /dev/xvda inside the container. device_requests list Expose host resources such as GPUs to the container as a list of docker.types.DeviceRequest instances. ipc_mode str Set the IPC mode for the container. mem_limit float or str Memory limit. Accepts float values which represent the memory limit of the created container in bytes or a string with a units identification char 100000b 1000k 128m 1g. mem_reservation float or str Memory soft limit mem_swappiness int Tune a container s memory swappiness behavior. Accepts number between 0 and 100. memswap_limit str or int Maximum amount of memory + swap a container is allowed to consume. oom_kill_disable bool Whether to disable OOM killer. oom_score_adj int An integer value containing the score given to the container in order to tune OOM killer preferences. shm_size str or int Size of /dev/shm e.g. 1G. cap_add list of str Add kernel capabilities. { 'add': [ 'SYS_ADMIN', 'SYS_PTRACE' ]} for example to permit the call ptrace: SYS_PTRACE , trace arbitrary processes using ptrace, and SYS_ADMIN , perform a range of system administration operations. Read the docker run command informations https://docs.docker.com/engine/reference/run/ chapter Runtime privilege and Linux capabilities cap_drop list of str Drop kernel capabilities. dns list Set custom DNS servers. dns_opt list Additional options to be added to the container\u2019s resolv.conf file dns_search list DNS search domains. extra_hosts dict Additional hostnames to resolve inside the container as a mapping of hostname to IP address. group_add list List of additional group names and/or IDs that the container process will run as. isolation str Isolation technology to use. Default: None. pid_mode str or bool If set to hostuse the host PID namespace inside the container. If set to host, use the host PID namespace inside the container. pids_limit int Tune a container\u2019s pids limit. Set -1 for unlimited. privileged bool Give extended privileges to this container. security_opt list A list of string values to customize labels for MLS systems such as SELinux. storage_opt dict Storage driver options per container as a key value mapping. sysctls dict Kernel parameters to set in the container. ulimits list Ulimits to set inside the container as a list of docker.types.Ulimit instances. userns_mode str Sets the user namespace mode for the container when user namespace remapping option is enabled. Supported values are: host uts_mode str Sets the UTS namespace mode for the container. Supported values are: host runtime str Runtime to use with this container. network_mode str One of: bridge Create a new network stack for the container on the bridge network. none No networking for this container. container: Reuse another container\u2019s network stack. host Use the host network stack. This mode is incompatible with port_bindings.","title":"host_config entries"},{"location":"3.0/config/host_config/#main-host_config-entries-descriptions","text":"","title":"Main host_config entries descriptions"},{"location":"3.0/config/host_config/#auto_remove","text":"The auto_remove is use to remove or not remove an abcdesktop container application or desktop. For example, when an application container is exited, do we need to remove the container, by running the docker rm command ? By default the auto_remove is True . But if you need to keep your application container to post-mortem debugging or to get some value, set this value to False . Set this value to False only to troubleshoot an application. In production this value MUST be set to True","title":"auto_remove"},{"location":"3.0/config/host_config/#cpu_period-cpu_quota","text":"cpu_period Specify the CPU CFS scheduler period, which is used alongside --cpu-quota. Defaults to 100000 microseconds (100 milliseconds). Most users do not change this from the default. cpu-quota impose a CPU CFS quota on the container. The number of microseconds per --cpu-period that the container is limited to before throttled. As such acting as the effective ceiling.","title":"cpu_period  cpu_quota"},{"location":"3.0/config/host_config/#privileged","text":"The privileged option runs a user container in privileged mode. When the operator executes docker run privileged, docker will enable access to all devices on the host as well as set some configuration in AppArmor or SELinux to allow the container nearly all the same access to the host as processes running outside containers on the host.allow a user to run a sudo command. The default value is False . You should only set privilege to True for troobleshooting. In production this value MUST be set to False.","title":"privileged"},{"location":"3.0/config/host_config/#ipc_mode","text":"The ipc_mode value is a string, the default value is 'shareable' . This option permits user's container to share the ipc namespace with application This option is used by pulseaudio service by default. value description '' Use daemon default. 'none' Own private IPC namespace. 'private' Own private IPC namespace. 'shareable' Own private IPC namespace, with a possibility to share it with other containers. 'host' Use the host system IPC namespace. If not specified, daemon default is used, which can either be \"private\" or \"shareable\", depending on the daemon version and configuration. IPC (POSIX/SysV IPC) namespace provides separation of named shared memory segments, semaphores and message queues. Shared memory segments are used to accelerate inter-process communication at memory speed, rather than through pipes or through the network stack. Shared memory is commonly used by databases and custom-built. If these types of applications are broken into multiple containers, you might need to share the IPC mechanisms of the containers, using shareable mode for the main (i.e. donor) container, and container: for other containers.","title":"ipc_mode"},{"location":"3.0/config/host_config/#security_opt","text":"The securityopt option allow to set the security_opt default value for a docker application container. security_opt is the docker parameter. To run without the default seccomp profile seccomp=unconfined To disable sudo command add no-new-privileges to the list. For example: [ 'no-new-privileges', 'seccomp=unconfined' ] Docker's default seccomp profile is a whitelist which specifies the calls that are allowed. The table below lists the significant (but not all) syscalls that are effectively blocked because they are not on the whitelist. The table includes the reason each syscall is blocked rather than white-listed. Syscall Description acct Accounting syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_PACCT . add_key Prevent containers from using the kernel keyring, which is not namespaced. bpf Deny loading potentially persistent bpf programs into kernel, already gated by CAP_SYS_ADMIN . clock_adjtime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clock_settime Time/date is not namespaced. Also gated by CAP_SYS_TIME . clone Deny cloning new namespaces. Also gated by CAP_SYS_ADMIN for CLONE_* flags, except CLONE_USERNS . create_module Deny manipulation and functions on kernel modules. Obsolete. Also gated by CAP_SYS_MODULE . delete_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . finit_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . get_kernel_syms Deny retrieval of exported kernel and module symbols. Obsolete. get_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . init_module Deny manipulation and functions on kernel modules. Also gated by CAP_SYS_MODULE . ioperm Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . iopl Prevent containers from modifying kernel I/O privilege levels. Already gated by CAP_SYS_RAWIO . kcmp Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . kexec_file_load Sister syscall of kexec_load that does the same thing, slightly different arguments. Also gated by CAP_SYS_BOOT . kexec_load Deny loading a new kernel for later execution. Also gated by CAP_SYS_BOOT . keyctl Prevent containers from using the kernel keyring, which is not namespaced. lookup_dcookie Tracing/profiling syscall, which could leak a lot of information on the host. Also gated by CAP_SYS_ADMIN . mbind Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . mount Deny mounting, already gated by CAP_SYS_ADMIN . move_pages Syscall that modifies kernel memory and NUMA settings. name_to_handle_at Sister syscall to open_by_handle_at . Already gated by CAP_DAC_READ_SEARCH . nfsservctl Deny interaction with the kernel nfs daemon. Obsolete since Linux 3.1. open_by_handle_at Cause of an old container breakout. Also gated by CAP_DAC_READ_SEARCH . perf_event_open Tracing/profiling syscall, which could leak a lot of information on the host. personality Prevent container from enabling BSD emulation. Not inherently dangerous, but poorly tested, potential for a lot of kernel vulns. pivot_root Deny pivot_root , should be privileged operation. process_vm_readv Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . process_vm_writev Restrict process inspection capabilities, already blocked by dropping CAP_SYS_PTRACE . ptrace Tracing/profiling syscall. Blocked in Linux kernel versions before 4.8 to avoid seccomp bypass. Tracing/profiling arbitrary processes is already blocked by dropping CAP_SYS_PTRACE , because it could leak a lot of information on the host. query_module Deny manipulation and functions on kernel modules. Obsolete. quotactl Quota syscall which could let containers disable their own resource limits or process accounting. Also gated by CAP_SYS_ADMIN . reboot Don't let containers reboot the host. Also gated by CAP_SYS_BOOT . request_key Prevent containers from using the kernel keyring, which is not namespaced. set_mempolicy Syscall that modifies kernel memory and NUMA settings. Already gated by CAP_SYS_NICE . setns Deny associating a thread with a namespace. Also gated by CAP_SYS_ADMIN . settimeofday Time/date is not namespaced. Also gated by CAP_SYS_TIME . stime Time/date is not namespaced. Also gated by CAP_SYS_TIME . swapon Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . swapoff Deny start/stop swapping to file/device. Also gated by CAP_SYS_ADMIN . sysfs Obsolete syscall. _sysctl Obsolete, replaced by /proc/sys. umount Should be a privileged operation. Also gated by CAP_SYS_ADMIN . umount2 Should be a privileged operation. Also gated by CAP_SYS_ADMIN . unshare Deny cloning new namespaces for processes. Also gated by CAP_SYS_ADMIN , with the exception of unshare --user . uselib Older syscall related to shared libraries, unused for a long time. userfaultfd Userspace page fault handling, largely needed for process migration. ustat Obsolete syscall. vm86 In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . vm86old In kernel x86 real mode virtual machine. Also gated by CAP_SYS_ADMIN . Read security_opt from the docker website.","title":"security_opt"},{"location":"3.0/config/host_config/#capabilities-cap_add-cap_drop","text":"This value is added to the oc.user docker container, or as securityContext attribut in kubernetes mode : securityContext: capabilities: desktop.capabilities For example { 'add': [ \"SYS_ADMIN\", \"SYS_PTRACE\" ] } Permit a container to call ptrace: \"SYS_PTRACE\": Trace arbitrary processes using ptrace \"SYS_ADMIN\": Perform a range of system administration operations. Read the docker run command informations Docker run reference By default, Docker has a default list of capabilities that are kept. The following table lists the Linux capability options which can be added or dropped. Capability Key Capability Description SETPCAP Modify process capabilities. SYS_MODULE Load and unload kernel modules. SYS_RAWIO Perform I/O port operations (iopl(2) and ioperm(2)). SYS_PACCT Use acct(2), switch process accounting on or off. SYS_ADMIN Perform a range of system administration operations. SYS_NICE Raise process nice value (nice(2), setpriority(2)) and change the nice value for arbitrary processes. SYS_RESOURCE Override resource Limits. SYS_TIME Set system clock (settimeofday(2), stime(2), adjtimex(2)); set real-time (hardware) clock. SYS_TTY_CONFIG Use vhangup(2); employ various privileged ioctl(2) operations on virtual terminals. MKNOD Create special files using mknod(2). AUDIT_WRITE Write records to kernel auditing log. AUDIT_CONTROL Enable and disable kernel auditing; change auditing filter rules; retrieve auditing status and filtering rules. MAC_OVERRIDE Allow MAC configuration or state changes. Implemented for the Smack LSM. MAC_ADMIN Override Mandatory Access Control (MAC). Implemented for the Smack Linux Security Module (LSM). NET_ADMIN Perform various network-related operations. SYSLOG Perform privileged syslog(2) operations. CHOWN Make arbitrary changes to file UIDs and GIDs (see chown(2)). NET_RAW Use RAW and PACKET sockets. DAC_OVERRIDE Bypass file read, write, and execute permission checks. FOWNER Bypass permission checks on operations that normally require the file system UID of the process to match the UID of the file. DAC_READ_SEARCH Bypass file read permission checks and directory read and execute permission checks. FSETID Don't clear set-user-ID and set-group-ID permission bits when a file is modified. KILL Bypass permission checks for sending signals. SETGID Make arbitrary manipulations of process GIDs and supplementary GID list. SETUID Make arbitrary manipulations of process UIDs. LINUX_IMMUTABLE Set the FS_APPEND_FL and FS_IMMUTABLE_FL i-node flags. NET_BIND_SERVICE Bind a socket to internet domain privileged ports (port numbers less than 1024). NET_BROADCAST Make socket broadcasts, and listen to multicasts. IPC_LOCK Lock memory (mlock(2), mlockall(2), mmap(2), shmctl(2)). IPC_OWNER Bypass permission checks for operations on System V IPC objects. SYS_CHROOT Use chroot(2), change root directory. SYS_PTRACE Trace arbitrary processes using ptrace(2). SYS_BOOT Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution. LEASE Establish leases on arbitrary files (see fcntl(2)). SETFCAP Set file capabilities. WAKE_ALARM Trigger something that will wake up the system. BLOCK_SUSPEND Employ features that can block system suspend. Further reference information is available on the capabilities(7) - Linux man page Set this value only to troubleshoot an application. In production this value MUST be set to an empty dict {}","title":"capabilities cap_add cap_drop"},{"location":"3.0/config/jira/","text":"JIRA configuration abcdesktop.io support JIRA JIRA option In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"Jira"},{"location":"3.0/config/jira/#jira-configuration","text":"abcdesktop.io support JIRA","title":"JIRA configuration"},{"location":"3.0/config/jira/#jira-option","text":"In od.config add the jira option. jira option is a dictionary with the entries : entry sample value url https://domainexample.atlassian.net/ project_id ABCD username account@domain.local apikey XXXXXXXXXXXXXXXXXXXX And fill the dictionary jira : { 'url': 'https://domainexample.atlassian.net/', 'project_id': 'ABCD', 'username': 'account@domain.local', 'apikey' : 'XXXXXXXXXXXXXXXXXXXX' } Then apply the new configuration file od.config by retrasting the daemon. When jira option is set, a new icon issue appears at the top. Click on the issue icon, a new window is appear. Fill Summary and Your Report values Then press the Send button. A notification message appears on the left top corner. Log into your jira server, and check your backlog Great you added a new issue tracking.","title":"JIRA option"},{"location":"3.0/config/language/","text":"Language entry in od.config The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US Language in abcdesktop.io oc.user The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header. Language in abcdesktop.io Applications abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session. Set the web browser's default language to en_US : The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language. Set the web browser's default language to fr_FR : You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Languages"},{"location":"3.0/config/language/#language-entry-in-odconfig","text":"The language option is a list of string. Each string is formatted as a locale variable. The locale is simply the language/country combination en + US = en_US","title":"Language entry in od.config"},{"location":"3.0/config/language/#language-in-abcdesktopio-ocuser","text":"The language list must match with the oc.user local packages all ready installed. If the language is not found, the default value is set to en_US The oc.user.18.04 is built-in with the default language package : language-pack-en language-pack-fr apt-get install -y \\ language-pack-en \\ language-pack-fr \\ && locale-gen \\ && apt-get clean The full supported language list is set by default language : [ 'af_ZA', 'am_ET', 'an_ES', 'ar_AE', 'ar_BH', 'ar_DZ', 'ar_EG', 'ar_IN', 'ar_IQ', 'ar_JO', 'ar_KW','ar_LB', 'ar_LY', 'ar_MA', 'ar_OM', 'ar_QA', 'ar_SA', 'ar_SD', 'ar_SY', 'ar_TN', 'ar_YE', 'as_IN', 'ast_ES', 'az_AZ', 'be_BY', 'bg_BG', 'bn_BD', 'bn_IN', 'bo_CN', 'bo_IN', 'br_FR', 'bs_BA', 'ca_AD', 'ca_ES', 'ca_FR', 'ca_IT', 'crh_UA', 'cs_CZ', 'cy_GB', 'da_DK', 'de_AT', 'de_BE', 'de_CH', 'de_DE', 'de_LI', 'de_LU', 'dz_BT', 'el_CY', 'el_GR', 'en_AG', 'en_AU', 'en_BW', 'en_CA', 'en_DK', 'en_GB', 'en_HK', 'en_IE', 'en_IN', 'en_NG', 'en_NZ', 'en_PH', 'en_SG', 'en_US', 'en_ZA', 'en_ZM', 'en_ZW', 'eo', 'eo_US', 'es_AR', 'es_BO', 'es_CL', 'es_CO', 'es_CR', 'es_CU', 'es_DO', 'es_EC', 'es_ES', 'es_GT', 'es_HN', 'es_MX', 'es_NI', 'es_PA', 'es_PE', 'es_PR', 'es_PY', 'es_SV', 'es_US', 'es_UY', 'es_VE', 'et_EE', 'eu_ES', 'eu_FR', 'fa_IR', 'fi_FI', 'fr_BE', 'fr_CA', 'fr_CH', 'fr_FR', 'fr_LU', 'ga_IE', 'gd_GB', 'gl_ES', 'gu_IN', 'he_IL', 'hi_IN', 'hr_HR', 'hu_HU', 'id_ID', 'is_IS', 'it_CH', 'it_IT', 'ja_JP', 'ka_GE', 'kk_KZ', 'km_KH', 'kn_IN', 'ko_KR', 'ku_TR', 'lt_LT', 'lv_LV', 'mai_IN', 'mk_MK', 'ml_IN', 'mn_MN', 'mr_IN', 'ms_MY', 'my_MM', 'nb_NO', 'nds_DE', 'nds_NL', 'ne_NP', 'nl_AW', 'nl_BE', 'nl_NL', 'nn_NO', 'oc_FR', 'or_IN', 'pa_IN', 'pa_PK', 'pl_PL', 'pt_BR', 'pt_PT', 'ro_RO', 'ru_RU', 'ru_UA', 'si_LK', 'sk_SK', 'sl_SI', 'sq_AL', 'sq_MK', 'sr_ME', 'sr_RS', 'sv_FI', 'sv_SE', 'ta_IN', 'ta_LK', 'te_IN', 'tg_TJ', 'th_TH', 'tr_CY', 'tr_TR', 'ug_CN', 'uk_UA', 'uz_UZ', 'vi_VN', 'xh_ZA', 'zh_CN', 'zh_HK', 'zh_SG', 'zh_TW' ] This list must match with the Accept-Language request HTTP header.","title":"Language in abcdesktop.io oc.user"},{"location":"3.0/config/language/#language-in-abcdesktopio-applications","text":"abcdesktop.io use the web browser language property to set the application's language. This list must match with the Accept-Language request HTTP header. If the language is not found, the default value is set to en_US . Hands-on: Change your web browser language, and run LibreOffice applications. The language setting use the web browser value. During this exercice you can keep the same abcdesktop.io users session.","title":"Language in abcdesktop.io Applications"},{"location":"3.0/config/language/#set-the-web-browsers-default-language-to-en_us","text":"The launch LibreOffice Writer. The menu is set to en_US LibreOffice Writer use English/US en_US language.","title":"Set the web browser's default language to en_US :"},{"location":"3.0/config/language/#set-the-web-browsers-default-language-to-fr_fr","text":"You can keep the same abcdesktop.io users session, you do not need to logout. The launch LibreOffice Writer. The menu is set to fr_FR LibreOffice Writer use French fr_FR language. Great you have change the language settings of applications running inside an abcdesktop docker container","title":"Set the web browser's default language to fr_FR :"},{"location":"3.0/config/linux_syslog_config/","text":"Modify /etc/rsyslog.conf By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\") Restart rsyslog Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Linux syslog config"},{"location":"3.0/config/linux_syslog_config/#modify-etcrsyslogconf","text":"By default syslog program is configured to log messages received over unix socket files. rsyslog configuration file need to be modified to accept messages over UDP. Edit /etc/rsyslog.conf file with your prefered linux text editor as sudo ou root: sudo vi /etc/rsyslog.conf Uncomment the following lines and save file : module(load=\"imudp\") input(type=\"imudp\" port=\"514\")","title":"Modify /etc/rsyslog.conf"},{"location":"3.0/config/linux_syslog_config/#restart-rsyslog","text":"Now we have enabled rsyslog over UDP on 514 port in config file, we have to restart rsyslog to take new parameters into account. Execute the following command as sudo: sudo systemctl restart rsyslog","title":"Restart rsyslog"},{"location":"3.0/config/logging/","text":"Logging configuration in od.config The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging"},{"location":"3.0/config/logging/#logging-configuration-in-odconfig","text":"The logging configuration is a dictionnary object. The logging configuration describes where and how log message information have to been send. logging dict use the python logging module logging module The syslog and graylog protocol messaging are supported too. The default features for each handlers are : handler Features console log message using a logging.StreamHandler to the stream: ext://sys.stdout formated as standard cherrypy_console log message using a logging.StreamHandler to the stream: ext://sys.stdout formatted as access cherrypy_access log message using a logging.StreamHandler to the file stream logs/access.log formatted as access cherrypy_trace log message using a logging.StreamHandler to the stream: logs/trace.log formatted as standard Sub modules used by od.py can log information too. Sub module Default Values docker.utils.config { 'level': 'INFO' }, urllib3.connectionpool { 'level': 'ERROR'}, The logging sample configuration : # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace' ], 'level': 'ERROR', 'propagate': False } } }","title":"Logging configuration in od.config"},{"location":"3.0/config/stack/","text":"stack entry in od.config stack.mode stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services stack.kubernetesdefaultdomain stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"stack entry in od.config"},{"location":"3.0/config/stack/#stack-entry-in-odconfig","text":"","title":"stack entry in od.config"},{"location":"3.0/config/stack/#stackmode","text":"stack.mode describes how abcdesktop.io can manage user's containers and application. If you run a docker only daemon, set the value to standalone . If you run a kubernetes cluster, set the value to kubernetes . stack.mode Description standalone Use a dockerd only, this is for personal usage kubernetes Use a kubernetes services","title":"stack.mode"},{"location":"3.0/config/stack/#stackkubernetesdefaultdomain","text":"stack.kubernetesdefaultdomain is the default domain name configured in kubernetes cluster. This value is type is string and only read if stack.mode is kubernetes . The default value is abcdesktop.svc.cluster.local If option value mongodb or memcached are set, the values are NOT overridden, and keep unchanged. If option value mongodb or memcached are set to None (by default), then stack.kubernetesdefaultdomain is used to complete the FQDN of mongodb and memcached servers name. This value is concatenated to the server hostname. Hostname FQDN mongodb mongodb.abcdesktop.svc.cluster.local memcached memcached.abcdesktop.svc.cluster.local The dns resolution need a running core-dns is the namespace kube-system stack.kubernetesdefaultdomain is used also if desktop.desktopuseinternalfqdn: True The pod name FQDN is built using the $podid .desktop. $stack.kubernetesdefaultdomain For example, by default : c8c7d38f-7621-40bb-a777-83f41b32733e.desktop.abcdesktop.svc.cluster.local","title":"stack.kubernetesdefaultdomain"},{"location":"3.0/config/sudo-kubernetes/","text":"How to get a root access inside a container running kubernetes abcdesktop ? run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"Sudo kubernetes"},{"location":"3.0/config/sudo-kubernetes/#how-to-get-a-root-access-inside-a-container-running-kubernetes-abcdesktop","text":"run the sudo command inside the user kubernetes pods balloon@43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e:~$ sudo bash sudo: effective uid is not 0, is /usr/bin/sudo on a file system with the 'nosuid' option set or an NFS file system without root privileges? Download the default abcdesktop.yaml Update the od.config file inside the configmap/abcdesktop-config Allow in the od.config section, update the option desktop.allowPrivilegeEscalation value to True # desktop.allowPrivilegeEscalation # value True or False # This value is only avalaible in kubernetes mode, # The desktop.allowPrivilegeEscalation allow a user to run a sudo command. # This option set the runtime privilege and Linux capabilities # The execve system call can grant a newly-started program privileges that its parent did not have, # such as the setuid or setgid Linux flags. # The default value is False # You should only set desktop.allowPrivilegeEscalation to run sudo command. # In production this value MUST be set to False desktop.allowPrivilegeEscalation: True Update the kubernetes config with the new abcdesktop.yaml % kubectl apply -f abcdesktop.yaml configmap/abcdesktop-config configured Restart the pyos pod List all pods % kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 17m daemonset-nginx-bbbvj 1/1 Running 0 37m daemonset-pyos-ckqx6 1/1 Running 0 39h memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Delete the pyos pod % kubectl delete pods daemonset-pyos-ckqx6 -n abcdesktop pod \"daemonset-pyos-ckqx6\" deleted Kubenestes restart the new pyos pod kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE 43c2ef50-a7b9-4e36-8a9d-8ac3ce80180e 3/3 Running 0 18m daemonset-nginx-bbbvj 1/1 Running 0 38m daemonset-pyos-fhbx5 1/1 Running 0 3s memcached-od-5bf65bf745-l62jr 1/1 Running 0 39h mongodb-od-656d85c49f-jx2zj 1/1 Running 0 39h openldap-od-5945946767-82qh4 1/1 Running 0 39h speedtest-od-58b9847b4b-gllrt 1/1 Running 0 39h Make sure that your user has done a logoff his pod, then login again and run terminal web shell The default balloon password is lmdpocpetit balloon@c182dc39-6a00-4869-8b01-2039f37c1eab:~$ sudo bash [sudo] password for balloon: root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# id uid=0(root) gid=0(root) groups=0(root),105(lpadmin) root@c182dc39-6a00-4869-8b01-2039f37c1eab:~# After the sudo command, you get a root level inside the shell of the users's pod In production this value should be set to False","title":"How to get a root access inside a container running kubernetes abcdesktop ?"},{"location":"3.0/config/syslog/","text":"Syslog configuration in od.config Add syslog server support 'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication. Start syslog container Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0' Modify logging entry To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file) Add Syslog Handler In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1 Add loggers handlers entries In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } Resulting Modified sample configuration file # # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } } Restart Pods To restart Pods, we will delete and recreate all pods Delete pods To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml Create pods To create pods, execute the following command: kubectl create -f abcdesktop.yaml Verify syslogs At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Syslog"},{"location":"3.0/config/syslog/#syslog-configuration-in-odconfig","text":"","title":"Syslog configuration in od.config"},{"location":"3.0/config/syslog/#add-syslog-server-support","text":"'filters': [ 'odcontext' ], syslog is a protocol for tracking and logging system messages in Linux. Applications use syslog to export all their error and status messages to the files in the /var/log directory. syslog uses the client-server model; a client transmits a text message to the server (receiver). The server is commonly called syslogd, syslog daemon, or syslog server. syslog uses the User Datagram Protocol (UDP) port 514 for communication.","title":"Add syslog server support"},{"location":"3.0/config/syslog/#start-syslog-container","text":"Those running linux can simply modify their syslog configuration file following linux syslog config steps For others (Windows/Mac) or those that don't want to modify their syslog config, you can simply run the following command : docker run -it -p 514:514/udp --name syslog-ng balabit/syslog-ng:latest -edv [2020-04-07T12:29:39.485318] Accepting connections; addr='AF_INET(0.0.0.0:514)' [2020-04-07T12:29:39.485752] You have a TLS enabled source without a X.509 keypair. Make sure you have tls(key-file() and cert-file()) options, TLS handshake to this source will fail; location='/etc/syslog-ng/syslog-ng.conf:21:2' [2020-04-07T12:29:39.485964] Accepting connections; addr='AF_INET(0.0.0.0:6514)' [2020-04-07T12:29:39.486179] Accepting connections; addr='AF_INET(0.0.0.0:601)' [2020-04-07T12:29:39.486600] Running application hooks; hook='1' [2020-04-07T12:29:39.486621] Running application hooks; hook='6' [2020-04-07T12:29:39.486674] syslog-ng starting up; version='3.26.1' [2020-04-07T12:29:39.486850] Running application hooks; hook='2' [2020-04-07T12:39:39.587220] Log statistics; processed='global(payload_reallocs)=0', processed='global(sdata_updates)=0', queued='global(scratch_buffers_bytes)=0', processed='src.internal(s_local#0)=0', stamp='src.internal(s_local#0)=0', processed='destination(d_local)=0', processed='source(s_local)=0', processed='source(s_network)=0', processed='global(msg_clones)=0', processed='center(received)=0', queued='global(scratch_buffers_count)=0', processed='center(queued)=0'","title":"Start syslog container"},{"location":"3.0/config/syslog/#modify-logging-entry","text":"To let abcdesktop log events in syslog trought UDP, we will have to modify abcdesktop configuration file to add an handler and 'syslog' entry in general logger and cherrypy.error logger. (syslog formatter is already in sample file)","title":"Modify logging entry"},{"location":"3.0/config/syslog/#add-syslog-handler","text":"In handlers entry add the following lines: , 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } Replace 192.168.0.52 ip address by your local IP Addresse. You can get your local IP address using the following command: hostname -I | cut -d ' ' -f1","title":"Add Syslog Handler"},{"location":"3.0/config/syslog/#add-loggers-handlers-entries","text":"In general loggers (key '' in loggers entry) and 'cherrypy.error' add syslog' handler in handlers list: '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'INFO' } 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False }","title":"Add loggers handlers entries"},{"location":"3.0/config/syslog/#resulting-modified-sample-configuration-file","text":"# # logging configuration # come from https://docs.python.org/3.8/library/logging.config.html # need double %% to escape % # # graylog https://github.com/severb/graypy # use handler class name as # graypy.GELFUDPHandler - UDP log forwarding # graypy.GELFTCPHandler - TCP log forwarding # graypy.GELFTLSHandler - TCP log forwarding with TLS support # graypy.GELFHTTPHandler - HTTP log forwarding # graypy.GELFRabbitHandler - RabbitMQ log forwarding logging: { 'version': 1, 'disable_existing_loggers': False, 'formatters': { 'access': { 'format': '%%(message)s - user: %%(userid)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'standard': { 'format': '%%(asctime)s %%(module)s [%%(levelname)-7s] %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'syslog': { 'format': '%%(asctime)s %%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s', 'datefmt': '%%Y-%%m-%%d %%H:%%M:%%S' }, 'graylog': { 'format': '%%(levelname)s %%(module)s %%(process)d %%(name)s.%%(funcName)s:%%(userid)s %%(message)s' } }, 'filters': { 'odcontext': { '()': 'oc.logging.OdContextFilter' } }, 'handlers': { 'console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'stream': 'ext://sys.stdout' }, 'cherrypy_console': { 'class': 'logging.StreamHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'stream': 'ext://sys.stdout' }, 'cherrypy_access': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'access', 'filename': 'logs/access.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8' }, 'cherrypy_trace': { 'class': 'logging.handlers.RotatingFileHandler', 'filters': [ 'odcontext' ], 'formatter': 'standard', 'filename': 'logs/trace.log', 'maxBytes': 10485760, 'backupCount': 20, 'encoding': 'utf8', 'mode': 'w' }, 'syslog': { 'class': 'logging.handlers.SysLogHandler', 'filters': [ 'odcontext' ], 'formatter': 'syslog', 'socktype': 2, 'address' : [ '192.168.0.52', 514 ] } }, 'loggers': { '': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'DEBUG' }, 'docker.utils.config': { 'level': 'INFO' }, 'urllib3.connectionpool': { 'level': 'ERROR' }, 'cherrypy.access': { 'handlers': [ 'cherrypy_access' ], 'level': 'INFO', 'propagate': False }, 'cherrypy.error': { 'handlers': [ 'console', 'cherrypy_trace', 'syslog' ], 'level': 'ERROR', 'propagate': False } } }","title":"Resulting Modified sample configuration file"},{"location":"3.0/config/syslog/#restart-pods","text":"To restart Pods, we will delete and recreate all pods","title":"Restart Pods"},{"location":"3.0/config/syslog/#delete-pods","text":"To delete pods, execute the following command: kubectl delete -f abcdesktop.yaml","title":"Delete pods"},{"location":"3.0/config/syslog/#create-pods","text":"To create pods, execute the following command: kubectl create -f abcdesktop.yaml","title":"Create pods"},{"location":"3.0/config/syslog/#verify-syslogs","text":"At this state, new abcdesktop logging configuration should be applied. We can now verify syslog logs: tail /var/log/syslog If you see some lines with 'INFO' Level, you probably see abcdesktop logs in syslog ! If not try to do actions in abcdesktop (open session, launch new application, close session) and apply the tail command again.","title":"Verify syslogs"},{"location":"3.0/config/webrtc/","text":"Sound server configuration By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser pulseaudio http stream (by default) By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink webrtc gateway enable To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats Requirements a janus server add webrtc configuration in od.config file Install a janus server Install janus Install a janus service from meetecho.com on a server apt-get install janus Add X509 certificats Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" } add the webrtc entry in od.config Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } } webrtc.enable webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio . webrtc.server webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"Pulseaudio"},{"location":"3.0/config/webrtc/#sound-server-configuration","text":"By default abcdesktop use the module-http-protocol-tcp from pulseaudio sound server to send wav data to the web browser","title":"Sound server configuration"},{"location":"3.0/config/webrtc/#pulseaudio-http-stream-by-default","text":"By default, abcdesktop uses the pulseaudio http stream and play wave data (poor sound quality but works in https only) In terminal webshell run the command : pactl -s /tmp/.pulse.sock list short modules balloon@bac345323f37:/var/log/desktop$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 rate=11025'\" 2 module-null-sink sink_name=s16_1_22050 format=s16be channels=1 rate=22050 sink_properties=\"device.description='default format=s16be c=1 rate=22050'\" 3 module-null-sink sink_name=s16_1_44100 format=s16be channels=1 rate=44100 sink_properties=\"device.description='default format=s16be c=1 rate=44100'\" 4 module-null-sink sink_name=ulaw8_1_8000 format=ulaw channels=1 rate=8000 sink_properties=\"device.description='default format=ulaw c=1 rate=8000'\" 5 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 6 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 7 module-http-protocol-tcp listen=172.21.0.5 8 module-always-sink","title":"pulseaudio http stream (by default)"},{"location":"3.0/config/webrtc/#webrtc-gateway-enable","text":"To get a better sound quality, you can use a webrtc gateway and send a rtp stream to the webrtc gateway. abcdesktop plays sound using the web browser webrtc stack (good sound quality) abcdesktop update the pulseaudio configuration, and add module-rtp-send . The module-rtp-send pusleaudio send to the destination_ip (in this example 1.2.3.4) pactl -s /tmp/.pulse.sock list short modules balloon@414e3db9-60d8-4f92-a356-a3a74833990c:~$ pactl -s /tmp/.pulse.sock list short modules 0 module-augment-properties 1 module-null-sink sink_name=rtp format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink'\" 2 module-native-protocol-unix auth-group=balloon socket=/tmp/.pulse.sock 3 module-always-sink 4 module-rtp-send source=rtp.monitor destination_ip=1.2.3.4 port=5119 channels=1 format=alaw The sink_name is rtp, and the source for the module-rtp-send is rtp.monitor. The default source is rtp.monitor Source # State: RUNNING Name: rtp.monitor Description: Monitor of RTP Multicast Sink Driver: module-null-sink.c Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Owner Module: 5 Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Base Volume: 65536 / 100% / 0.00 dB Monitor of Sink: rtp Latency: 0 usec, configured 160000 usec Flags: DECIBEL_VOLUME LATENCY Properties: device.description = \"Monitor of RTP Multicast Sink\" device.class = \"monitor\" device.icon_name = \"audio-input-microphone\" Formats: pcm The default output is Source Output #0 Driver: module-rtp-send.c Owner Module: 9 Client: n/a Source: 4 Sample Specification: aLaw 1ch 8000Hz Channel Map: mono Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" Corked: no Mute: no Volume: mono: 65536 / 100% / 0.00 dB balance 0.00 Buffer Latency: 0 usec Source Latency: 0 usec Resample method: n/a Properties: media.name = \"RTP Monitor Stream\" rtp.source = \"0.0.0.0\" rtp.destination = \"1.2.3.4\" rtp.mtu = \"1280\" rtp.port = \"5119\" rtp.ttl = \"1\" By default, the format is pcm Format: pcm, format.sample_format = \"\\\"aLaw\\\"\" format.rate = \"8000\" format.channels = \"1\" format.channel_map = \"\\\"mono\\\"\" To change the default format update the values in od.config file. 'audiopt': 8, 'audiortpmap': 'PCMA/8000', To get the 'audiopt' and 'audiortpmap' values, read the web pages meetecho streaming plugin documentation RTP payload formats","title":"webrtc gateway enable"},{"location":"3.0/config/webrtc/#requirements","text":"a janus server add webrtc configuration in od.config file","title":"Requirements"},{"location":"3.0/config/webrtc/#install-a-janus-server","text":"","title":"Install a janus server"},{"location":"3.0/config/webrtc/#install-janus","text":"Install a janus service from meetecho.com on a server apt-get install janus","title":"Install janus"},{"location":"3.0/config/webrtc/#add-x509-certificats","text":"Add X509 certificats in your janus.jcfg configuration. Certificate and key to use for DTLS (and passphrase if needed). If missing, Janus will autogenerate a self-signed certificate to use. Notice that self-signed certificates are fine for the purpose of WebRTC DTLS connectivity, for the time being, at least until Identity Providers are standardized and implemented in browsers. certificates: { cert_pem = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\" cert_key = \"/etc/ssl/private/ssl-cert-snakeoil.key\" cert_pwd = \"secretpassphrase\" }","title":"Add X509 certificats"},{"location":"3.0/config/webrtc/#add-the-webrtc-entry-in-odconfig","text":"Update the od.config file, for example : # WebRTC Janus config webrtc.enable : True webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"add the webrtc entry in od.config"},{"location":"3.0/config/webrtc/#webrtcenable","text":"webrtc.enable is a boolean. The default value is False . Set this value to True to enable webrtc services for pulseaudio .","title":"webrtc.enable"},{"location":"3.0/config/webrtc/#webrtcserver","text":"webrtc.server is a dict. The default value is None . Set all dictionnary values to enable webrtc access for pulseaudio and for the web browser client. The hostip value, is used by pluse audio to configure the rtp stream. This value must be an ip address (do not set the fqdn). This can be an internal ip address, and is only to configure pulseaudio module and describe how to send stream data to reach the webrtc gateway. 'hostip': '1.2.3.4' The host value, is used by the browser to reach the webrtc gateway and get the rtp stream. This value must(should) be a fqdn . This fqdn is used by the web browser. webrtc.server : { 'janus.domain.local' : { 'schema' : 'http', 'host': 'janus.domain.local', 'hostip': '1.2.3.4', 'port': 8088, 'audiopt': 8, 'audiortpmap': 'PCMA/8000', 'apisecret': 'janusrocks', 'adminkey': 'supersecret', 'startport': 5100 } }","title":"webrtc.server"},{"location":"3.0/config/controllers/manager/","text":"ManagerController HTTP Request The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object buildapplist buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}} updateactivedirectorysite Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite garbagecollector Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"Manager"},{"location":"3.0/config/controllers/manager/#managercontroller","text":"","title":"ManagerController"},{"location":"3.0/config/controllers/manager/#http-request","text":"The http request path is /API/manager Path Params Response type /API/manager/buildapplist None Json object /API/manager/updateactivedirectorysite None Json object /API/manager/garbagecollector expirein=, force=False Json object","title":"HTTP Request"},{"location":"3.0/config/controllers/manager/#buildapplist","text":"buildapplist ask pyos to list all abcdesktop.io docker image. Each docker image must have the specified label type=apps . abcdesktop.io Params Type Description None None None example : curl http://localhost/API/manager/buildapplist Return the complete array if json images objects ready to run. {\"abcdesktopio/writer.d:latest\": {\"id\": \"abcdesktopio/writer.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-writer\", \"name\": \"Writer\", \"icon\": \"libreoffice-writer.svg\", \"keyword\": \"libre office writer,office,writer\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--writer\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Writer\", \"mimetype\": [\"application/vnd.oasis.opendocument.text\", \"application/vnd.oasis.opendocument.text-template\", \"application/vnd.oasis.opendocument.text-web\", \"application/vnd.oasis.opendocument.text-master\", \"application/vnd.oasis.opendocument.text-master-template\", \"application/vnd.sun.xml.writer\", \"application/vnd.sun.xml.writer.template\", \"application/vnd.sun.xml.writer.global\", \"application/msword\", \"application/vnd.ms-word\", \"application/x-doc\", \"application/x-hwp\", \"application/rtf\", \"text/rtf\", \"application/vnd.wordperfect\", \"application/wordperfect\", \"application/vnd.lotus-wordpro\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.ms-word.document.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.template.macroenabled.12\", \"application/vnd.stardivision.writer-global\", \"application/x-extension-txt\", \"application/x-t602\", \"application/vnd.oasis.opendocument.text-flat-xml\", \"application/x-fictionbook+xml\", \"application/macwriteii\", \"application/x-aportisdoc\", \"application/prs.plucker\", \"application/vnd.palm\", \"application/clarisworks\", \"application/x-sony-bbeb\", \"application/x-abiword\", \"application/x-iwork-pages-sffpages\", \"application/x-mswrite\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-writer.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"sxw\", \"stw\", \"doc\", \"dot\", \"wps\", \"rtf\", \"602\", \"wpd\", \"docx\", \"docm\", \"dotx\", \"dotm\", \"abw\", \"zabw\", \"pages\", \"dummy\", \"lrf\", \"cwk\", \"hqx\", \"fb2\", \"mw\", \"mcw\", \"mwd\", \"pdb\", \"wn\"], \"legacyfileextensions\": [\"odf\", \"ott\", \"fodt\", \"uot\"]}, \"abcdesktopio/math.d:latest\": {\"id\": \"abcdesktopio/math.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-math\", \"name\": \"Math\", \"icon\": \"libreoffice-math.svg\", \"keyword\": \"libre office math,office,math\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--math\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Math\", \"mimetype\": [\"application/vnd.oasis.opendocument.formula\", \"application/vnd.sun.xml.math\", \"application/vnd.oasis.opendocument.formula-template\", \"text/mathml\", \"application/mathml+xml\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-math.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odf\", \"odc\"], \"legacyfileextensions\": [\"odf\", \"odc\"]}, \"abcdesktopio/impress.d:latest\": {\"id\": \"abcdesktopio/impress.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-impress\", \"name\": \"Impress\", \"icon\": \"libreoffice-impress.svg\", \"keyword\": \"libre office impress,office,impress\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--impress\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Impress\", \"mimetype\": [\"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.presentation-template\", \"application/vnd.sun.xml.impress\", \"application/vnd.sun.xml.impress.template\", \"application/mspowerpoint\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.ms-powerpoint.presentation.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.ms-powerpoint.template.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.presentationml.slide\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\", \"application/vnd.oasis.opendocument.presentation-flat-xml\", \"application/x-iwork-keynote-sffkey\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-impress.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odp\", \"pot\", \"potm\", \"potx\", \"pps\", \"ppsx\", \"ppt\", \"pptx\", \"pptm\"], \"legacyfileextensions\": [\"odp\"]}, \"abcdesktopio/calc.d:latest\": {\"id\": \"abcdesktopio/calc.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-calc\", \"name\": \"Calc\", \"icon\": \"libreoffice-calc.svg\", \"keyword\": \"libre office calc,office,calc\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"office\", \"args\": \"--calc\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": \"dock\", \"displayname\": \"Calc\", \"mimetype\": [\"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.spreadsheet-template\", \"application/vnd.sun.xml.calc\", \"application/vnd.sun.xml.calc.template\", \"application/msexcel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel.sheet.macroenabled.12\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.template.macroenabled.12\", \"application/vnd.ms-excel.sheet.binary.macroenabled.12\", \"text/csv\", \"application/x-dbf\", \"text/spreadsheet\", \"application/csv\", \"application/excel\", \"application/tab-separated-values\", \"application/vnd.lotus-1-2-3\", \"application/vnd.oasis.opendocument.chart\", \"application/vnd.oasis.opendocument.chart-template\", \"application/x-dbase\", \"application/x-dos_ms_excel\", \"application/x-excel\", \"application/x-msexcel\", \"application/x-ms-excel\", \"application/x-quattropro\", \"application/x-123\", \"text/comma-separated-values\", \"text/tab-separated-values\", \"text/x-comma-separated-values\", \"text/x-csv\", \"application/vnd.oasis.opendocument.spreadsheet-flat-xml\", \"application/vnd.ms-works\", \"application/x-iwork-numbers-sffnumbers\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-calc.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"ods\", \"ots\", \"sxc\", \"stc\", \"fods\", \"uos\", \"uof\", \"xml\", \"xlsx\", \"xlsm\", \"xltm\", \"xltx\", \"xlsb\", \"xls\", \"xlm\", \"xlc\", \"xlw\", \"xlk\", \"xlt\", \"dif\", \"dbf\", \"htm\", \"html\", \"wk1\", \"wks\", \"123\", \"wb2\", \"rtf\", \"slk\", \"sylk\", \"csv\", \"numbers\", \"dummy\", \"cwk\", \"wps\", \"wk3\", \"wq1\", \"wq2\"], \"legacyfileextensions\": [\"ods\", \"ots\", \"csv\"]}, \"abcdesktopio/base.d:latest\": {\"id\": \"abcdesktopio/base.d:latest\", \"rules\": null, \"acl\": null, \"launch\": \"libreoffice.libreoffice-base\", \"name\": \"Base\", \"icon\": \"libreoffice-base.svg\", \"keyword\": \"libre office base,office,base\", \"uniquerunkey\": \"libreoffice\", \"cat\": \"development\", \"args\": \"--base\", \"execmode\": null, \"memory\": null, \"shm_size\": null, \"oomkilldisable\": null, \"showinview\": null, \"displayname\": \"Base\", \"mimetype\": [\"application/vnd.oasis.opendocument.database\", \"application/vnd.sun.xml.base\"], \"path\": \"/usr/lib/libreoffice/program/soffice\", \"desktopfile\": \"libreoffice-base.desktop\", \"executablefilename\": \"soffice\", \"usedefaultapplication\": true, \"fileextensions\": [\"odb\"], \"legacyfileextensions\": [\"odb\"]}}","title":"buildapplist"},{"location":"3.0/config/controllers/manager/#updateactivedirectorysite","text":"Params Type Description None None None example : curl http://localhost/API/manager/updateactivedirectorysite","title":"updateactivedirectorysite"},{"location":"3.0/config/controllers/manager/#garbagecollector","text":"Params Type Description expirein integer number in seconds since the container create date time force boolean garbage the container even if a user is connected example : curl \"http://localhost/API/manager/garbagecollector?expirein=9473\" curl \"http://localhost/API/manager/garbagecollector?expirein=9473&force=True\"","title":"garbagecollector"},{"location":"3.0/setup/k8slinuxinstallation/","text":"Linux Requirements Packages installation To install Kubernetes on your GNU/Linux, you can read the Kubernetes setup guide on the kubernetes.io web site. Install Kubernetes on Linux Step 0: Disable swap Execute command swapoff and sed command to disable swap. swapoff -a sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab Load the overlay and br_netfilter kernel modules modprobe overlay modprobe br_netfilter Create the containerd.conf to load modules cat >>/etc/modules-load.d/containerd.conf <<EOF overlay br_netfilter EOF Step 1: Install containerd Install the containerd utility and required packages on node by running the following command as sudo in a Terminal : Install common packages apt-get install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates Add source curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg add-apt-repository \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" You will be prompted with a Y/n option in order to proceed with the installation. apt update apt install -y containerd.io containerd will then be installed on your system. Step 2: Configure containerd Configure containerd to use systemd as cgroup . containerd config default > /etc/containerd/config.toml sed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml Enable the containerd utility by running the following command : systemctl restart containerd systemctl enable containerd Step 3: Add the Kubernetes signing key Run the following command in order to get the Kubernetes signing key: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - Step 4: Add Xenial Kubernetes Repository Run the following commands in order to add the Xenial Kubernetes repository: echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list apt-get update Step 5: Install Kubernetes Create kubernetes.conf for sysctl.d cat >>/etc/sysctl.d/kubernetes.conf <<EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 EOF Reload your system sysctl changes sysctl --system Install the packages kubelet kubeadm kubectl apt install -y kubelet kubeadm kubectl K8s utilities will then be installed on your system. You can check the version number of kubeadm and also verify the installation through the following command: kubeadm version -o yaml clientVersion: buildDate: \"2022-10-12T10:55:36Z\" compiler: gc gitCommit: 434bfd82814af038ad94d62ebe59b133fcb50506 gitTreeState: clean gitVersion: v1.25.3 goVersion: go1.19.2 major: \"1\" minor: \"25\" platform: linux/amd64","title":"Install Kubernetes on GNU/Linux"},{"location":"3.0/setup/k8slinuxinstallation/#linux-requirements","text":"","title":"Linux Requirements"},{"location":"3.0/setup/k8slinuxinstallation/#packages-installation","text":"To install Kubernetes on your GNU/Linux, you can read the Kubernetes setup guide on the kubernetes.io web site.","title":"Packages installation"},{"location":"3.0/setup/k8slinuxinstallation/#install-kubernetes-on-linux","text":"","title":"Install Kubernetes on Linux"},{"location":"3.0/setup/k8slinuxinstallation/#step-0-disable-swap","text":"Execute command swapoff and sed command to disable swap. swapoff -a sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab Load the overlay and br_netfilter kernel modules modprobe overlay modprobe br_netfilter Create the containerd.conf to load modules cat >>/etc/modules-load.d/containerd.conf <<EOF overlay br_netfilter EOF","title":"Step 0: Disable swap"},{"location":"3.0/setup/k8slinuxinstallation/#step-1-install-containerd","text":"Install the containerd utility and required packages on node by running the following command as sudo in a Terminal : Install common packages apt-get install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates Add source curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg add-apt-repository \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" You will be prompted with a Y/n option in order to proceed with the installation. apt update apt install -y containerd.io containerd will then be installed on your system.","title":"Step 1: Install containerd"},{"location":"3.0/setup/k8slinuxinstallation/#step-2-configure-containerd","text":"Configure containerd to use systemd as cgroup . containerd config default > /etc/containerd/config.toml sed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml Enable the containerd utility by running the following command : systemctl restart containerd systemctl enable containerd","title":"Step 2: Configure containerd"},{"location":"3.0/setup/k8slinuxinstallation/#step-3-add-the-kubernetes-signing-key","text":"Run the following command in order to get the Kubernetes signing key: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -","title":"Step 3: Add the Kubernetes signing key"},{"location":"3.0/setup/k8slinuxinstallation/#step-4-add-xenial-kubernetes-repository","text":"Run the following commands in order to add the Xenial Kubernetes repository: echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list apt-get update","title":"Step 4: Add Xenial Kubernetes Repository"},{"location":"3.0/setup/k8slinuxinstallation/#step-5-install-kubernetes","text":"Create kubernetes.conf for sysctl.d cat >>/etc/sysctl.d/kubernetes.conf <<EOF net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 EOF Reload your system sysctl changes sysctl --system Install the packages kubelet kubeadm kubectl apt install -y kubelet kubeadm kubectl K8s utilities will then be installed on your system. You can check the version number of kubeadm and also verify the installation through the following command: kubeadm version -o yaml clientVersion: buildDate: \"2022-10-12T10:55:36Z\" compiler: gc gitCommit: 434bfd82814af038ad94d62ebe59b133fcb50506 gitTreeState: clean gitVersion: v1.25.3 goVersion: go1.19.2 major: \"1\" minor: \"25\" platform: linux/amd64","title":"Step 5: Install Kubernetes"},{"location":"3.0/setup/kubernetes_abcdesktop/","text":"abcdesktop in kubernetes mode abcdesktop release 3.x support only kubernetes mode. All applications containers can be distributed on different hosts. The abcdesktop infrastructure is using the contianers : Container Role Image From oc.pyos API Server abcdesktopio/oc.pyos:3.0 abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx:3.0 abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached Requirements You need to have a kubernetes cluster ready to run kubectl or microk8s command-line tool must be configured to communicate with your cluster. openssl and curl command line must be installed too. ctr should be install to download abcdesktopio images from docker.io/abcdesktopio You can run the Quick installation process or choose the Manually installation step by step Quick installation (Linux or macOS) Quick installation can be run on Linux or macOS operation system. Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install-3.0.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption download the default configuration file od.config create all services , pods , secrets and configmaps download user's core images: oc.user , oc.cupsd , oc.pulseaudio ( if ctr command line exists ) Manually installation step by step (Linux, macOS or Windows) The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server. Install abcdesktop Step 1: Create abcdesktop namespace We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands. Step 2: Secure abcdesktop JWT exchange User JWT is signed. So we need to define a (private, public) RSA keys for signing. Desktop JWT is encrypted AND signed. So we need to define a (private, public) RSA keys for signing, and a (private, public) RSA keys to encrypt data. The JWT payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JWT payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script . The exported the public key need the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python 3.x jwt module and lua jwt lib . The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop Verify Secrets You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s Step 3: Download user pod images Create a pod user to make sure that Kubernetes will find the docker images at startup time. kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/poduser.yaml You should read on stdout pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 created You can wait for user pod is Ready , this while take a while, for container images are downloading. kubectl wait --for=condition=Ready pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 -n abcdesktop --timeout=-1s pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 condition met You can delete the user pod anonymous-74bea267-8197-4b1d-acff-019b24e778c5 . This container images are downloaded. kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/poduser.yaml Step 4: Download and create the abcdesktop config file Download the od.config file. This is the main file for pyos control plane. curl https://raw.githubusercontent.com/abcdesktopio/conf/main/reference/od.config.3.0 --output od.config Create the config map abcdesktop-config in the abcdesktop namespace kubectl create configmap abcdesktop-config --from-file=od.config -n abcdesktop You should read on sdtout configmap/abcdesktop-config created Step 5: Create the abcdesktop pods and services abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop-3.0.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created Verify Pods Once the pods are created, all pods should be in Running status. For the first time, please wait for downloading all container images. It can take a while. kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s Connect your local abcdesktop Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container image abcdesktopio/oc.user.kubernetes.18.04:3.0 . Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some container applications. Read the chapter add kubernetes contain Troubleshoot All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry. Verify Daemonsets kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 166m daemonset-pyos 1 1 1 1 1 <none> 166m Verify service ports kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 166m memcached ClusterIP 10.97.84.163 <none> 11211/TCP 166m mongodb ClusterIP 10.97.119.76 <none> 27017/TCP 166m nginx NodePort 10.108.80.216 <none> 80:30443/TCP 166m openldap ClusterIP 10.104.244.6 <none> 389/TCP,636/TCP 166m pyos ClusterIP 10.111.15.51 <none> 8000/TCP 166m speedtest ClusterIP 10.106.254.126 <none> 80/TCP 166m Verify cluster roles kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/ephemeralcontainers [] [] [create get list watch update patch delete] pods/exec [] [] [create get list watch update patch delete] configmaps [] [] [get list watch create update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] events [] [] [get list watch] pods/log [] [] [get list watch] endpoints [] [] [get list] nodes [] [] [get watch list] Verify Cluster Role Bindind kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop Read pyos logs kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop Rollout daemonset To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Setup abcdesktop for Kubernetes"},{"location":"3.0/setup/kubernetes_abcdesktop/#abcdesktop-in-kubernetes-mode","text":"abcdesktop release 3.x support only kubernetes mode. All applications containers can be distributed on different hosts. The abcdesktop infrastructure is using the contianers : Container Role Image From oc.pyos API Server abcdesktopio/oc.pyos:3.0 abcdesktopio oc.nginx web server proxy abcdesktopio/oc.nginx:3.0 abcdesktopio oc.speedtest http benchmarch abcdesktopio/oc.speedtest LibreSpeed oc.mongo json database server mongo MongoDB memcached cache server memcached Memcached","title":"abcdesktop in kubernetes mode"},{"location":"3.0/setup/kubernetes_abcdesktop/#requirements","text":"You need to have a kubernetes cluster ready to run kubectl or microk8s command-line tool must be configured to communicate with your cluster. openssl and curl command line must be installed too. ctr should be install to download abcdesktopio images from docker.io/abcdesktopio You can run the Quick installation process or choose the Manually installation step by step","title":"Requirements"},{"location":"3.0/setup/kubernetes_abcdesktop/#quick-installation-linux-or-macos","text":"Quick installation can be run on Linux or macOS operation system. Download and extract the latest release automatically (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/install-3.0.sh | bash The command above downloads the latest release (numerically) of abcdesktop.io. The quick installation process runs the all commands step by step: create the abcdesktop namespace build all rsa keys pairs for jwt signing and payload encryption download the default configuration file od.config create all services , pods , secrets and configmaps download user's core images: oc.user , oc.cupsd , oc.pulseaudio ( if ctr command line exists )","title":"Quick installation (Linux or macOS)"},{"location":"3.0/setup/kubernetes_abcdesktop/#manually-installation-step-by-step-linux-macos-or-windows","text":"The following commands will let you prepare and build abcdesktop plateform on the master node. All applications run on a single server.","title":"Manually installation step by step (Linux, macOS or Windows)"},{"location":"3.0/setup/kubernetes_abcdesktop/#install-abcdesktop","text":"","title":"Install abcdesktop"},{"location":"3.0/setup/kubernetes_abcdesktop/#step-1-create-abcdesktop-namespace","text":"We will create abcdesktop namespace and set it as default : # First create the abcdesktop namespace kubectl create namespace abcdesktop You should read on the standard output namespace/abcdesktop created Option : To use the namespace abcdestkop as default namespace kubectl config set-context $(kubectl config current-context) --namespace=abcdesktop All kubectl commands will be executed with abcdesktop namespace. This will avoid to add \"-n abcdesktop\" to all commands.","title":"Step 1: Create abcdesktop namespace"},{"location":"3.0/setup/kubernetes_abcdesktop/#step-2-secure-abcdesktop-jwt-exchange","text":"User JWT is signed. So we need to define a (private, public) RSA keys for signing. Desktop JWT is encrypted AND signed. So we need to define a (private, public) RSA keys for signing, and a (private, public) RSA keys to encrypt data. The JWT payload is encrypted with the abcdesktop jwt desktop payload private by pyos The JWT payload is decrypted with the abcdesktop jwt desktop payload public keys by nginx. Please use the payload private as private key, and the payload public as private key. Do not publish the public key. This public key must stay private, this is a special case, this is not stupid, it's only a more secure option. The JSON Web Tokens payload is signed with the abcdesktop jwt desktop signing private keys The JSON Web Tokens payload is verified with the abcdesktop jwt desktop signing public keys. The JSON Web Tokens user is signed with the abcdesktop jwt user signing private keys by pyos. The JSON Web Tokens user is verified with the abcdesktop jwt user signing public keys by pyos As multiple pods of pyos can run simultaneously, the same private and public keys value are stored into kubernetes secret. The abcdesktop jwt desktop payload public key is read by nginx lua script . The exported the public key need the RSAPublicKey_out option, to use the RSAPublicKey format. The RSAPublicKey format make key file format compatible between python 3.x jwt module and lua jwt lib . The following commands will let you create all necessary keys : # build rsa kay pairs for jwt payload # 1024 bits is a smallest value, change here if need but use more than 1024 openssl genrsa -out abcdesktop_jwt_desktop_payload_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_payload_private_key.pem -outform PEM -pubout -out _abcdesktop_jwt_desktop_payload_public_key.pem openssl rsa -pubin -in _abcdesktop_jwt_desktop_payload_public_key.pem -RSAPublicKey_out -out abcdesktop_jwt_desktop_payload_public_key.pem # build rsa kay pairs for the desktop jwt signing openssl genrsa -out abcdesktop_jwt_desktop_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_desktop_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_desktop_signing_public_key.pem # build rsa kay pairs for the user jwt signing openssl genrsa -out abcdesktop_jwt_user_signing_private_key.pem 1024 openssl rsa -in abcdesktop_jwt_user_signing_private_key.pem -outform PEM -pubout -out abcdesktop_jwt_user_signing_public_key.pem Then, create the kubernetes secrets from the new key files: # create the kubernetes rsa keys secret for abcdesktop kubectl create secret generic abcdesktopjwtdesktoppayload --from-file=abcdesktop_jwt_desktop_payload_private_key.pem --from-file=abcdesktop_jwt_desktop_payload_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtdesktopsigning --from-file=abcdesktop_jwt_desktop_signing_private_key.pem --from-file=abcdesktop_jwt_desktop_signing_public_key.pem --namespace=abcdesktop kubectl create secret generic abcdesktopjwtusersigning --from-file=abcdesktop_jwt_user_signing_private_key.pem --from-file=abcdesktop_jwt_user_signing_public_key.pem --namespace=abcdesktop You should read on the standard output : secret/abcdesktopjwtdesktoppayload created secret/abcdesktopjwtdesktopsigning created secret/abcdesktopjwtusersigning created Only if you use a private registry or if the abcdesktop registry is private Create Secret to allow kubernetes to download abcdesktop images from docker registry. For this part you need to change docker-username and docker-password by credentials provided by project owner. If you don't have this values, you will have to build abcdesktop images by yourself. change docker.json path if need /root/.docker/config.json kubectl create secret generic abcdesktopregistrysecret --from-file=.dockerconfigjson=/root/.docker/config.json --type=kubernetes.io/dockerconfigjson -n abcdesktop","title":"Step 2: Secure abcdesktop JWT exchange"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-secrets","text":"You can verify secrets creation with the following command : kubectl get secrets -n abcdesktop You should read on the standard output : NAME TYPE DATA AGE default-token-5zknd kubernetes.io/service-account-token 3 6m6s abcdesktopjwtdesktoppayload Opaque 2 68s abcdesktopjwtdesktopsigning Opaque 2 68s abcdesktopjwtusersigning Opaque 2 67s","title":"Verify Secrets"},{"location":"3.0/setup/kubernetes_abcdesktop/#step-3-download-user-pod-images","text":"Create a pod user to make sure that Kubernetes will find the docker images at startup time. kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/poduser.yaml You should read on stdout pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 created You can wait for user pod is Ready , this while take a while, for container images are downloading. kubectl wait --for=condition=Ready pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 -n abcdesktop --timeout=-1s pod/anonymous-74bea267-8197-4b1d-acff-019b24e778c5 condition met You can delete the user pod anonymous-74bea267-8197-4b1d-acff-019b24e778c5 . This container images are downloaded. kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/poduser.yaml","title":"Step 3: Download user pod images"},{"location":"3.0/setup/kubernetes_abcdesktop/#step-4-download-and-create-the-abcdesktop-config-file","text":"Download the od.config file. This is the main file for pyos control plane. curl https://raw.githubusercontent.com/abcdesktopio/conf/main/reference/od.config.3.0 --output od.config Create the config map abcdesktop-config in the abcdesktop namespace kubectl create configmap abcdesktop-config --from-file=od.config -n abcdesktop You should read on sdtout configmap/abcdesktop-config created","title":"Step 4: Download and create the abcdesktop config file"},{"location":"3.0/setup/kubernetes_abcdesktop/#step-5-create-the-abcdesktop-pods-and-services","text":"abcdesktop.yaml file contains declarations for all roles, service account, pods, and services required for abcdesktop. Run the command line kubectl create -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop-3.0.yaml You should read on the standard output clusterrole.rbac.authorization.k8s.io/pyos-role created clusterrolebinding.rbac.authorization.k8s.io/pyos-rbac created serviceaccount/pyos-serviceaccount created storageclass.storage.k8s.io/storage-local-abcdesktop created configmap/nginx-config created deployment.apps/memcached-od created secret/mongodb-secret created statefulset.apps/mongodb-od created daemonset.apps/daemonset-nginx created deployment.apps/speedtest-od created daemonset.apps/daemonset-pyos created endpoints/desktop created service/desktop created service/memcached created service/mongodb created service/speedtest created service/nginx created service/pyos created","title":"Step 5: Create the abcdesktop pods and services"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-pods","text":"Once the pods are created, all pods should be in Running status. For the first time, please wait for downloading all container images. It can take a while. kubectl get pods -n abcdesktop You should read on the standard output NAME READY STATUS RESTARTS AGE daemonset-nginx-nfsbm 1/1 Running 0 29s daemonset-pyos-8kvfp 1/1 Running 0 29s memcached-od-5bf65bf745-j69lh 1/1 Running 0 29s mongodb-od-6cbf8d74d-2rdmd 1/1 Running 0 29s openldap-od-8dc9f56d8-wtlxl 1/1 Running 0 29s speedtest-od-7cb7dd44f5-p947s 1/1 Running 0 29s","title":"Verify Pods"},{"location":"3.0/setup/kubernetes_abcdesktop/#connect-your-local-abcdesktop","text":"Open your navigator to http://[your-ip-hostname]:30443/ abcdesktop homepage should be available : Click on the Connect with Anonymous access button. abcdesktop service pyos is creating a new desktop using the user container image abcdesktopio/oc.user.kubernetes.18.04:3.0 . Few seconds later, processes are ready to run. You should see the abcdesktop main screen, with only one application File Manager . Great you have installed abcdesktop.io in Kubernetes mode. You just need a web browser to reach your web workspace. It' now time to add some container applications. Read the chapter add kubernetes contain","title":"Connect your local abcdesktop"},{"location":"3.0/setup/kubernetes_abcdesktop/#troubleshoot","text":"All kubernetes resources can be inspected to get more informations. First list elements you want to verify, in the following case, we will inspect pods : kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-qnd4n 1/1 Running 0 92s daemonset-pyos-6mgq4 1/1 Running 0 92s memcached-od-db69c45fb-mqt4n 1/1 Running 0 92s mongodb-od-ff874fcb5-sm6f7 1/1 Running 0 92s speedtest-od-55c58fdd69-5znpr 0/1 ImagePullBackOff 0 92s As we can see, status is \"ImagePullBackOff\" for speedtest-od pod. We will then ask kubernetes to describe the pod with the following command : kubectl describe pod speedtest-od-55c58fdd69-t99ck -n abcdesktop In this case, the important information part is at the end (it's not always the case, you can also look at \"Conditions:\" section) : Events: Type Reason Age From Message ---- ------ ---- ---- ------- Warning Failed 7m6s (x4837 over 18h) kubelet, cube05 Error: ImagePullBackOff Normal BackOff 2m9s (x4860 over 18h) kubelet, cube05 Back-off pulling image \"registry.mydomain.local:443/oc.speedtest\" As we can see, in this case, Kubernetes had a problem to pull oc.speedtest image from registry.","title":"Troubleshoot"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-daemonsets","text":"kubectl get daemonsets -n abcdesktop You should read on the standard output NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE daemonset-nginx 1 1 1 1 1 <none> 166m daemonset-pyos 1 1 1 1 1 <none> 166m","title":"Verify Daemonsets"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-service-ports","text":"kubectl get services -n abcdesktop You should read on the standard output NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE desktop ClusterIP None <none> <none> 166m memcached ClusterIP 10.97.84.163 <none> 11211/TCP 166m mongodb ClusterIP 10.97.119.76 <none> 27017/TCP 166m nginx NodePort 10.108.80.216 <none> 80:30443/TCP 166m openldap ClusterIP 10.104.244.6 <none> 389/TCP,636/TCP 166m pyos ClusterIP 10.111.15.51 <none> 8000/TCP 166m speedtest ClusterIP 10.106.254.126 <none> 80/TCP 166m","title":"Verify service ports"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-cluster-roles","text":"kubectl describe ClusterRole pyos-role -n abcdesktop You should read on the standard output Name: pyos-role Labels: <none> Annotations: <none> PolicyRule: Resources Non-Resource URLs Resource Names Verbs --------- ----------------- -------------- ----- pods/ephemeralcontainers [] [] [create get list watch update patch delete] pods/exec [] [] [create get list watch update patch delete] configmaps [] [] [get list watch create update patch delete] pods [] [] [get list watch create update patch delete] secrets [] [] [get list watch create update patch delete] events [] [] [get list watch] pods/log [] [] [get list watch] endpoints [] [] [get list] nodes [] [] [get watch list]","title":"Verify cluster roles"},{"location":"3.0/setup/kubernetes_abcdesktop/#verify-cluster-role-bindind","text":"kubectl describe ClusterRoleBinding pyos-rbac -n abcdesktop You should read on the standard output Labels: <none> Annotations: <none> Role: Kind: ClusterRole Name: pyos-role Subjects: Kind Name Namespace ---- ---- --------- ServiceAccount pyos-serviceaccount abcdesktop","title":"Verify Cluster Role Bindind"},{"location":"3.0/setup/kubernetes_abcdesktop/#read-pyos-logs","text":"kubectl logs daemonset-pyos-tklg8 --follow -n abcdesktop","title":"Read pyos logs"},{"location":"3.0/setup/kubernetes_abcdesktop/#rollout-daemonset","text":"To rollout restart the abcdesktop daemonset kubectl rollout restart daemonset -n abcdesktop You should read on the standard output daemonset.apps/daemonset-nginx restarted daemonset.apps/daemonset-pyos restarted Check the pods status kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-dh2xd 1/1 Running 0 4m22s daemonset-pyos-9xn26 1/1 Running 0 3m52s memcached-od-5bf65bf745-xpvvr 1/1 Running 3 45h mongodb-od-656d85c49f-242jh 1/1 Running 4 45h openldap-od-5945946767-qf2hn 1/1 Running 0 45m speedtest-od-d94b8cb5c-52wf5 1/1 Running 0 45m","title":"Rollout daemonset"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/","text":"Setup applications for abcdesktop Quick application install Quick installation can be run on Linux or macOS operation system. Download and execute the pullapps-3.0.sh script : curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/pullapps-3.0.sh | bash This script starts abcdesktop application on an empty desktop. Pods is created to ask Kubernetes for pulling containers image. NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 100m daemonset-pyos-rdwws 1/1 Running 0 100m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 100m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 100m openldap-od-795c55f6db-pb68k 1/1 Running 0 100m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 1/1 Running 0 5s pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 1/1 Running 0 3s pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 0/1 ContainerCreating 0 1s pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 0/1 ContainerCreating 0 0s pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 0/1 ContainerCreating 0 2s pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 1/1 Running 0 3s pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 1/1 Running 0 4s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 100m list of created pods for pulling is pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 pod/pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 condition met pod/pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 condition met pod/pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 condition met pod/pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 condition met pod/pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 condition met pod/pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 condition met pod/pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 condition met Connect to your abcdesktop The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run. Mannualy install application Add new application, require to send an application json document to the control-plane pyos . Download a json application document format In this example, we install the application 2048 game as sample, but you can choose another one from https://github.com/abcdesktopio/conf/tree/main/apps curl https://raw.githubusercontent.com/abcdesktopio/conf/main/apps/2048.d.3.0.json --output 2048.json To inspect image json you can also run crictl inspecti or docker inspect command. crictl inspecti abcdesktopio/2048.d:3.0 > 2048.json docker inspect abcdesktopio/2048.d:3.0 > 2048.json The image manager endpoint REST API is http://[your-ip-hostname]:30443/API/manager/image Replace [your-ip-hostname] by your own server ip, by default with localhost, the url become http://localhost:30443/API/manager/image Send the 2048.json file to the images REST API curl -X PUT -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d @2048.json The response is the json document. [{\"home\": null, \"cmd\": [\"/composer/appli-docker-entrypoint.sh\"], \"workingdir\": \"/home/balloon\", \"user\": \"balloon\", \"sha_id\": \"sha256:1897dd8f22453ae01c72d4975d43e5505b6faae3f4a41611108c2e3beb2ab4bd\", \"id\": \"abcdesktopio/2048.d:3.0\", \"rules\": {\"homedir\": {\"default\": true}}, \"acl\": {\"permit\": [\"all\"]}, \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"icon\": \"circle_2048.svg\", \"icondata\": \"\", \"keyword\": \"2048,2048\", \"uniquerunkey\": null, \"cat\": \"games\", \"args\": null, \"execmode\": null, \"security_opt\": null, \"showinview\": null, \"displayname\": \"2048\", \"mimetype\": [], \"path\": \"/usr/games/2048-qt\", \"desktopfile\": \"2048-qt.desktop\", \"executablefilename\": \"2048-qt\", \"usedefaultapplication\": null, \"fileextensions\": [], \"legacyfileextensions\": [], \"host_config\": {\"mem_limit\": \"256M\", \"shm_size\": \"64M\", \"pid_mode\": false, \"network_mode\": \"none\"}, \"secrets_requirement\": null, \"run_inside_pod\": false, \"image_pull_policy\": \"IfNotPresent\", \"image_pull_secrets\": null REST API methods description for /API/manager/image Method Type GET http request list images in mongo db image collection PUT http request update or insert images in mongo db image collection, then create a pull pod to fetch images POST http request update or insert images in mongo db image collection. This method does not pull images. DELETE http request delete images in mongo db image collection Method Sample GET curl -X GET -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image PUT curl -X PUT -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d@xterm.d.json POST curl -X POST -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d@xterm.d.json DELETE curl -X DELETE -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image/efbb56e0c579d1945fd8f4a4d955e08d7801208c953e03fe6d4d274edd1904c9 The PUT method create a pull pod to fetch application images. Check that a new pull-2048-*-UUID pod exists kubectl get pods -n abcdesktop The pod pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 is ContainerCreating . NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 32m daemonset-pyos-rdwws 1/1 Running 0 32m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 32m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 32m openldap-od-795c55f6db-pb68k 1/1 Running 0 32m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 0/1 ContainerCreating 0 2s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 32m Then the pod STATUS become Running during 42 seconds . NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 32m daemonset-pyos-rdwws 1/1 Running 0 32m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 32m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 32m openldap-od-795c55f6db-pb68k 1/1 Running 0 32m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 1/1 Running 0 80s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 32m This pod is created to ask Kubernetes for pulling the container image. Connect to your abcdesktop The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Setup applications for abcdesktop"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#setup-applications-for-abcdesktop","text":"","title":"Setup applications for abcdesktop"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#quick-application-install","text":"Quick installation can be run on Linux or macOS operation system. Download and execute the pullapps-3.0.sh script : curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/pullapps-3.0.sh | bash This script starts abcdesktop application on an empty desktop. Pods is created to ask Kubernetes for pulling containers image. NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 100m daemonset-pyos-rdwws 1/1 Running 0 100m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 100m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 100m openldap-od-795c55f6db-pb68k 1/1 Running 0 100m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 1/1 Running 0 5s pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 1/1 Running 0 3s pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 0/1 ContainerCreating 0 1s pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 0/1 ContainerCreating 0 0s pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 0/1 ContainerCreating 0 2s pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 1/1 Running 0 3s pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 1/1 Running 0 4s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 100m list of created pods for pulling is pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 pod/pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 condition met pod/pull-calc-abcinst-57622131ac1ce4b37d5cec51ee7f0071c460293158a4 condition met pod/pull-firefox-abcinst-d2872d0d272a3a02606b4877c12e832755ba1a378 condition met pod/pull-gimp-abcinst-051fefa55d97338653a58e86ccdd5f1a3e66f7f05017 condition met pod/pull-impress-abcinst-f74fed932051c2760b3fd69f4ef475e34ad1a8a49 condition met pod/pull-writer-abcinst-cfe1a4f74d19fbe49d86d211f99d005532b6cf7c87 condition met pod/pull-xterm-abcinst-0e802cfa8addb4648f843869325f3413d544bb9eae8 condition met","title":"Quick application install"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#connect-to-your-abcdesktop","text":"The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Connect to your abcdesktop"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#mannualy-install-application","text":"Add new application, require to send an application json document to the control-plane pyos .","title":"Mannualy install application"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#download-a-json-application-document-format","text":"In this example, we install the application 2048 game as sample, but you can choose another one from https://github.com/abcdesktopio/conf/tree/main/apps curl https://raw.githubusercontent.com/abcdesktopio/conf/main/apps/2048.d.3.0.json --output 2048.json To inspect image json you can also run crictl inspecti or docker inspect command. crictl inspecti abcdesktopio/2048.d:3.0 > 2048.json docker inspect abcdesktopio/2048.d:3.0 > 2048.json The image manager endpoint REST API is http://[your-ip-hostname]:30443/API/manager/image Replace [your-ip-hostname] by your own server ip, by default with localhost, the url become http://localhost:30443/API/manager/image Send the 2048.json file to the images REST API curl -X PUT -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d @2048.json The response is the json document. [{\"home\": null, \"cmd\": [\"/composer/appli-docker-entrypoint.sh\"], \"workingdir\": \"/home/balloon\", \"user\": \"balloon\", \"sha_id\": \"sha256:1897dd8f22453ae01c72d4975d43e5505b6faae3f4a41611108c2e3beb2ab4bd\", \"id\": \"abcdesktopio/2048.d:3.0\", \"rules\": {\"homedir\": {\"default\": true}}, \"acl\": {\"permit\": [\"all\"]}, \"launch\": \"2048-qt.2048-qt\", \"name\": \"2048\", \"icon\": \"circle_2048.svg\", \"icondata\": \"\", \"keyword\": \"2048,2048\", \"uniquerunkey\": null, \"cat\": \"games\", \"args\": null, \"execmode\": null, \"security_opt\": null, \"showinview\": null, \"displayname\": \"2048\", \"mimetype\": [], \"path\": \"/usr/games/2048-qt\", \"desktopfile\": \"2048-qt.desktop\", \"executablefilename\": \"2048-qt\", \"usedefaultapplication\": null, \"fileextensions\": [], \"legacyfileextensions\": [], \"host_config\": {\"mem_limit\": \"256M\", \"shm_size\": \"64M\", \"pid_mode\": false, \"network_mode\": \"none\"}, \"secrets_requirement\": null, \"run_inside_pod\": false, \"image_pull_policy\": \"IfNotPresent\", \"image_pull_secrets\": null","title":"Download a json application document format"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#rest-api-methods-description-for-apimanagerimage","text":"Method Type GET http request list images in mongo db image collection PUT http request update or insert images in mongo db image collection, then create a pull pod to fetch images POST http request update or insert images in mongo db image collection. This method does not pull images. DELETE http request delete images in mongo db image collection Method Sample GET curl -X GET -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image PUT curl -X PUT -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d@xterm.d.json POST curl -X POST -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image -d@xterm.d.json DELETE curl -X DELETE -H 'Content-Type: text/javascript' http://localhost:30443/API/manager/image/efbb56e0c579d1945fd8f4a4d955e08d7801208c953e03fe6d4d274edd1904c9 The PUT method create a pull pod to fetch application images. Check that a new pull-2048-*-UUID pod exists kubectl get pods -n abcdesktop The pod pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 is ContainerCreating . NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 32m daemonset-pyos-rdwws 1/1 Running 0 32m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 32m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 32m openldap-od-795c55f6db-pb68k 1/1 Running 0 32m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 0/1 ContainerCreating 0 2s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 32m Then the pod STATUS become Running during 42 seconds . NAME READY STATUS RESTARTS AGE daemonset-nginx-dqxzx 1/1 Running 0 32m daemonset-pyos-rdwws 1/1 Running 0 32m memcached-od-bdcbbcb74-xbg8x 1/1 Running 0 32m mongodb-od-6484d8bc67-9xsgm 1/1 Running 0 32m openldap-od-795c55f6db-pb68k 1/1 Running 0 32m pull-2048-abcinst-9fd80f22ad6b0750cb3d248bda04de25444bab2cf274 1/1 Running 0 80s speedtest-od-5565dfdc67-vdwcl 1/1 Running 0 32m This pod is created to ask Kubernetes for pulling the container image.","title":"REST API methods description for /API/manager/image"},{"location":"3.0/setup/kubernetes_abcdesktop_applications/#connect-to-your-abcdesktop_1","text":"The API server receives a new image event from docker daemon. To run the new applications just refresh you web browser page. Now reconnect to your abcdesktop. Open your navigator to http://[your-ip-hostname]:30443/ http://localhost:30443/ The new applications are installed, and ready to run.","title":"Connect to your abcdesktop"},{"location":"3.0/setup/kubernetesmode/","text":"Setup kubernetes for GNU/Linux This section apply only to configure kubernetes for GNU/Linux. abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdesktop.io is working in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all user containers can be distributed on different hosts. Requirements Linux Requierements Installation The following commands will let you prepare kubernetes on one node. In this case, all applications run on a single node. It's recommended to start with a single node. Kubernetes Master Node Step 1: Disable swap memory (if running) You need to disable swap memory on nodes as Kubernetes does not perform properly on a system that is using swap memory. Run the following command in order to disable swap memory. swapoff -a If you have some swaps in /etc/fstab, just comment them out. swapoff -a will disable all swaps temporarily. disable by masking it with sysctl: systemctl mask dev-zram1.swap Created symlink /etc/systemd/system/dev-zram1.swap \u2192 /dev/null. Step 2: init kubernetes Run the following command as sudo on the master node: kubeadm init --pod-network-cidr=10.244.0.0/16 The process might take a minute or more depending on your internet connection. To be able to manage your kubernetes server, you need to run the following commands as a regular user: mkdir -p $HOME/.kube cp -i /etc/kubernetes/admin.conf $HOME/.kube/config chown $(id -u):$(id -g) $HOME/.kube/config Step 3: Permit Schedule Taints are Kubernetes flags to prevent Pod Scheduling. Remove the taints on the master so that you can schedule pods on it. kubectl taint node `hostname` node-role.kubernetes.io/control-plane:NoSchedule- It should return the following string. node/<your-hostname> untainted Taints are Kubernetes flags to prevent Pod Scheduling. Confirm that you now have a node in your cluster with the following command. kubectl get nodes -o wide It should return something like the following. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME hostname NotReady control-plane 3m17s v1.25.3 192.168.7.187 <none> Ubuntu 22.04.1 LTS 5.15.0-52-generic containerd://1.6.9 Step 4: Deploy flannel through the master node A pod network is a medium of communication between the nodes of a network. We are deploying flannel network on our cluster through the following command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml It should return the following strings. namespace/kube-flannel created clusterrole.rbac.authorization.k8s.io/flannel created clusterrolebinding.rbac.authorization.k8s.io/flannel created serviceaccount/flannel created configmap/kube-flannel-cfg created daemonset.apps/kube-flannel-ds created Check node status Now when you see the status of the nodes, you will see that the master-node is ready : kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME Hostname Ready control-plane 4m12s v1.25.3 192.168.7.187 <none> Ubuntu 22.04.1 LTS 5.15.0-52-generic containerd://1.6.9 At this step, there is no more Taints and your node is Ready . Next step, continue with the setup abcdesktop for kubernetes.","title":"Setup Kubernetes for GNU/Linux"},{"location":"3.0/setup/kubernetesmode/#setup-kubernetes-for-gnulinux","text":"This section apply only to configure kubernetes for GNU/Linux. abcdesktop.io support docker mode and kubernetes mode. In this section we will study how abcdesktop.io is working in kubernetes mode. The abcdesktop.io kubernetes mode is recommended for enterprise use, all user containers can be distributed on different hosts.","title":"Setup kubernetes for GNU/Linux"},{"location":"3.0/setup/kubernetesmode/#requirements","text":"Linux Requierements","title":"Requirements"},{"location":"3.0/setup/kubernetesmode/#installation","text":"The following commands will let you prepare kubernetes on one node. In this case, all applications run on a single node. It's recommended to start with a single node.","title":"Installation"},{"location":"3.0/setup/kubernetesmode/#kubernetes-master-node","text":"","title":"Kubernetes Master Node"},{"location":"3.0/setup/kubernetesmode/#step-1-disable-swap-memory-if-running","text":"You need to disable swap memory on nodes as Kubernetes does not perform properly on a system that is using swap memory. Run the following command in order to disable swap memory. swapoff -a If you have some swaps in /etc/fstab, just comment them out. swapoff -a will disable all swaps temporarily. disable by masking it with sysctl: systemctl mask dev-zram1.swap Created symlink /etc/systemd/system/dev-zram1.swap \u2192 /dev/null.","title":"Step 1: Disable swap memory (if running)"},{"location":"3.0/setup/kubernetesmode/#step-2-init-kubernetes","text":"Run the following command as sudo on the master node: kubeadm init --pod-network-cidr=10.244.0.0/16 The process might take a minute or more depending on your internet connection. To be able to manage your kubernetes server, you need to run the following commands as a regular user: mkdir -p $HOME/.kube cp -i /etc/kubernetes/admin.conf $HOME/.kube/config chown $(id -u):$(id -g) $HOME/.kube/config","title":"Step 2: init kubernetes"},{"location":"3.0/setup/kubernetesmode/#step-3-permit-schedule","text":"Taints are Kubernetes flags to prevent Pod Scheduling. Remove the taints on the master so that you can schedule pods on it. kubectl taint node `hostname` node-role.kubernetes.io/control-plane:NoSchedule- It should return the following string. node/<your-hostname> untainted Taints are Kubernetes flags to prevent Pod Scheduling. Confirm that you now have a node in your cluster with the following command. kubectl get nodes -o wide It should return something like the following. NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME hostname NotReady control-plane 3m17s v1.25.3 192.168.7.187 <none> Ubuntu 22.04.1 LTS 5.15.0-52-generic containerd://1.6.9","title":"Step 3: Permit Schedule"},{"location":"3.0/setup/kubernetesmode/#step-4-deploy-flannel-through-the-master-node","text":"A pod network is a medium of communication between the nodes of a network. We are deploying flannel network on our cluster through the following command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml It should return the following strings. namespace/kube-flannel created clusterrole.rbac.authorization.k8s.io/flannel created clusterrolebinding.rbac.authorization.k8s.io/flannel created serviceaccount/flannel created configmap/kube-flannel-cfg created daemonset.apps/kube-flannel-ds created","title":"Step 4: Deploy flannel through the master node"},{"location":"3.0/setup/kubernetesmode/#check-node-status","text":"Now when you see the status of the nodes, you will see that the master-node is ready : kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME Hostname Ready control-plane 4m12s v1.25.3 192.168.7.187 <none> Ubuntu 22.04.1 LTS 5.15.0-52-generic containerd://1.6.9 At this step, there is no more Taints and your node is Ready . Next step, continue with the setup abcdesktop for kubernetes.","title":"Check node status"},{"location":"3.0/setup/requirements/","text":"Requirements Prerequisites for abcdesktop setup in release 3.x Architecture x86-64 ( arm-64 is not yet available) 16 GB of free space to store sample applications ( gimp , libreoffice writer , libreoffice calc , libreoffice math , libreoffice impress , firefox ) and core image services. Release 3.x kubernetes release must be greater or equal to 1.24 $ kubectl version --output=yaml serverVersion: buildDate: \"2022-05-24T12:18:48Z\" compiler: gc gitCommit: 3ddd0f45aa91e2f30c70734b175631bec5b5825a gitTreeState: clean gitVersion: v1.24.1 goVersion: go1.18.2 major: \"1\" minor: \"24\" platform: linux/amd64 You do not need to install dockerd. There is no depend to dockerd anymore. In this release and all next releases, application can run as : kubernetes pod ephemeral container . Read more informations about on ephermeral container All container-runtimes are supported. containerd is recommended py default. microk8s support microk8s is supported in abcdesktop release 3.0. The reverse proxy service need to enable dns service. microk8s kubectl version kubernetes release must be greater or equal to 1.24 $ microk8s kubectl version --output=yaml clientVersion: buildDate: \"2022-09-28T14:42:45Z\" compiler: gc gitCommit: 949b88ddc8b8cc540684c90c176f92ac9676e07c gitTreeState: clean gitVersion: v1.24.6-2+949b88ddc8b8cc goVersion: go1.18.5 major: \"1\" minor: 24+ platform: linux/amd64 kustomizeVersion: v4.5.4 serverVersion: buildDate: \"2022-09-28T14:40:13Z\" compiler: gc gitCommit: 949b88ddc8b8cc540684c90c176f92ac9676e07c gitTreeState: clean gitVersion: v1.24.6-2+949b88ddc8b8cc goVersion: go1.18.5 major: \"1\" minor: 24+ platform: linux/amd64 enable dns add one to microk8s $ microk8s enable dns You should ready on stdout $ microk8s enable dns Infer repository core for addon dns Enabling DNS Applying manifest serviceaccount/coredns created configmap/coredns created deployment.apps/coredns created service/kube-dns created clusterrole.rbac.authorization.k8s.io/coredns created clusterrolebinding.rbac.authorization.k8s.io/coredns created Restarting kubelet DNS is enabled Check microk8s status $ microk8s status microk8s is running high-availability: no datastore master nodes: 127.0.0.1:19001 datastore standby nodes: none addons: enabled: dns # (core) CoreDNS ha-cluster # (core) Configure high availability on the current node Supported Architectures images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest GNU/Linux The recommended distribution is Ubuntu 22.04.1 LTS (Jammy Jellyfish)","title":"Requirements"},{"location":"3.0/setup/requirements/#requirements","text":"","title":"Requirements"},{"location":"3.0/setup/requirements/#prerequisites-for-abcdesktop-setup-in-release-3x","text":"Architecture x86-64 ( arm-64 is not yet available) 16 GB of free space to store sample applications ( gimp , libreoffice writer , libreoffice calc , libreoffice math , libreoffice impress , firefox ) and core image services.","title":"Prerequisites for abcdesktop setup in release 3.x"},{"location":"3.0/setup/requirements/#release-3x","text":"kubernetes release must be greater or equal to 1.24 $ kubectl version --output=yaml serverVersion: buildDate: \"2022-05-24T12:18:48Z\" compiler: gc gitCommit: 3ddd0f45aa91e2f30c70734b175631bec5b5825a gitTreeState: clean gitVersion: v1.24.1 goVersion: go1.18.2 major: \"1\" minor: \"24\" platform: linux/amd64 You do not need to install dockerd. There is no depend to dockerd anymore. In this release and all next releases, application can run as : kubernetes pod ephemeral container . Read more informations about on ephermeral container All container-runtimes are supported. containerd is recommended py default.","title":"Release 3.x"},{"location":"3.0/setup/requirements/#microk8s-support","text":"microk8s is supported in abcdesktop release 3.0. The reverse proxy service need to enable dns service.","title":"microk8s support"},{"location":"3.0/setup/requirements/#microk8s-kubectl-version","text":"kubernetes release must be greater or equal to 1.24 $ microk8s kubectl version --output=yaml clientVersion: buildDate: \"2022-09-28T14:42:45Z\" compiler: gc gitCommit: 949b88ddc8b8cc540684c90c176f92ac9676e07c gitTreeState: clean gitVersion: v1.24.6-2+949b88ddc8b8cc goVersion: go1.18.5 major: \"1\" minor: 24+ platform: linux/amd64 kustomizeVersion: v4.5.4 serverVersion: buildDate: \"2022-09-28T14:40:13Z\" compiler: gc gitCommit: 949b88ddc8b8cc540684c90c176f92ac9676e07c gitTreeState: clean gitVersion: v1.24.6-2+949b88ddc8b8cc goVersion: go1.18.5 major: \"1\" minor: 24+ platform: linux/amd64","title":"microk8s kubectl version"},{"location":"3.0/setup/requirements/#enable-dns-add-one-to-microk8s","text":"$ microk8s enable dns You should ready on stdout $ microk8s enable dns Infer repository core for addon dns Enabling DNS Applying manifest serviceaccount/coredns created configmap/coredns created deployment.apps/coredns created service/kube-dns created clusterrole.rbac.authorization.k8s.io/coredns created clusterrolebinding.rbac.authorization.k8s.io/coredns created Restarting kubelet DNS is enabled Check microk8s status $ microk8s status microk8s is running high-availability: no datastore master nodes: 127.0.0.1:19001 datastore standby nodes: none addons: enabled: dns # (core) CoreDNS ha-cluster # (core) Configure high availability on the current node","title":"enable dns add one to microk8s"},{"location":"3.0/setup/requirements/#supported-architectures","text":"images support only architectures x86-64 . The architectures supported by this image is: Architecture Tag x86-64 amd64-latest","title":"Supported Architectures"},{"location":"3.0/setup/requirements/#gnulinux","text":"The recommended distribution is Ubuntu 22.04.1 LTS (Jammy Jellyfish)","title":"GNU/Linux"},{"location":"3.0/setup/uninstall_kubernetes/","text":"Uninstall abcdesktop for kubernetes Commands to uninstall abcdesktop release 3.0 To uninstall abcdesktop. Choose run run the uninstall-3.0.sh bash script using a curl or run step by step uninstall commands manually. Quick uninstallation abcdesktop (Linux or macOS) Quick uninstallation can be run on Linux or macOS operation system. Download and extract the uninstall bash script (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/uninstall-3.0.sh | bash You should read on stdout starting abcdesktop uninstall commands start at 1669824908 epoch seconds stop and remove abcdesktop user pods pod \"anonymous-33c30478-5cc0-4e18-b128-735694c98f3c\" deleted remove all services, pods clusterrole.rbac.authorization.k8s.io \"pyos-role\" deleted clusterrolebinding.rbac.authorization.k8s.io \"pyos-rbac\" deleted serviceaccount \"pyos-serviceaccount\" deleted storageclass.storage.k8s.io \"storage-local-abcdesktop\" deleted configmap \"nginx-config\" deleted deployment.apps \"memcached-od\" deleted secret \"mongodb-secret\" deleted deployment.apps \"mongodb-od\" deleted daemonset.apps \"daemonset-nginx\" deleted deployment.apps \"speedtest-od\" deleted daemonset.apps \"daemonset-pyos\" deleted endpoints \"desktop\" deleted service \"desktop\" deleted service \"memcached\" deleted service \"mongodb\" deleted service \"speedtest\" deleted service \"nginx\" deleted service \"pyos\" deleted deployment.apps \"openldap-od\" deleted service \"openldap\" deleted remove all secrets secret \"abcdesktopjwtdesktoppayload\" deleted secret \"abcdesktopjwtdesktopsigning\" deleted secret \"abcdesktopjwtusersigning\" deleted remove all configmaps configmap \"abcdesktop-config\" deleted configmap \"kube-root-ca.crt\" deleted remove all pvc No resources found remove all pv No resources found remove namespace namespace \"abcdesktop\" deleted abcdesktop is uninstalled, in 48 seconds Run step by step uninstall commands Run the bash commands from the uninstall-3.0.sh main content : echo \"stop and remove abcdesktop user pods\" kubectl delete pods --selector=\"type=x11server\" -n abcdesktop echo \"remove all services, pods\" kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop-3.0.yaml echo \"remove all secrets\" kubectl delete secrets --all -n abcdesktop echo \"remove all configmaps\" kubectl delete cm --all -n abcdesktop echo \"remove all pvc\" kubectl delete pvc --all -n abcdesktop 2>/dev/null echo \"remove all pv\" kubectl delete pv --all -n abcdesktop 2>/dev/null echo \"remove namespace\" kubectl delete namespace abcdesktop echo \"abcdesktop is uninstalled\" The last command kubectl delete namespace can take few minutes. Please wait for the output message: abcdesktop is uninstalled Great, you have uninstalled abcdesktop for kubernetes.","title":"Uninstall abcdesktop"},{"location":"3.0/setup/uninstall_kubernetes/#commands-to-uninstall-abcdesktop-release-30","text":"To uninstall abcdesktop. Choose run run the uninstall-3.0.sh bash script using a curl or run step by step uninstall commands manually.","title":"Commands to uninstall abcdesktop release 3.0"},{"location":"3.0/setup/uninstall_kubernetes/#quick-uninstallation-abcdesktop-linux-or-macos","text":"Quick uninstallation can be run on Linux or macOS operation system. Download and extract the uninstall bash script (Linux or macOS): curl -sL https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/uninstall-3.0.sh | bash You should read on stdout starting abcdesktop uninstall commands start at 1669824908 epoch seconds stop and remove abcdesktop user pods pod \"anonymous-33c30478-5cc0-4e18-b128-735694c98f3c\" deleted remove all services, pods clusterrole.rbac.authorization.k8s.io \"pyos-role\" deleted clusterrolebinding.rbac.authorization.k8s.io \"pyos-rbac\" deleted serviceaccount \"pyos-serviceaccount\" deleted storageclass.storage.k8s.io \"storage-local-abcdesktop\" deleted configmap \"nginx-config\" deleted deployment.apps \"memcached-od\" deleted secret \"mongodb-secret\" deleted deployment.apps \"mongodb-od\" deleted daemonset.apps \"daemonset-nginx\" deleted deployment.apps \"speedtest-od\" deleted daemonset.apps \"daemonset-pyos\" deleted endpoints \"desktop\" deleted service \"desktop\" deleted service \"memcached\" deleted service \"mongodb\" deleted service \"speedtest\" deleted service \"nginx\" deleted service \"pyos\" deleted deployment.apps \"openldap-od\" deleted service \"openldap\" deleted remove all secrets secret \"abcdesktopjwtdesktoppayload\" deleted secret \"abcdesktopjwtdesktopsigning\" deleted secret \"abcdesktopjwtusersigning\" deleted remove all configmaps configmap \"abcdesktop-config\" deleted configmap \"kube-root-ca.crt\" deleted remove all pvc No resources found remove all pv No resources found remove namespace namespace \"abcdesktop\" deleted abcdesktop is uninstalled, in 48 seconds","title":"Quick uninstallation abcdesktop (Linux or macOS)"},{"location":"3.0/setup/uninstall_kubernetes/#run-step-by-step-uninstall-commands","text":"Run the bash commands from the uninstall-3.0.sh main content : echo \"stop and remove abcdesktop user pods\" kubectl delete pods --selector=\"type=x11server\" -n abcdesktop echo \"remove all services, pods\" kubectl delete -f https://raw.githubusercontent.com/abcdesktopio/conf/main/kubernetes/abcdesktop-3.0.yaml echo \"remove all secrets\" kubectl delete secrets --all -n abcdesktop echo \"remove all configmaps\" kubectl delete cm --all -n abcdesktop echo \"remove all pvc\" kubectl delete pvc --all -n abcdesktop 2>/dev/null echo \"remove all pv\" kubectl delete pv --all -n abcdesktop 2>/dev/null echo \"remove namespace\" kubectl delete namespace abcdesktop echo \"abcdesktop is uninstalled\" The last command kubectl delete namespace can take few minutes. Please wait for the output message: abcdesktop is uninstalled Great, you have uninstalled abcdesktop for kubernetes.","title":"Run step by step uninstall commands"},{"location":"about/authors/","text":"Authors and Contributors Primary Authors Alexandre DEVELY : Project owner, architect, developer, containers and security design, all components, maintainer of the code and has written much of the current code base Cedric HAUWEL : Control Plane PyOS and authentification, included a complete refactor of the control plane Jeremy PETIT : HTML, CSS, Javascript, nodejs: Full Stack Javascript Developer Kevin VOYER : HTML, CSS, Javascript, Firefox clipboard extension, nodejs : Full Stack Javascript Developer Vincent PENVERN : Python, Ansible, Firefox clipboard extension, Pyos and embedded applications Jean-Philippe XAVIER : Architect, design and network policies with calico Other Contributors The incomplete list of individuals below have provided patches or otherwise contribute to the project prior to the project being hosted on GitHub. See the GitHub commit log for a list of recent contributors. We would like to thank everyone who has contributed to the project in any way.","title":"Authors"},{"location":"about/authors/#authors-and-contributors","text":"","title":"Authors and Contributors"},{"location":"about/authors/#primary-authors","text":"Alexandre DEVELY : Project owner, architect, developer, containers and security design, all components, maintainer of the code and has written much of the current code base Cedric HAUWEL : Control Plane PyOS and authentification, included a complete refactor of the control plane Jeremy PETIT : HTML, CSS, Javascript, nodejs: Full Stack Javascript Developer Kevin VOYER : HTML, CSS, Javascript, Firefox clipboard extension, nodejs : Full Stack Javascript Developer Vincent PENVERN : Python, Ansible, Firefox clipboard extension, Pyos and embedded applications Jean-Philippe XAVIER : Architect, design and network policies with calico","title":"Primary Authors"},{"location":"about/authors/#other-contributors","text":"The incomplete list of individuals below have provided patches or otherwise contribute to the project prior to the project being hosted on GitHub. See the GitHub commit log for a list of recent contributors. We would like to thank everyone who has contributed to the project in any way.","title":"Other Contributors"},{"location":"about/gnu-gpl-v2.0/","text":"GNU General Public License Version 2, June 1991 Copyright \u00a9 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \u201cProgram\u201d, below, refers to any such program or work, and a \u201cwork based on the Program\u201d means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \u201cmodification\u201d.) Each licensee is addressed as \u201cyou\u201d. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \u201cany later version\u201d, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Also add information on how to contact you by electronic and paper mail. If the program is interactive, make it output a short notice like this when it starts in an interactive mode: Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands show w and show c should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than show w and show c ; they could even be mouse-clicks or menu items--whatever suits your program. You should also get your employer (if you work as a programmer) or your school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker. <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License.","title":"Licence"},{"location":"about/gnu-gpl-v2.0/#gnu-general-public-license","text":"Version 2, June 1991 Copyright \u00a9 1989, 1991 Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.","title":"GNU General Public License"},{"location":"about/gnu-gpl-v2.0/#preamble","text":"The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it. For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software. Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. The precise terms and conditions for copying, distribution and modification follow.","title":"Preamble"},{"location":"about/gnu-gpl-v2.0/#terms-and-conditions-for-copying-distribution-and-modification","text":"0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \u201cProgram\u201d, below, refers to any such program or work, and a \u201cwork based on the Program\u201d means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \u201cmodification\u201d.) Each licensee is addressed as \u201cyou\u201d. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does. 1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program. In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following: a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.) The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code. 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it. 6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \u201cany later version\u201d, you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation. 10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.","title":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION"},{"location":"about/gnu-gpl-v2.0/#no-warranty","text":"11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS","title":"NO WARRANTY"},{"location":"about/gnu-gpl-v2.0/#how-to-apply-these-terms-to-your-new-programs","text":"If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Also add information on how to contact you by electronic and paper mail. If the program is interactive, make it output a short notice like this when it starts in an interactive mode: Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. The hypothetical commands show w and show c should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than show w and show c ; they could even be mouse-clicks or menu items--whatever suits your program. You should also get your employer (if you work as a programmer) or your school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker. <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License.","title":"How to Apply These Terms to Your New Programs"},{"location":"about/howreadthisdoc/","text":"How to read the abcdesktop.io documentation abcdesktop.io documentation The abcdesktop.io documentation brings you labs and tutorials that help you get hands-on experience using abcdesktop.io. You will find a mix of labs and tutorials that will help abcdesktop.io users, including sysadmins, IT Pros, and developers. There is a mix of hands-on tutorials right in the browser, instructions on setting up and using abcdesktop.io in your own environment (docker and kubernetes), and resources about best practices for developing and deploying your own abcdesktop.io applications. We recommend you to start in docker mode first with the Setup Guide in docker mode . Then explore the individual labs that explore many advanced features of abcdesktop.io, in Configuration Guide You can also, read the genesis chapters GUI apps on Docker . Learn more about abcdesktop.io, how it can help you deploy secure, scalable applications and save money along the way. The Basics of abcdesktop.io Learn more about the core concepts of abcdesktop.io and what it can do for your operations team, and help you understand the fundamental value proposition for abcdesktop.io. Topics include: Fundamentals of abcdesktop.io Deploy abcdesktop.io using docker-composer Defined docker image application Build your own application Use standard GNU/Linux Application Use Microsoft Windows Application with Wine The Advanced of abcdesktop.io This stage will help you learn more about some of the advanced topics of abcdesktop.io using Kubernetes. Topics include: Deploy abcdesktop.io using Kubernetes Storage and Kubernetes drivers Legacy Files server (CIFS, NFS, WebDav) Amazon/S3, Ceph Roles Security Networking Policies Orchestration LoadBalancing Logging with GrayLog Garbage collector","title":"How to read the abcdesktop.io documentation"},{"location":"about/howreadthisdoc/#how-to-read-the-abcdesktopio-documentation","text":"","title":"How to read the abcdesktop.io documentation"},{"location":"about/howreadthisdoc/#abcdesktopio-documentation","text":"The abcdesktop.io documentation brings you labs and tutorials that help you get hands-on experience using abcdesktop.io. You will find a mix of labs and tutorials that will help abcdesktop.io users, including sysadmins, IT Pros, and developers. There is a mix of hands-on tutorials right in the browser, instructions on setting up and using abcdesktop.io in your own environment (docker and kubernetes), and resources about best practices for developing and deploying your own abcdesktop.io applications. We recommend you to start in docker mode first with the Setup Guide in docker mode . Then explore the individual labs that explore many advanced features of abcdesktop.io, in Configuration Guide You can also, read the genesis chapters GUI apps on Docker . Learn more about abcdesktop.io, how it can help you deploy secure, scalable applications and save money along the way.","title":"abcdesktop.io documentation"},{"location":"about/howreadthisdoc/#the-basics-of-abcdesktopio","text":"Learn more about the core concepts of abcdesktop.io and what it can do for your operations team, and help you understand the fundamental value proposition for abcdesktop.io. Topics include: Fundamentals of abcdesktop.io Deploy abcdesktop.io using docker-composer Defined docker image application Build your own application Use standard GNU/Linux Application Use Microsoft Windows Application with Wine","title":"The Basics of abcdesktop.io"},{"location":"about/howreadthisdoc/#the-advanced-of-abcdesktopio","text":"This stage will help you learn more about some of the advanced topics of abcdesktop.io using Kubernetes. Topics include: Deploy abcdesktop.io using Kubernetes Storage and Kubernetes drivers Legacy Files server (CIFS, NFS, WebDav) Amazon/S3, Ceph Roles Security Networking Policies Orchestration LoadBalancing Logging with GrayLog Garbage collector","title":"The Advanced of abcdesktop.io"},{"location":"about/howtodolabsexercices/","text":"How to do the labs and exercices abcdesktop labs and tutorials are written using a desktop host. The supported operating system are : Operating System Recommended version GNU/Linux Ubuntu 18.04.4 LTS (Bionic Beaver) macOS/X Catalina version 10.15.3 (and above) Windows 10 Version 1703 (and above) Choose desktop or server If you choose server , please translate the URL request http://localhost with the hostname of your server. For example, if you are doing the exercice on a hostname 'server01.labs.domain.local', you have to translate the URL request http://localhost with http://server01.labs.domain.local Your web browser ( like Google Chrome ) may refuse unsecure websocket (ws) connections to localhost or your FQDN (only wss, so you should setup a TLS certificate for your local web/websocket server). It should work without any issues in Mozilla Firefox on localhost. If you choose desktop , the URL request http://localhost will reach your local services.","title":"How to do labs and exercices"},{"location":"about/howtodolabsexercices/#how-to-do-the-labs-and-exercices","text":"abcdesktop labs and tutorials are written using a desktop host. The supported operating system are : Operating System Recommended version GNU/Linux Ubuntu 18.04.4 LTS (Bionic Beaver) macOS/X Catalina version 10.15.3 (and above) Windows 10 Version 1703 (and above)","title":"How to do the labs and exercices"},{"location":"about/howtodolabsexercices/#choose-desktop-or-server","text":"If you choose server , please translate the URL request http://localhost with the hostname of your server. For example, if you are doing the exercice on a hostname 'server01.labs.domain.local', you have to translate the URL request http://localhost with http://server01.labs.domain.local Your web browser ( like Google Chrome ) may refuse unsecure websocket (ws) connections to localhost or your FQDN (only wss, so you should setup a TLS certificate for your local web/websocket server). It should work without any issues in Mozilla Firefox on localhost. If you choose desktop , the URL request http://localhost will reach your local services.","title":"Choose desktop or server"},{"location":"about/opensource/","text":"Open Source abcdesktop.io is an open source project abcdesktop.io is an open source project and is a volunteer effort. This means that it depends on people to give some of their free time to improve it and make it even better. Follow the Fork me on github links, to get access to each repository. If you are reading this, then you are probably curious or want to contribute in some way. Read on to see how you can do so. Open Source packages dependencies abcdesktop.io deplend on a lot of open source diffrents projets. WebModules Package Licence Authors Source novnc MPL-2.0 Joel Martin https://kanaka.github.io/noVNC/ os.js BSD license Anders Evenrud https://github.com/os-js/OS.js/ dropzone.js MIT license Matias Meno, www.colorglare.com https://github.com/enyo/dropzone/ hammer.js MIT license Jorik Tangelder http://hammerjs.github.io/ jquery MIT license jQuery Team https://jquery.com/ jqueryui MIT license jQuery Team https://jqueryui.com/ js-cookie MIT license Klaus Hartl & Fagner Brack https://github.com/js-cookie/ UAParser GPLv2 & MIT Faisal Salman https://github.com/faisalman/ua-parser-js Angular FileManager MIT license Jonas Sciangula Street https://github.com/joni2back/angular-filemanager Bootstrap MIT license Bootstrap team https://getbootstrap.com/ webaudio-wav-stream-player MIT license Julien Bouquillon https://github.com/revolunet/webaudio-wav-stream-player bootbox MIT license Nick Payne makeusabrew https://github.com/makeusabrew/bootbox Container components nginx Package Licence Authors Source nginx BSD licence Igor Sysoev http://nginx.org/ lua GPL-Compatible Free Software Licenses team at PUC-Rio in Brazil https://www.lua.org/ oc.pyos Package Version License CherryPy 18.5.0 BSD License Jinja2 2.11.1 BSD-3-Clause PyJWT 1.7.1 MIT PyNaCl 1.3.0 Apache License 2.0 PyYAML 5.3 MIT bcrypt 3.1.7 Apache License, Version 2.0 certifi 2020.4.5.1 MPL-2.0 cffi 1.14.0 MIT chardet 3.0.4 LGPL cryptography 2.9 BSD or Apache License, Version 2.0 dnspython 1.16.0 BSD-like docker 4.2.0 Apache License 2.0 future 0.18.2 MIT google-auth 1.13.1 Apache 2.0 graypy 2.1.0 BSD License idna 2.9 BSD-like iso8601 0.1.12 MIT isort 4.3.21 MIT kubernetes 11.0.0 Apache License Version 2.0 netaddr 0.7.19 BSD License oauthlib 3.1.0 BSD paramiko 2.7.1 LGPL pyasn1 0.4.8 BSD pyasn1-modules 0.2.8 BSD-2-Clause pycrypto 2.6.1 Public Domain pymongo 3.10.1 Apache License, Version 2.0 python-dateutil 2.8.1 Dual License python-geoip 1.2 GNU LESSER GENERAL PUBLIC LICENSE python-ldap 3.2.0 Python style python-subprocess2 2.0.2 LGPLv3 pytz 2019.3 MIT requests 2.23.0 Apache 2.0 requests-oauthlib 1.3.0 ISC rsa 4.0 ASL 2 shellescape 3.8.1 MIT license urllib3 1.25.8 MIT Package Version License ntlm_auth 2.0 GNU Lesser General Public License kerberos 1.16-2 MIT cntlm 0.92.3 GNU General Public License version 2.0 (GPLv2) oc.user Package Licence Authors Source novnc MPL-2.0 Joel Martin (github@martintribe.org) https://kanaka.github.io/noVNC/ supervisor LICENCES.TXT Chris McDonough http://supervisord.org/ tigervnc MIT licence Tiger Dev Tea https://tigervnc.org/ openbox GNU license Mikael Magnusson http://openbox.org/ cupds GNU & LGPL Apple Inc. https://www.cups.org/ xsettingsd COPYING Daniel Erat https://github.com/derat/xsettingsd angular-filemanager AGPL-3.0 Maestro Alubia https://www.npmjs.com/package/angular-filemanager-nodejs-bridge Daemons Spawner-Service Package Licence Authors Source accept-language-parser@1.5.0 MIT Andy Royle https://github.com/opentable/accept-language-parser accept-language@3.0.18 MIT Tingan Ho https://github.com/tinganho/node-accept-language accepts@1.3.7 MIT no Author https://github.com/jshttp/accepts create-symlink@1.0.0 MIT Shinnosuke Watanabe https://github.com/shinnn/create-symlink diacritics@1.3.0 MIT Andrew Kelley https://github.com/andrewrk/node-diacritics dominant-color@0.0.1 ISC Hrvoje Simic https://github.com/shime/dominant-color event-stream@4.0.1 MIT Dominic Tarr https://github.com/dominictarr/event-stream express-validator@6.4.0 MIT Christoph Tavan https://github.com/express-validator/express-validator express@4.17.1 MIT TJ Holowaychuk https://github.com/expressjs/express find-process@1.4.3 MIT zoujie https://github.com/yibn2008/find-process geoip-lite@1.4.1 Apache-2.0 Philip Tellis https://github.com/bluesmoon/node-geoip helmet@3.22.0 MIT Adam Baldwin https://github.com/helmetjs/helmet hex-rgb@4.1.0 MIT Sindre Sorhus https://github.com/sindresorhus/hex-rgb imagemagick@0.1.3 MIT Rasmus Andersson https://github.com/rsms/node-imagemagick ini@1.3.5 ISC Isaac Z. Schlueter https://github.com/isaacs/ini ipaddr.js@1.9.1 MIT whitequark https://github.com/whitequark/ipaddr.js jsonfile@6.0.1 MIT JP Richardson https://github.com/jprichardson/node-jsonfile mime-types@2.1.26 MIT no Author https://github.com/jshttp/mime-types mmmagic@0.5.3 MIT Brian White https://github.com/mscdex/mmmagic npid@0.4.0 MIT* Mathieu Turcotte https://github.com/MathieuTurcotte/node-pid ps-node@0.1.6 MIT no Author https://github.com/neekey/ps simple-parser@0.0.0 ISC no Author no Repository walk@2.3.14 (MIT OR Apache-2.0) AJ ONeal https://git.coolaj86.com/coolaj86/fs-walk.js which@2.0.2 ISC Isaac Z. Schlueter https://github.com/isaacs/node-which wmctrljs@1.1.9 ISC kevin.voyer.developpeur@gmail.com https://github.com/Kmynes/wmctrljs ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws xwininfo@0.0.0 ISC ashaffer https://github.com/ashaffer/node-xwininfo Broadcast-service Package Licence Authors Source http-proxy@1.18.0 MIT Charlie Robbins https://github.com/http-party/node-http-proxy ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws File-Service Package Licence Authors Source busboy@0.3.1 MIT Brian White https://github.com/mscdex/busboy express@4.17.1 MIT TJ Holowaychuk https://github.com/expressjs/express fs-extra@9.0.0 MIT JP Richardson https://github.com/jprichardson/node-fs-extra helmet@3.22.0 MIT Adam Baldwin https://github.com/helmetjs/helmet mime-types@2.1.26 MIT no Author https://github.com/jshttp/mime-types mkdirp@1.0.4 MIT no Author https://github.com/isaacs/node-mkdirp urlencode@1.1.0 MIT fengmk2 https://github.com/node-modules/urlencode Printer-Service Package Licence Authors Source chokidar@3.3.1 MIT Paul Miller https://github.com/paulmillr/chokidar ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws Xterm-Service Package Licence Authors Source xterm.js MIT xtermjs team https://github.com/xtermjs/xterm.js FileManager-Service Package Licence Authors Source angular-filemanager-nodejs-bridge@0.1.3 AGPL-3.0 Fabian K\u00f6ster no Repository","title":"Open source"},{"location":"about/opensource/#open-source","text":"","title":"Open Source"},{"location":"about/opensource/#abcdesktopio-is-an-open-source-project","text":"abcdesktop.io is an open source project and is a volunteer effort. This means that it depends on people to give some of their free time to improve it and make it even better. Follow the Fork me on github links, to get access to each repository. If you are reading this, then you are probably curious or want to contribute in some way. Read on to see how you can do so.","title":"abcdesktop.io is an open source project"},{"location":"about/opensource/#open-source-packages-dependencies","text":"abcdesktop.io deplend on a lot of open source diffrents projets.","title":"Open Source packages dependencies"},{"location":"about/opensource/#webmodules","text":"Package Licence Authors Source novnc MPL-2.0 Joel Martin https://kanaka.github.io/noVNC/ os.js BSD license Anders Evenrud https://github.com/os-js/OS.js/ dropzone.js MIT license Matias Meno, www.colorglare.com https://github.com/enyo/dropzone/ hammer.js MIT license Jorik Tangelder http://hammerjs.github.io/ jquery MIT license jQuery Team https://jquery.com/ jqueryui MIT license jQuery Team https://jqueryui.com/ js-cookie MIT license Klaus Hartl & Fagner Brack https://github.com/js-cookie/ UAParser GPLv2 & MIT Faisal Salman https://github.com/faisalman/ua-parser-js Angular FileManager MIT license Jonas Sciangula Street https://github.com/joni2back/angular-filemanager Bootstrap MIT license Bootstrap team https://getbootstrap.com/ webaudio-wav-stream-player MIT license Julien Bouquillon https://github.com/revolunet/webaudio-wav-stream-player bootbox MIT license Nick Payne makeusabrew https://github.com/makeusabrew/bootbox","title":"WebModules"},{"location":"about/opensource/#container-components","text":"","title":"Container components"},{"location":"about/opensource/#nginx","text":"Package Licence Authors Source nginx BSD licence Igor Sysoev http://nginx.org/ lua GPL-Compatible Free Software Licenses team at PUC-Rio in Brazil https://www.lua.org/","title":"nginx"},{"location":"about/opensource/#ocpyos","text":"Package Version License CherryPy 18.5.0 BSD License Jinja2 2.11.1 BSD-3-Clause PyJWT 1.7.1 MIT PyNaCl 1.3.0 Apache License 2.0 PyYAML 5.3 MIT bcrypt 3.1.7 Apache License, Version 2.0 certifi 2020.4.5.1 MPL-2.0 cffi 1.14.0 MIT chardet 3.0.4 LGPL cryptography 2.9 BSD or Apache License, Version 2.0 dnspython 1.16.0 BSD-like docker 4.2.0 Apache License 2.0 future 0.18.2 MIT google-auth 1.13.1 Apache 2.0 graypy 2.1.0 BSD License idna 2.9 BSD-like iso8601 0.1.12 MIT isort 4.3.21 MIT kubernetes 11.0.0 Apache License Version 2.0 netaddr 0.7.19 BSD License oauthlib 3.1.0 BSD paramiko 2.7.1 LGPL pyasn1 0.4.8 BSD pyasn1-modules 0.2.8 BSD-2-Clause pycrypto 2.6.1 Public Domain pymongo 3.10.1 Apache License, Version 2.0 python-dateutil 2.8.1 Dual License python-geoip 1.2 GNU LESSER GENERAL PUBLIC LICENSE python-ldap 3.2.0 Python style python-subprocess2 2.0.2 LGPLv3 pytz 2019.3 MIT requests 2.23.0 Apache 2.0 requests-oauthlib 1.3.0 ISC rsa 4.0 ASL 2 shellescape 3.8.1 MIT license urllib3 1.25.8 MIT Package Version License ntlm_auth 2.0 GNU Lesser General Public License kerberos 1.16-2 MIT cntlm 0.92.3 GNU General Public License version 2.0 (GPLv2)","title":"oc.pyos"},{"location":"about/opensource/#ocuser","text":"Package Licence Authors Source novnc MPL-2.0 Joel Martin (github@martintribe.org) https://kanaka.github.io/noVNC/ supervisor LICENCES.TXT Chris McDonough http://supervisord.org/ tigervnc MIT licence Tiger Dev Tea https://tigervnc.org/ openbox GNU license Mikael Magnusson http://openbox.org/ cupds GNU & LGPL Apple Inc. https://www.cups.org/ xsettingsd COPYING Daniel Erat https://github.com/derat/xsettingsd angular-filemanager AGPL-3.0 Maestro Alubia https://www.npmjs.com/package/angular-filemanager-nodejs-bridge","title":"oc.user"},{"location":"about/opensource/#daemons","text":"","title":"Daemons"},{"location":"about/opensource/#spawner-service","text":"Package Licence Authors Source accept-language-parser@1.5.0 MIT Andy Royle https://github.com/opentable/accept-language-parser accept-language@3.0.18 MIT Tingan Ho https://github.com/tinganho/node-accept-language accepts@1.3.7 MIT no Author https://github.com/jshttp/accepts create-symlink@1.0.0 MIT Shinnosuke Watanabe https://github.com/shinnn/create-symlink diacritics@1.3.0 MIT Andrew Kelley https://github.com/andrewrk/node-diacritics dominant-color@0.0.1 ISC Hrvoje Simic https://github.com/shime/dominant-color event-stream@4.0.1 MIT Dominic Tarr https://github.com/dominictarr/event-stream express-validator@6.4.0 MIT Christoph Tavan https://github.com/express-validator/express-validator express@4.17.1 MIT TJ Holowaychuk https://github.com/expressjs/express find-process@1.4.3 MIT zoujie https://github.com/yibn2008/find-process geoip-lite@1.4.1 Apache-2.0 Philip Tellis https://github.com/bluesmoon/node-geoip helmet@3.22.0 MIT Adam Baldwin https://github.com/helmetjs/helmet hex-rgb@4.1.0 MIT Sindre Sorhus https://github.com/sindresorhus/hex-rgb imagemagick@0.1.3 MIT Rasmus Andersson https://github.com/rsms/node-imagemagick ini@1.3.5 ISC Isaac Z. Schlueter https://github.com/isaacs/ini ipaddr.js@1.9.1 MIT whitequark https://github.com/whitequark/ipaddr.js jsonfile@6.0.1 MIT JP Richardson https://github.com/jprichardson/node-jsonfile mime-types@2.1.26 MIT no Author https://github.com/jshttp/mime-types mmmagic@0.5.3 MIT Brian White https://github.com/mscdex/mmmagic npid@0.4.0 MIT* Mathieu Turcotte https://github.com/MathieuTurcotte/node-pid ps-node@0.1.6 MIT no Author https://github.com/neekey/ps simple-parser@0.0.0 ISC no Author no Repository walk@2.3.14 (MIT OR Apache-2.0) AJ ONeal https://git.coolaj86.com/coolaj86/fs-walk.js which@2.0.2 ISC Isaac Z. Schlueter https://github.com/isaacs/node-which wmctrljs@1.1.9 ISC kevin.voyer.developpeur@gmail.com https://github.com/Kmynes/wmctrljs ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws xwininfo@0.0.0 ISC ashaffer https://github.com/ashaffer/node-xwininfo","title":"Spawner-Service"},{"location":"about/opensource/#broadcast-service","text":"Package Licence Authors Source http-proxy@1.18.0 MIT Charlie Robbins https://github.com/http-party/node-http-proxy ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws","title":"Broadcast-service"},{"location":"about/opensource/#file-service","text":"Package Licence Authors Source busboy@0.3.1 MIT Brian White https://github.com/mscdex/busboy express@4.17.1 MIT TJ Holowaychuk https://github.com/expressjs/express fs-extra@9.0.0 MIT JP Richardson https://github.com/jprichardson/node-fs-extra helmet@3.22.0 MIT Adam Baldwin https://github.com/helmetjs/helmet mime-types@2.1.26 MIT no Author https://github.com/jshttp/mime-types mkdirp@1.0.4 MIT no Author https://github.com/isaacs/node-mkdirp urlencode@1.1.0 MIT fengmk2 https://github.com/node-modules/urlencode","title":"File-Service"},{"location":"about/opensource/#printer-service","text":"Package Licence Authors Source chokidar@3.3.1 MIT Paul Miller https://github.com/paulmillr/chokidar ws@7.2.3 MIT Einar Otto Stangvik https://github.com/websockets/ws","title":"Printer-Service"},{"location":"about/opensource/#xterm-service","text":"Package Licence Authors Source xterm.js MIT xtermjs team https://github.com/xtermjs/xterm.js","title":"Xterm-Service"},{"location":"about/opensource/#filemanager-service","text":"Package Licence Authors Source angular-filemanager-nodejs-bridge@0.1.3 AGPL-3.0 Fabian K\u00f6ster no Repository","title":"FileManager-Service"},{"location":"about/otherrelatedprojects/","text":"Others related projets Welcome to the others related projects section, where you can find some projects related to use cloud application inside a web browser. https://www.kasmweb.com","title":"Other Related Projects"},{"location":"about/otherrelatedprojects/#others-related-projets","text":"Welcome to the others related projects section, where you can find some projects related to use cloud application inside a web browser. https://www.kasmweb.com","title":"Others related projets"},{"location":"about/play_sound_in_docker/","text":"Play sound inside a docker to a web browser Sound in docker is the big challenge As VNC does not support sound, we have to forward a Pulseaudio null-sink output to the user browser, with no latency. Release 1.0 : use the pulseaudio http stream and play wave data (poor sound quality but works in https only) Release 2.0 : use janus webrtc gateway, send pulseaudio rtp stream to janus, and play sound using the web browser webrtc stack (good sound quality) Release 3.0 : use virtual microphone using gstreamer and pulseaudio Realy fun projets: use virtual microphone using gstreamer and pulseaudio and Get Pulseaduio sink from webrtc To be implemented Release 1.0: Pulseaudio with a simple module-http-protocol-tcp and a javascript no latency wav stream player webaudio-wav-stream-player No latency wav stream player using browser fetch streaming API and WebAudio Pulseaudio with module-http-protocol-tcp A proof-of-concept HTTP module, which can be used to introspect the current status of the PulseAudio daemon using HTTP. Just load this module and point your browser to http://localhost:4714/. This module takes the same arguments as module-cli-protocol-tcp. Create Pulseaudio null-sink # defined with desktop 1.0 load-module module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 ra te=11025'\" Then use load-module module-http-protocol-tcp Read the http stream data, using fetch call : $target is the container Ip Address $pulseaudio_http_port is the pulseaudio http port ( by default, the http port vallue is http://$target:$pulseaudio_http_port/listen/source/u8_1_11025.monitor; Pulseaudio module-http-protocol-tcp does not send wav formated header . We need to build a new wav header for each receved fragment. This is done in wavify.js file : // // Write a proper WAVE header for the given buffer. // format ULAW or ALAW // Offset is hardcoded function wavify_law(data, numberOfChannels, sampleRate, bitsPerSample, format ) { // // total header : 4 + 26 + 12 + 8 = 50 // // and the data and size: 50 + 8 ( data + 32 bits for the size ) var header_length = 58; // 4 + 26 + 12 + 8 + 8 = 58 var total_length = header_length + data.byteLength; // bitsPerSample MUST BE 8 bits // The default byte ordering assumed for WAVE data files is little-endian. var header = new ArrayBuffer(header_length); var d = new DataView(header); d.setUint8(0, \"R\".charCodeAt(0)); d.setUint8(1, \"I\".charCodeAt(0)); d.setUint8(2, \"F\".charCodeAt(0)); d.setUint8(3, \"F\".charCodeAt(0)); // All integers MUST be set in bigEndian format // Wave chunks containing format information and sampled data // cksize 4 Chunk size: 4+n // 4: for sizeof( 'WAVE' ) + n // n: Wave chunks containing format information and sampled data //var data_length = d.setUint32(4, data.byteLength / 2 + 44, true); //bitsPerSample data.byteLength + 8+16+12 d.setUint32(4, total_length, true); // write 4 bytes d.setUint8(8, \"W\".charCodeAt(0)); d.setUint8(9, \"A\".charCodeAt(0)); d.setUint8(10, \"V\".charCodeAt(0)); d.setUint8(11, \"E\".charCodeAt(0)); // write 4 bytes d.setUint8(12, \"f\".charCodeAt(0)); d.setUint8(13, \"m\".charCodeAt(0)); d.setUint8(14, \"t\".charCodeAt(0)); d.setUint8(15, \" \".charCodeAt(0)); // All integers MUST be set in bigEndian format // Subchunk1Size 16 for PCM. // Offset 16 // Size 4 // This is the size of the rest of the Subchunk which follows this number. // The size of the rest of this subchunk. // All integers MUST be set in bigEndian format // d.setUint32(16, 16, true); // cksize 4 Chunk size: 16, 18 or 40 var chunksize = 18; d.setUint32(16, chunksize, true); // The format of the wave data, which will be 1 for uncompressed PCM data. // All integers MUST be set in bigEndian format // FORMAT must be WAVE_FORMAT_ULAW or WAVE_FORMAT_ALAW d.setUint16(20, format, true); // Indicates if the data is mono, stereo, or something else. // NumChannels Mono = 1, Stereo = 2, etc. // All integers MUST be set in bigEndian format d.setUint16(22, numberOfChannels, true); // The sample rate per second. // SampleRate 8000, 44100, etc. // All integers MUST be set in bigEndian format d.setUint32(24, sampleRate, true); // byteRate == SampleRate * NumChannels * BitsPerSample/8 // All integers MUST be set in bigEndian format var byteRate = sampleRate * numberOfChannels * bitsPerSample/8; d.setUint32(28, byteRate, true ); // blockAlign == NumChannels * BitsPerSample/8 // The number of bytes for one sample including all channels. var blockAlign = numberOfChannels * bitsPerSample / 8; // All integers MUST be set in bigEndian format d.setUint16(32, blockAlign, true ); // BitsPerSample 8 bits = 8, 16 bits = 16, etc. d.setUint16(34, bitsPerSample, true); // Wave files may include an additional field, usually reserved for non-PCM formats: // bits per Sample // Size of the extension // 2 bytes // Offset var cbSize = 0; d.setUint16(36, cbSize, true); d.setUint8(38, \"f\".charCodeAt(0)); d.setUint8(39, \"a\".charCodeAt(0)); d.setUint8(40, \"c\".charCodeAt(0)); d.setUint8(41, \"t\".charCodeAt(0)); var cksize = 4; d.setUint32(42, cksize, true); var dwSampleLength = data.byteLength; // Number of samples ( per channel ) d.setUint32(46, dwSampleLength, true); // 50 d.setUint8(50, \"d\".charCodeAt(0)); d.setUint8(51, \"a\".charCodeAt(0)); d.setUint8(52, \"t\".charCodeAt(0)); d.setUint8(53, \"a\".charCodeAt(0)); d.setUint32(54, data.byteLength, true); //58 // data must pad byte 0 or 1 if n is odd return concat(header, data); } Then use the WavPlayer.js from Julien Bouquillon https://github.com/revolunet/webaudio-wav-stream-player to read data and send to javascript AudioContext() This Release is getting glitchy audio. In Chrome, the stream plays with a slight crackle. Read the issue https://github.com/revolunet/webaudio-wav-stream-player/issues/10 It works, uses only HTTP protocol but i can't fix the glitchy audio. We find another way to stream sound to web browser device, using the WebRTC stack and RTP pulseaudio. Release 2.0: Pulseaudio with a WebRTC gateway Architecture Janus WebRTC Gateway with ICE server. Janus act as WebRTC gateway, listen for udp RTP stream from Pulseaudio and forward it to user web browser. Pulseaudio with module-rtp-send Create a null-sink formated alaw and send it to the WebRTC gateway udp port on localhost. ### Load the RTP sender module (also configured via paprefs, see above) load-module module-null-sink sink_name=rtp_alaw format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink alaw'\" load-module module-rtp-send source=rtp_alaw.monitor destination_ip=127.0.0.1 port=5000 channels=1 format=alaw Add a RTP stream to Janus WebRTC gateway [pulseaudio-rtp-pcma-8000] type = rtp id = 1 description = pcam/8000 live stream coming from pulseaudio audio = yes video = no audioport = 5000 audiopt = 8 audiortpmap = PCMA/8000 Read the dedicated webrtc chapter to configure and get more informations about the janus WebRTC","title":"Play sound in docker to a webprojet"},{"location":"about/play_sound_in_docker/#play-sound-inside-a-docker-to-a-web-browser","text":"","title":"Play sound inside a docker to a web browser"},{"location":"about/play_sound_in_docker/#sound-in-docker-is-the-big-challenge","text":"As VNC does not support sound, we have to forward a Pulseaudio null-sink output to the user browser, with no latency. Release 1.0 : use the pulseaudio http stream and play wave data (poor sound quality but works in https only) Release 2.0 : use janus webrtc gateway, send pulseaudio rtp stream to janus, and play sound using the web browser webrtc stack (good sound quality) Release 3.0 : use virtual microphone using gstreamer and pulseaudio Realy fun projets: use virtual microphone using gstreamer and pulseaudio and Get Pulseaduio sink from webrtc To be implemented","title":"Sound in docker is the big challenge"},{"location":"about/play_sound_in_docker/#release-10-pulseaudio-with-a-simple-module-http-protocol-tcp-and-a-javascript-no-latency-wav-stream-player","text":"webaudio-wav-stream-player No latency wav stream player using browser fetch streaming API and WebAudio Pulseaudio with module-http-protocol-tcp A proof-of-concept HTTP module, which can be used to introspect the current status of the PulseAudio daemon using HTTP. Just load this module and point your browser to http://localhost:4714/. This module takes the same arguments as module-cli-protocol-tcp. Create Pulseaudio null-sink # defined with desktop 1.0 load-module module-null-sink sink_name=u8_1_11025 format=u8 channels=1 rate=11025 sink_properties=\"device.description='default format=u8 c=1 ra te=11025'\" Then use load-module module-http-protocol-tcp Read the http stream data, using fetch call : $target is the container Ip Address $pulseaudio_http_port is the pulseaudio http port ( by default, the http port vallue is http://$target:$pulseaudio_http_port/listen/source/u8_1_11025.monitor; Pulseaudio module-http-protocol-tcp does not send wav formated header . We need to build a new wav header for each receved fragment. This is done in wavify.js file : // // Write a proper WAVE header for the given buffer. // format ULAW or ALAW // Offset is hardcoded function wavify_law(data, numberOfChannels, sampleRate, bitsPerSample, format ) { // // total header : 4 + 26 + 12 + 8 = 50 // // and the data and size: 50 + 8 ( data + 32 bits for the size ) var header_length = 58; // 4 + 26 + 12 + 8 + 8 = 58 var total_length = header_length + data.byteLength; // bitsPerSample MUST BE 8 bits // The default byte ordering assumed for WAVE data files is little-endian. var header = new ArrayBuffer(header_length); var d = new DataView(header); d.setUint8(0, \"R\".charCodeAt(0)); d.setUint8(1, \"I\".charCodeAt(0)); d.setUint8(2, \"F\".charCodeAt(0)); d.setUint8(3, \"F\".charCodeAt(0)); // All integers MUST be set in bigEndian format // Wave chunks containing format information and sampled data // cksize 4 Chunk size: 4+n // 4: for sizeof( 'WAVE' ) + n // n: Wave chunks containing format information and sampled data //var data_length = d.setUint32(4, data.byteLength / 2 + 44, true); //bitsPerSample data.byteLength + 8+16+12 d.setUint32(4, total_length, true); // write 4 bytes d.setUint8(8, \"W\".charCodeAt(0)); d.setUint8(9, \"A\".charCodeAt(0)); d.setUint8(10, \"V\".charCodeAt(0)); d.setUint8(11, \"E\".charCodeAt(0)); // write 4 bytes d.setUint8(12, \"f\".charCodeAt(0)); d.setUint8(13, \"m\".charCodeAt(0)); d.setUint8(14, \"t\".charCodeAt(0)); d.setUint8(15, \" \".charCodeAt(0)); // All integers MUST be set in bigEndian format // Subchunk1Size 16 for PCM. // Offset 16 // Size 4 // This is the size of the rest of the Subchunk which follows this number. // The size of the rest of this subchunk. // All integers MUST be set in bigEndian format // d.setUint32(16, 16, true); // cksize 4 Chunk size: 16, 18 or 40 var chunksize = 18; d.setUint32(16, chunksize, true); // The format of the wave data, which will be 1 for uncompressed PCM data. // All integers MUST be set in bigEndian format // FORMAT must be WAVE_FORMAT_ULAW or WAVE_FORMAT_ALAW d.setUint16(20, format, true); // Indicates if the data is mono, stereo, or something else. // NumChannels Mono = 1, Stereo = 2, etc. // All integers MUST be set in bigEndian format d.setUint16(22, numberOfChannels, true); // The sample rate per second. // SampleRate 8000, 44100, etc. // All integers MUST be set in bigEndian format d.setUint32(24, sampleRate, true); // byteRate == SampleRate * NumChannels * BitsPerSample/8 // All integers MUST be set in bigEndian format var byteRate = sampleRate * numberOfChannels * bitsPerSample/8; d.setUint32(28, byteRate, true ); // blockAlign == NumChannels * BitsPerSample/8 // The number of bytes for one sample including all channels. var blockAlign = numberOfChannels * bitsPerSample / 8; // All integers MUST be set in bigEndian format d.setUint16(32, blockAlign, true ); // BitsPerSample 8 bits = 8, 16 bits = 16, etc. d.setUint16(34, bitsPerSample, true); // Wave files may include an additional field, usually reserved for non-PCM formats: // bits per Sample // Size of the extension // 2 bytes // Offset var cbSize = 0; d.setUint16(36, cbSize, true); d.setUint8(38, \"f\".charCodeAt(0)); d.setUint8(39, \"a\".charCodeAt(0)); d.setUint8(40, \"c\".charCodeAt(0)); d.setUint8(41, \"t\".charCodeAt(0)); var cksize = 4; d.setUint32(42, cksize, true); var dwSampleLength = data.byteLength; // Number of samples ( per channel ) d.setUint32(46, dwSampleLength, true); // 50 d.setUint8(50, \"d\".charCodeAt(0)); d.setUint8(51, \"a\".charCodeAt(0)); d.setUint8(52, \"t\".charCodeAt(0)); d.setUint8(53, \"a\".charCodeAt(0)); d.setUint32(54, data.byteLength, true); //58 // data must pad byte 0 or 1 if n is odd return concat(header, data); } Then use the WavPlayer.js from Julien Bouquillon https://github.com/revolunet/webaudio-wav-stream-player to read data and send to javascript AudioContext() This Release is getting glitchy audio. In Chrome, the stream plays with a slight crackle. Read the issue https://github.com/revolunet/webaudio-wav-stream-player/issues/10 It works, uses only HTTP protocol but i can't fix the glitchy audio. We find another way to stream sound to web browser device, using the WebRTC stack and RTP pulseaudio.","title":"Release 1.0: Pulseaudio with a simple module-http-protocol-tcp and a javascript no latency wav stream player"},{"location":"about/play_sound_in_docker/#release-20-pulseaudio-with-a-webrtc-gateway","text":"","title":"Release 2.0: Pulseaudio with a WebRTC gateway"},{"location":"about/play_sound_in_docker/#architecture","text":"Janus WebRTC Gateway with ICE server. Janus act as WebRTC gateway, listen for udp RTP stream from Pulseaudio and forward it to user web browser. Pulseaudio with module-rtp-send Create a null-sink formated alaw and send it to the WebRTC gateway udp port on localhost. ### Load the RTP sender module (also configured via paprefs, see above) load-module module-null-sink sink_name=rtp_alaw format=alaw channels=1 rate=8000 sink_properties=\"device.description='RTP Multicast Sink alaw'\" load-module module-rtp-send source=rtp_alaw.monitor destination_ip=127.0.0.1 port=5000 channels=1 format=alaw Add a RTP stream to Janus WebRTC gateway [pulseaudio-rtp-pcma-8000] type = rtp id = 1 description = pcam/8000 live stream coming from pulseaudio audio = yes video = no audioport = 5000 audiopt = 8 audiortpmap = PCMA/8000 Read the dedicated webrtc chapter to configure and get more informations about the janus WebRTC","title":"Architecture"},{"location":"about/version/","text":"Documentation Version The current documentation version is 0.1 Location This documentation is located at https://github.com/abcdesktopio/docs Installing Make Install the Make package using apt-get sudo apt-get install make Installing MkDocs Install the mkdocs package using the Makefile : make install make install command runs : pip install mkdocs pip install mkdocs-material Make sure that the pip command is installed on you system. How to build the documentation Build documentation files git clone https://github.com/abcdesktopio/docs cd docs make docs INFO - Cleaning site directory INFO - Building documentation to directory: /home/alex/src/docs/opsdocs/site All HTML files are located in the building documentation directory How to view the documentation Serve documentation files make serve INFO - Serving on http://127.0.0.1:8000 INFO - Start watching changes INFO - Start detecting changes Now connect http://127.0.0.1:8000 with any Web Navigator to browse through the documentation.","title":"Documentation"},{"location":"about/version/#documentation","text":"","title":"Documentation"},{"location":"about/version/#version","text":"The current documentation version is 0.1","title":"Version"},{"location":"about/version/#location","text":"This documentation is located at https://github.com/abcdesktopio/docs","title":"Location"},{"location":"about/version/#installing-make","text":"Install the Make package using apt-get sudo apt-get install make","title":"Installing Make"},{"location":"about/version/#installing-mkdocs","text":"Install the mkdocs package using the Makefile : make install make install command runs : pip install mkdocs pip install mkdocs-material Make sure that the pip command is installed on you system.","title":"Installing MkDocs"},{"location":"about/version/#how-to-build-the-documentation","text":"","title":"How to build the documentation"},{"location":"about/version/#build-documentation-files","text":"git clone https://github.com/abcdesktopio/docs cd docs make docs INFO - Cleaning site directory INFO - Building documentation to directory: /home/alex/src/docs/opsdocs/site All HTML files are located in the building documentation directory","title":"Build documentation files"},{"location":"about/version/#how-to-view-the-documentation","text":"","title":"How to view the documentation"},{"location":"about/version/#serve-documentation-files","text":"make serve INFO - Serving on http://127.0.0.1:8000 INFO - Start watching changes INFO - Start detecting changes Now connect http://127.0.0.1:8000 with any Web Navigator to browse through the documentation.","title":"Serve documentation files"},{"location":"api/backend/launchdesktop/","text":"{\"status\": 200, \"result\": {\"userid\": \"7d2ecad7-2154-4529-85b4-1ab037c29fed\", \"jwt_user_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJleHAiOjE2NjM2ODYyMzEsImF1dGgiOnsicHJvdmlkZXIiOiJhbm9ueW1vdXMiLCJwcm92aWRlcnR5cGUiOiJhbm9ueW1vdXMiLCJkYXRhIjp7ImxhYmVscyI6eyJtYWlzb25hbGV4IjoidHJ1ZSJ9fX0sInVzZXIiOnsibmFtZSI6IkFub255bW91cyIsInVzZXJpZCI6IjdkMmVjYWQ3LTIxNTQtNDUyOS04NWI0LTFhYjAzN2MyOWZlZCIsIm5vZGVob3N0bmFtZSI6bnVsbH0sInJvbGVzIjp7fX0.Lz6PbYz-KPPXJWyBaWuXF60YCQEv9z9Hsr8Ik2rHELBhSAd00eeqrZ0js9aLJ4uHsU1YJQQ2mfupHOpUEgo7AZCJm3HgjJRseWI-ftDV3NJKo2U76Q7RsIZQlSu9O1gK42XL_IkZmB3kLwTv0-Q-3EO6cmL5aP2Nu0nc9gVgxPA\", \"name\": \"Anonymous\", \"provider\": \"anonymous\", \"expire_in\": 14400}, \"message\": \"Authentication successful in 0.01 s\"} https://ocv5.pepins.net/API/composer/launchdesktop {\"status\": 200, \"result\": {\"target_ip\": \"ocv5.pepins.net\", \"vncpassword\": \"gCalVYJoJdI15sI\", \"authorization\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJrZXkiOjAsImhhc2giOiJSdTJmWDAwZW5hSU5OT2dOZ2dCVU1pQ01nQkdrQmZRTnRJSzAweWFXU1FSbUc5dkpiYUFHUXJ5ekpPY0h1QmIyZTRyOXgrMzdINDZZZFlTcThESlZUczdDTXZnamxGajFIZVJ2Y25YNFFCOENkcWFBeE5xTW5XdkMxNVlpNkNtaXlRRmpFYkJlZFlPMWtEazZPNjB6R2wxN3RZZ0kvQ0ZJejdQcVJyL1BHM3c9IiwiZXhwIjoxNjYzNjg1OTI2fQ.is9k5bdUy10_u2MP4Z5tecKFUsdCcS4v_CsnEB6y4dDt4SuKebYz8MA4zCHDpP_Hi13RXVZDW9ax4Crzj0q-WvD_IgPjiz2qdjf7e-2TQ4TbnrqzEngHo6BVkd8vm1vvBE11RGRgufxu6oreGfPxnTtU9ly53sn-j2O3DVR5glA\", \"websocketrouting\": \"http_origin\", \"websockettcpport\": 6081, \"expire_in\": 14400}, \"message\": \"ok\"}","title":"Launchdesktop"},{"location":"applications/","text":"oc.apps To get more informations Please, read the public documentation web site: * https://www.abcdesktop.io * https://abcdesktopio.github.io/ abcdesktop application dockerfiles DockerFile generator from json file to build applications images run commands $ make dockerfile $ make build this command build all generated Dockerfile To build documentation files $ make docs this command build all md files, and build list.md","title":"oc.apps"},{"location":"applications/#ocapps","text":"","title":"oc.apps"},{"location":"applications/#to-get-more-informations","text":"Please, read the public documentation web site: * https://www.abcdesktop.io * https://abcdesktopio.github.io/","title":"To get more informations"},{"location":"applications/#abcdesktop-application-dockerfiles","text":"DockerFile generator from json file to build applications images run commands $ make dockerfile $ make build this command build all generated Dockerfile To build documentation files $ make docs this command build all md files, and build list.md","title":"abcdesktop application dockerfiles"},{"location":"applications/2048/","text":"2048 inherite from abcdesktopio/oc.template.gtk use ubuntu package 2048-qt Display name \"2048\" path \"/usr/games/2048-qt\"","title":"2048"},{"location":"applications/2048/#2048","text":"","title":"2048"},{"location":"applications/2048/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/2048/#use-ubuntu-package","text":"2048-qt","title":"use ubuntu package"},{"location":"applications/2048/#display-name","text":"\"2048\"","title":"Display name"},{"location":"applications/2048/#path","text":"\"/usr/games/2048-qt\"","title":"path"},{"location":"applications/astromenace/","text":"astromenace inherite from abcdesktopio/oc.template.gtk use ubuntu package astromenace Display name \"astromenace\" path \"/usr/games/AstroMenace\"","title":"astromenace"},{"location":"applications/astromenace/#astromenace","text":"","title":"astromenace"},{"location":"applications/astromenace/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/astromenace/#use-ubuntu-package","text":"astromenace","title":"use ubuntu package"},{"location":"applications/astromenace/#display-name","text":"\"astromenace\"","title":"Display name"},{"location":"applications/astromenace/#path","text":"\"/usr/games/AstroMenace\"","title":"path"},{"location":"applications/atom/","text":"Atom inherite from abcdesktopio/oc.template.gtk use ubuntu package libxss1 atom aspell Arguments \"-f\" Display name \"Atom\" path \"/usr/bin/atom\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN apt-get update && apt-get install --yes libxss1 && apt-get clean,RUN wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | apt-key add -,RUN echo \"deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main\" > /etc/apt/sources.list.d/atom.list,RUN apt-get update && apt-get install --no-install-recommends --yes $(apt-cache search aspell- | awk '{print $1 }') && rm -rf /var/lib/apt/lists/*","title":"Atom"},{"location":"applications/atom/#atom","text":"","title":"Atom"},{"location":"applications/atom/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/atom/#use-ubuntu-package","text":"libxss1 atom aspell","title":"use ubuntu package"},{"location":"applications/atom/#arguments","text":"\"-f\"","title":"Arguments"},{"location":"applications/atom/#display-name","text":"\"Atom\"","title":"Display name"},{"location":"applications/atom/#path","text":"\"/usr/bin/atom\"","title":"path"},{"location":"applications/atom/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN apt-get update && apt-get install --yes libxss1 && apt-get clean,RUN wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | apt-key add -,RUN echo \"deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main\" > /etc/apt/sources.list.d/atom.list,RUN apt-get update && apt-get install --no-install-recommends --yes $(apt-cache search aspell- | awk '{print $1 }') && rm -rf /var/lib/apt/lists/*","title":"Pre run command"},{"location":"applications/base/","text":"Base inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--base\" Display name \"Base\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" Mime Type \"application/vnd.oasis.opendocument.database;application/vnd.sun.xml.base;\" File extensions \"odb\" Legacy file extensions \"odb\"","title":"Base"},{"location":"applications/base/#base","text":"","title":"Base"},{"location":"applications/base/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/base/#arguments","text":"\"--base\"","title":"Arguments"},{"location":"applications/base/#display-name","text":"\"Base\"","title":"Display name"},{"location":"applications/base/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/base/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/base/#mime-type","text":"\"application/vnd.oasis.opendocument.database;application/vnd.sun.xml.base;\"","title":"Mime Type"},{"location":"applications/base/#file-extensions","text":"\"odb\"","title":"File extensions"},{"location":"applications/base/#legacy-file-extensions","text":"\"odb\"","title":"Legacy file extensions"},{"location":"applications/blender/","text":"blender inherite from abcdesktopio/oc.template.gtk Display name \"Blender\" path \"/usr/local/blender-2.90.0-linux64/blender\" Mime Type \"application/x-blender\" File extensions \"blend,obj,fbx,3ds,ply,stl\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes xz-utils wget && apt-get clean,RUN apt-get update && apt-get install --yes libx11-6 libxi6 libxxf86vm1 libxfixes3 libxrender1 libgl1 && apt-get clean,RUN wget -O /tmp/blender.tar.xz https://download.blender.org/release/Blender2.90/blender-2.90.0-linux64.tar.xz && xz -d /tmp/blender.tar.xz && cd /usr/local && tar -xvf /tmp/blender.tar && rm -rf /tmp/blender.tar","title":"blender"},{"location":"applications/blender/#blender","text":"","title":"blender"},{"location":"applications/blender/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/blender/#display-name","text":"\"Blender\"","title":"Display name"},{"location":"applications/blender/#path","text":"\"/usr/local/blender-2.90.0-linux64/blender\"","title":"path"},{"location":"applications/blender/#mime-type","text":"\"application/x-blender\"","title":"Mime Type"},{"location":"applications/blender/#file-extensions","text":"\"blend,obj,fbx,3ds,ply,stl\"","title":"File extensions"},{"location":"applications/blender/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes xz-utils wget && apt-get clean,RUN apt-get update && apt-get install --yes libx11-6 libxi6 libxxf86vm1 libxfixes3 libxrender1 libgl1 && apt-get clean,RUN wget -O /tmp/blender.tar.xz https://download.blender.org/release/Blender2.90/blender-2.90.0-linux64.tar.xz && xz -d /tmp/blender.tar.xz && cd /usr/local && tar -xvf /tmp/blender.tar && rm -rf /tmp/blender.tar","title":"Pre run command"},{"location":"applications/calc/","text":"Calc inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--calc\" Display name \"Calc\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" showinview \"dock\" Mime Type \"application/vnd.oasis.opendocument.spreadsheet;application/vnd.oasis.opendocument.spreadsheet-template;application/vnd.sun.xml.calc;application/vnd.sun.xml.calc.template;application/msexcel;application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;application/vnd.ms-excel.sheet.macroenabled.12;application/vnd.openxmlformats-officedocument.spreadsheetml.template;application/vnd.ms-excel.template.macroenabled.12;application/vnd.ms-excel.sheet.binary.macroenabled.12;text/csv;application/x-dbf;text/spreadsheet;application/csv;application/excel;application/tab-separated-values;application/vnd.lotus-1-2-3;application/vnd.oasis.opendocument.chart;application/vnd.oasis.opendocument.chart-template;application/x-dbase;application/x-dos_ms_excel;application/x-excel;application/x-msexcel;application/x-ms-excel;application/x-quattropro;application/x-123;text/comma-separated-values;text/tab-separated-values;text/x-comma-separated-values;text/x-csv;application/vnd.oasis.opendocument.spreadsheet-flat-xml;application/vnd.ms-works;application/x-iwork-numbers-sffnumbers;\" File extensions \"ods;ots;sxc;stc;fods;uos;uof;xml;xlsx;xlsm;xltm;xltx;xlsb;xls;xlm;xlc;xlw;xlk;xlt;dif;dbf;htm;html;wk1;wks;123;wb2;rtf;slk;sylk;csv;numbers;dummy;cwk;wps;wk3;wq1;wq2\" Legacy file extensions \"ods;ots;csv\"","title":"Calc"},{"location":"applications/calc/#calc","text":"","title":"Calc"},{"location":"applications/calc/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/calc/#arguments","text":"\"--calc\"","title":"Arguments"},{"location":"applications/calc/#display-name","text":"\"Calc\"","title":"Display name"},{"location":"applications/calc/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/calc/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/calc/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/calc/#mime-type","text":"\"application/vnd.oasis.opendocument.spreadsheet;application/vnd.oasis.opendocument.spreadsheet-template;application/vnd.sun.xml.calc;application/vnd.sun.xml.calc.template;application/msexcel;application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;application/vnd.ms-excel.sheet.macroenabled.12;application/vnd.openxmlformats-officedocument.spreadsheetml.template;application/vnd.ms-excel.template.macroenabled.12;application/vnd.ms-excel.sheet.binary.macroenabled.12;text/csv;application/x-dbf;text/spreadsheet;application/csv;application/excel;application/tab-separated-values;application/vnd.lotus-1-2-3;application/vnd.oasis.opendocument.chart;application/vnd.oasis.opendocument.chart-template;application/x-dbase;application/x-dos_ms_excel;application/x-excel;application/x-msexcel;application/x-ms-excel;application/x-quattropro;application/x-123;text/comma-separated-values;text/tab-separated-values;text/x-comma-separated-values;text/x-csv;application/vnd.oasis.opendocument.spreadsheet-flat-xml;application/vnd.ms-works;application/x-iwork-numbers-sffnumbers;\"","title":"Mime Type"},{"location":"applications/calc/#file-extensions","text":"\"ods;ots;sxc;stc;fods;uos;uof;xml;xlsx;xlsm;xltm;xltx;xlsb;xls;xlm;xlc;xlw;xlk;xlt;dif;dbf;htm;html;wk1;wks;123;wb2;rtf;slk;sylk;csv;numbers;dummy;cwk;wps;wk3;wq1;wq2\"","title":"File extensions"},{"location":"applications/calc/#legacy-file-extensions","text":"\"ods;ots;csv\"","title":"Legacy file extensions"},{"location":"applications/calculator/","text":"Calculator inherite from abcdesktopio/oc.template.gtk.elementary use ubuntu package pantheon-calculator Display name \"Calculator\" path \"/usr/bin/io.elementary.calculator\" Mount Home volume \"False\"","title":"Calculator"},{"location":"applications/calculator/#calculator","text":"","title":"Calculator"},{"location":"applications/calculator/#inherite-from","text":"abcdesktopio/oc.template.gtk.elementary","title":"inherite from"},{"location":"applications/calculator/#use-ubuntu-package","text":"pantheon-calculator","title":"use ubuntu package"},{"location":"applications/calculator/#display-name","text":"\"Calculator\"","title":"Display name"},{"location":"applications/calculator/#path","text":"\"/usr/bin/io.elementary.calculator\"","title":"path"},{"location":"applications/calculator/#mount-home-volume","text":"\"False\"","title":"Mount Home volume"},{"location":"applications/chess/","text":"Chess inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package dbus-x11 stockfish gnuchess sjeng crafty gnome-chess Display name \"Chess\" path \"/usr/games/gnome-chess\" Mime Type \"application/x-chess-pgn\"","title":"Chess"},{"location":"applications/chess/#chess","text":"","title":"Chess"},{"location":"applications/chess/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/chess/#use-ubuntu-package","text":"dbus-x11 stockfish gnuchess sjeng crafty gnome-chess","title":"use ubuntu package"},{"location":"applications/chess/#display-name","text":"\"Chess\"","title":"Display name"},{"location":"applications/chess/#path","text":"\"/usr/games/gnome-chess\"","title":"path"},{"location":"applications/chess/#mime-type","text":"\"application/x-chess-pgn\"","title":"Mime Type"},{"location":"applications/chrome/","text":"chrome inherite from abcdesktopio/oc.template.gtk use ubuntu package google-chrome-stable Arguments \"-no-sandbox --disable-gpu\" Display name \"Chrome\" path \"/usr/bin/google-chrome-stable\" Mime Type \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;video/webm;\" File extensions \"html;xml;gif\" Legacy file extensions \"html;xml\" Share size \"2gb\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -,RUN echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list","title":"chrome"},{"location":"applications/chrome/#chrome","text":"","title":"chrome"},{"location":"applications/chrome/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/chrome/#use-ubuntu-package","text":"google-chrome-stable","title":"use ubuntu package"},{"location":"applications/chrome/#arguments","text":"\"-no-sandbox --disable-gpu\"","title":"Arguments"},{"location":"applications/chrome/#display-name","text":"\"Chrome\"","title":"Display name"},{"location":"applications/chrome/#path","text":"\"/usr/bin/google-chrome-stable\"","title":"path"},{"location":"applications/chrome/#mime-type","text":"\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;video/webm;\"","title":"Mime Type"},{"location":"applications/chrome/#file-extensions","text":"\"html;xml;gif\"","title":"File extensions"},{"location":"applications/chrome/#legacy-file-extensions","text":"\"html;xml\"","title":"Legacy file extensions"},{"location":"applications/chrome/#share-size","text":"\"2gb\"","title":"Share size"},{"location":"applications/chrome/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -,RUN echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list","title":"Pre run command"},{"location":"applications/citrix/","text":"citrix inherite from abcdesktopio/oc.template.gtk.18.04 Arguments \"-icaroot /opt/Citrix/ICAClient\" Display name \"citrix-client\" path \"/opt/Citrix/ICAClient/wfica\" Mime Type \"application/x-ica;\" Pre run command COPY icaclient_amd64.deb /tmp/icaclient_amd64.deb,RUN apt-get install --no-install-recommends --yes /tmp/icaclient_amd64.deb && apt-get clean && rm /tmp/icaclient_amd64.deb","title":"citrix"},{"location":"applications/citrix/#citrix","text":"","title":"citrix"},{"location":"applications/citrix/#inherite-from","text":"abcdesktopio/oc.template.gtk.18.04","title":"inherite from"},{"location":"applications/citrix/#arguments","text":"\"-icaroot /opt/Citrix/ICAClient\"","title":"Arguments"},{"location":"applications/citrix/#display-name","text":"\"citrix-client\"","title":"Display name"},{"location":"applications/citrix/#path","text":"\"/opt/Citrix/ICAClient/wfica\"","title":"path"},{"location":"applications/citrix/#mime-type","text":"\"application/x-ica;\"","title":"Mime Type"},{"location":"applications/citrix/#pre-run-command","text":"COPY icaclient_amd64.deb /tmp/icaclient_amd64.deb,RUN apt-get install --no-install-recommends --yes /tmp/icaclient_amd64.deb && apt-get clean && rm /tmp/icaclient_amd64.deb","title":"Pre run command"},{"location":"applications/cloudfoundry/","text":"cloudFoundry inherite from abcdesktopio/oc.template.gtk.fulldev Arguments \"--disable-factory --class pivotalio.cf\" Display name \"Cloud Foundry cli\" path \"/usr/bin/gnome-terminal\"","title":"cloudFoundry"},{"location":"applications/cloudfoundry/#cloudfoundry","text":"","title":"cloudFoundry"},{"location":"applications/cloudfoundry/#inherite-from","text":"abcdesktopio/oc.template.gtk.fulldev","title":"inherite from"},{"location":"applications/cloudfoundry/#arguments","text":"\"--disable-factory --class pivotalio.cf\"","title":"Arguments"},{"location":"applications/cloudfoundry/#display-name","text":"\"Cloud Foundry cli\"","title":"Display name"},{"location":"applications/cloudfoundry/#path","text":"\"/usr/bin/gnome-terminal\"","title":"path"},{"location":"applications/dia/","text":"Dia inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package dia dia-shapes Display name \"Dia\" path \"/usr/bin/dia\" Mime Type \"application/x-dia-diagram;\" File extensions \"dia\" Legacy file extensions \"dia\"","title":"Dia"},{"location":"applications/dia/#dia","text":"","title":"Dia"},{"location":"applications/dia/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/dia/#use-ubuntu-package","text":"dia dia-shapes","title":"use ubuntu package"},{"location":"applications/dia/#display-name","text":"\"Dia\"","title":"Display name"},{"location":"applications/dia/#path","text":"\"/usr/bin/dia\"","title":"path"},{"location":"applications/dia/#mime-type","text":"\"application/x-dia-diagram;\"","title":"Mime Type"},{"location":"applications/dia/#file-extensions","text":"\"dia\"","title":"File extensions"},{"location":"applications/dia/#legacy-file-extensions","text":"\"dia\"","title":"Legacy file extensions"},{"location":"applications/doom/","text":"doom inherite from abcdesktopio/oc.template.gtk use ubuntu package chocolate-doom doom-wad-shareware prboom-plus freedoom prboom-plus Display name \"Doom\" path \"/usr/games/doom\"","title":"doom"},{"location":"applications/doom/#doom","text":"","title":"doom"},{"location":"applications/doom/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/doom/#use-ubuntu-package","text":"chocolate-doom doom-wad-shareware prboom-plus freedoom prboom-plus","title":"use ubuntu package"},{"location":"applications/doom/#display-name","text":"\"Doom\"","title":"Display name"},{"location":"applications/doom/#path","text":"\"/usr/games/doom\"","title":"path"},{"location":"applications/draw/","text":"Draw inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--draw\" Display name \"Draw\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" showinview \"dock\" Mime Type \"application/vnd.oasis.opendocument.graphics;application/vnd.oasis.opendocument.graphics-flat-xml;application/vnd.oasis.opendocument.graphics-template;application/vnd.sun.xml.draw;application/vnd.sun.xml.draw.template;application/vnd.visio;application/x-wpg;application/vnd.ms-publisher;image/x-freehand;application/x-pagemaker;\" File extensions \"odp;otg\" Legacy file extensions \"odp;otg\"","title":"Draw"},{"location":"applications/draw/#draw","text":"","title":"Draw"},{"location":"applications/draw/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/draw/#arguments","text":"\"--draw\"","title":"Arguments"},{"location":"applications/draw/#display-name","text":"\"Draw\"","title":"Display name"},{"location":"applications/draw/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/draw/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/draw/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/draw/#mime-type","text":"\"application/vnd.oasis.opendocument.graphics;application/vnd.oasis.opendocument.graphics-flat-xml;application/vnd.oasis.opendocument.graphics-template;application/vnd.sun.xml.draw;application/vnd.sun.xml.draw.template;application/vnd.visio;application/x-wpg;application/vnd.ms-publisher;image/x-freehand;application/x-pagemaker;\"","title":"Mime Type"},{"location":"applications/draw/#file-extensions","text":"\"odp;otg\"","title":"File extensions"},{"location":"applications/draw/#legacy-file-extensions","text":"\"odp;otg\"","title":"Legacy file extensions"},{"location":"applications/dummy/","text":"dummy","title":"Dummy"},{"location":"applications/eclipse/","text":"Eclipse inherite from abcdesktopio/oc.template.gtk.java.eclipse Display name \"Eclipse\" path \"/usr/bin/eclipse\"","title":"Eclipse"},{"location":"applications/eclipse/#eclipse","text":"","title":"Eclipse"},{"location":"applications/eclipse/#inherite-from","text":"abcdesktopio/oc.template.gtk.java.eclipse","title":"inherite from"},{"location":"applications/eclipse/#display-name","text":"\"Eclipse\"","title":"Display name"},{"location":"applications/eclipse/#path","text":"\"/usr/bin/eclipse\"","title":"path"},{"location":"applications/eclipse_sts4/","text":"Eclipse_Sts4 inherite from abcdesktopio/oc.template.gtk.java.sts4 Display name \"Eclipse Sts4\" path \"/opt/sts/SpringToolSuite4\"","title":"Eclipse_Sts4"},{"location":"applications/eclipse_sts4/#eclipse_sts4","text":"","title":"Eclipse_Sts4"},{"location":"applications/eclipse_sts4/#inherite-from","text":"abcdesktopio/oc.template.gtk.java.sts4","title":"inherite from"},{"location":"applications/eclipse_sts4/#display-name","text":"\"Eclipse Sts4\"","title":"Display name"},{"location":"applications/eclipse_sts4/#path","text":"\"/opt/sts/SpringToolSuite4\"","title":"path"},{"location":"applications/eog/","text":"eog inherite from abcdesktopio/oc.template.gtk use ubuntu package eog Display name \"eog\" path \"/usr/bin/eog\" Mime Type \"image/bmp;image/gif;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-tga;image/x-xbitmap;image/jpeg;image/png;image/x-icon;image/x-xpixmap;image/x-xcursor;\" File extensions \"ani;bmp;gif;ico;jpg;jpeg;pcx;png;pnm;ras;svg;tga;tif;tiff;wbmp;xbm;xpm\" Legacy file extensions \"ani;bmp;gif;ico;jpg;jpeg;pcx;png;pnm;ras;svg;tga;tif;tiff;wbmp;xbm;xpm\"","title":"eog"},{"location":"applications/eog/#eog","text":"","title":"eog"},{"location":"applications/eog/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/eog/#use-ubuntu-package","text":"eog","title":"use ubuntu package"},{"location":"applications/eog/#display-name","text":"\"eog\"","title":"Display name"},{"location":"applications/eog/#path","text":"\"/usr/bin/eog\"","title":"path"},{"location":"applications/eog/#mime-type","text":"\"image/bmp;image/gif;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-tga;image/x-xbitmap;image/jpeg;image/png;image/x-icon;image/x-xpixmap;image/x-xcursor;\"","title":"Mime Type"},{"location":"applications/eog/#file-extensions","text":"\"ani;bmp;gif;ico;jpg;jpeg;pcx;png;pnm;ras;svg;tga;tif;tiff;wbmp;xbm;xpm\"","title":"File extensions"},{"location":"applications/eog/#legacy-file-extensions","text":"\"ani;bmp;gif;ico;jpg;jpeg;pcx;png;pnm;ras;svg;tga;tif;tiff;wbmp;xbm;xpm\"","title":"Legacy file extensions"},{"location":"applications/evince/","text":"Evince inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package evince Display name \"Evince\" path \"/usr/bin/evince\" Mime Type \"application/pdf;application/x-bzpdf;application/x-gzpdf;application/x-xzpdf;application/x-ext-pdf;application/postscript;application/x-bzpostscript;application/x-gzpostscript;image/x-eps;image/x-bzeps;image/x-gzeps;application/x-ext-ps;application/x-ext-eps;application/x-dvi;application/x-bzdvi;application/x-gzdvi;application/x-ext-dvi;image/vnd.djvu;application/x-ext-djv;application/x-ext-djvu;image/tiff;application/x-cbr;application/x-cbz;application/x-cb7;application/x-cbt;application/x-ext-cbr;application/x-ext-cbz;application/x-ext-cb7;application/x-ext-cbt;application/oxps;application/vnd.ms-xpsdocument;\" File extensions \"pdf;ps;dvi;eps;cbt;cbr;cb7;xps\" Legacy file extensions \"pdf;ps;dvi\"","title":"Evince"},{"location":"applications/evince/#evince","text":"","title":"Evince"},{"location":"applications/evince/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/evince/#use-ubuntu-package","text":"evince","title":"use ubuntu package"},{"location":"applications/evince/#display-name","text":"\"Evince\"","title":"Display name"},{"location":"applications/evince/#path","text":"\"/usr/bin/evince\"","title":"path"},{"location":"applications/evince/#mime-type","text":"\"application/pdf;application/x-bzpdf;application/x-gzpdf;application/x-xzpdf;application/x-ext-pdf;application/postscript;application/x-bzpostscript;application/x-gzpostscript;image/x-eps;image/x-bzeps;image/x-gzeps;application/x-ext-ps;application/x-ext-eps;application/x-dvi;application/x-bzdvi;application/x-gzdvi;application/x-ext-dvi;image/vnd.djvu;application/x-ext-djv;application/x-ext-djvu;image/tiff;application/x-cbr;application/x-cbz;application/x-cb7;application/x-cbt;application/x-ext-cbr;application/x-ext-cbz;application/x-ext-cb7;application/x-ext-cbt;application/oxps;application/vnd.ms-xpsdocument;\"","title":"Mime Type"},{"location":"applications/evince/#file-extensions","text":"\"pdf;ps;dvi;eps;cbt;cbr;cb7;xps\"","title":"File extensions"},{"location":"applications/evince/#legacy-file-extensions","text":"\"pdf;ps;dvi\"","title":"Legacy file extensions"},{"location":"applications/evolution/","text":"Evolution inherite from abcdesktopio/oc.template.gtk use ubuntu package evolution Display name \"Evolution\" path \"/usr/bin/evolution\" Mime Type \"text/calendar;text/x-vcard;text/directory;application/mbox;message/rfc822;x-scheme-handler/mailto;\"","title":"Evolution"},{"location":"applications/evolution/#evolution","text":"","title":"Evolution"},{"location":"applications/evolution/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/evolution/#use-ubuntu-package","text":"evolution","title":"use ubuntu package"},{"location":"applications/evolution/#display-name","text":"\"Evolution\"","title":"Display name"},{"location":"applications/evolution/#path","text":"\"/usr/bin/evolution\"","title":"path"},{"location":"applications/evolution/#mime-type","text":"\"text/calendar;text/x-vcard;text/directory;application/mbox;message/rfc822;x-scheme-handler/mailto;\"","title":"Mime Type"},{"location":"applications/file-roller/","text":"file-roller inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package file-roller Display name \"file-roller\" path \"/usr/bin/file-roller\" Mime Type \"application/x-7z-compressed;application/gzip;application/gtar;application/tar;application/zip;application/x-compress;application/x-compressed;application/x-zip-compressed;multipart/x-zip;application/gnutar;application/x-lzx;application/lzx;application/x-gzip;application/x-gtar;application/x-bzip2;application/x-bzip;application/x-bzip2;\" File extensions \"7z;7zip;Z;unzip;zip;tar;tgz;war;tar.gz;ar;bcz;cpio;ear;jar;iso;tar.Z;tar.gz;tar.lz;tar.lzma;tar.lzo;tar.xz\"","title":"file-roller"},{"location":"applications/file-roller/#file-roller","text":"","title":"file-roller"},{"location":"applications/file-roller/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/file-roller/#use-ubuntu-package","text":"file-roller","title":"use ubuntu package"},{"location":"applications/file-roller/#display-name","text":"\"file-roller\"","title":"Display name"},{"location":"applications/file-roller/#path","text":"\"/usr/bin/file-roller\"","title":"path"},{"location":"applications/file-roller/#mime-type","text":"\"application/x-7z-compressed;application/gzip;application/gtar;application/tar;application/zip;application/x-compress;application/x-compressed;application/x-zip-compressed;multipart/x-zip;application/gnutar;application/x-lzx;application/lzx;application/x-gzip;application/x-gtar;application/x-bzip2;application/x-bzip;application/x-bzip2;\"","title":"Mime Type"},{"location":"applications/file-roller/#file-extensions","text":"\"7z;7zip;Z;unzip;zip;tar;tgz;war;tar.gz;ar;bcz;cpio;ear;jar;iso;tar.Z;tar.gz;tar.lz;tar.lzma;tar.lzo;tar.xz\"","title":"File extensions"},{"location":"applications/filelight/","text":"filelight inherite from abcdesktopio/oc.template.gtk use ubuntu package filelight Display name \"Filelight\" path \"/usr/bin/filelight\" Mime Type \"inode/directory;\"","title":"filelight"},{"location":"applications/filelight/#filelight","text":"","title":"filelight"},{"location":"applications/filelight/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/filelight/#use-ubuntu-package","text":"filelight","title":"use ubuntu package"},{"location":"applications/filelight/#display-name","text":"\"Filelight\"","title":"Display name"},{"location":"applications/filelight/#path","text":"\"/usr/bin/filelight\"","title":"path"},{"location":"applications/filelight/#mime-type","text":"\"inode/directory;\"","title":"Mime Type"},{"location":"applications/firefox-esr/","text":"firefox-esr inherite from abcdesktopio/oc.template.gtk Arguments \"-new-instance -P abcdesktop-firefox-esr --class firefox-esr\" Display name \"Firefox-esr\" path \"/usr/bin/firefox-esr\" showinview \"dock\" Mime Type \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\" File extensions \"htm;html;xml;gif\" Legacy file extensions \"htm;html;xml\" Share size \"2gb\" Pre run command RUN add-apt-repository -y ppa:mozillateam/ppa,RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree,RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox-esr $(apt-cache search firefox-esr-locale | awk '{print $1 }') && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean,COPY composer/init.d/init.firefox-esr /composer/init.d/init.firefox-esr,COPY policies.json /usr/lib/firefox-esr/distribution,COPY /ntlm_auth /usr/bin/ntlm_auth.desktop,RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.desktop","title":"firefox-esr"},{"location":"applications/firefox-esr/#firefox-esr","text":"","title":"firefox-esr"},{"location":"applications/firefox-esr/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/firefox-esr/#arguments","text":"\"-new-instance -P abcdesktop-firefox-esr --class firefox-esr\"","title":"Arguments"},{"location":"applications/firefox-esr/#display-name","text":"\"Firefox-esr\"","title":"Display name"},{"location":"applications/firefox-esr/#path","text":"\"/usr/bin/firefox-esr\"","title":"path"},{"location":"applications/firefox-esr/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/firefox-esr/#mime-type","text":"\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\"","title":"Mime Type"},{"location":"applications/firefox-esr/#file-extensions","text":"\"htm;html;xml;gif\"","title":"File extensions"},{"location":"applications/firefox-esr/#legacy-file-extensions","text":"\"htm;html;xml\"","title":"Legacy file extensions"},{"location":"applications/firefox-esr/#share-size","text":"\"2gb\"","title":"Share size"},{"location":"applications/firefox-esr/#pre-run-command","text":"RUN add-apt-repository -y ppa:mozillateam/ppa,RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree,RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox-esr $(apt-cache search firefox-esr-locale | awk '{print $1 }') && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean,COPY composer/init.d/init.firefox-esr /composer/init.d/init.firefox-esr,COPY policies.json /usr/lib/firefox-esr/distribution,COPY /ntlm_auth /usr/bin/ntlm_auth.desktop,RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.desktop","title":"Pre run command"},{"location":"applications/firefox/","text":"Firefox inherite from abcdesktopio/oc.template.gtk Display name \"Firefox\" path \"/usr/bin/firefox\" showinview \"dock\" Mime Type \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\" File extensions \"htm;html;xml;gif\" Legacy file extensions \"htm;html;xml\" Share size \"2gb\" Memory size \"16gb\" Pre run command RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean,COPY composer/init.d/init.firefox /composer/init.d/init.firefox,COPY policies.json /usr/lib/firefox/distribution,COPY /ntlm_auth /usr/bin/ntlm_auth.desktop,RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.desktop,ENV NSS_SDB_USE_CACHE=yes","title":"Firefox"},{"location":"applications/firefox/#firefox","text":"","title":"Firefox"},{"location":"applications/firefox/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/firefox/#display-name","text":"\"Firefox\"","title":"Display name"},{"location":"applications/firefox/#path","text":"\"/usr/bin/firefox\"","title":"path"},{"location":"applications/firefox/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/firefox/#mime-type","text":"\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\"","title":"Mime Type"},{"location":"applications/firefox/#file-extensions","text":"\"htm;html;xml;gif\"","title":"File extensions"},{"location":"applications/firefox/#legacy-file-extensions","text":"\"htm;html;xml\"","title":"Legacy file extensions"},{"location":"applications/firefox/#share-size","text":"\"2gb\"","title":"Share size"},{"location":"applications/firefox/#memory-size","text":"\"16gb\"","title":"Memory size"},{"location":"applications/firefox/#pre-run-command","text":"RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean,RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean,COPY composer/init.d/init.firefox /composer/init.d/init.firefox,COPY policies.json /usr/lib/firefox/distribution,COPY /ntlm_auth /usr/bin/ntlm_auth.desktop,RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.desktop,ENV NSS_SDB_USE_CACHE=yes","title":"Pre run command"},{"location":"applications/firefoxrest/","text":"FirefoxRest inherite from abcdesktopio/oc.template.gtk.firefox.rest use ubuntu package firefox winbind Arguments \"--class=Rest.Firefox\" Display name \"Firefox-Rest\" path \"/usr/bin/firefox\" Mime Type \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\" File extensions \"html;xml;gif\" Legacy file extensions \"html;xml\" Pre run command COPY composer/init.d/init.firefox /composer/init.d/init.firefox","title":"FirefoxRest"},{"location":"applications/firefoxrest/#firefoxrest","text":"","title":"FirefoxRest"},{"location":"applications/firefoxrest/#inherite-from","text":"abcdesktopio/oc.template.gtk.firefox.rest","title":"inherite from"},{"location":"applications/firefoxrest/#use-ubuntu-package","text":"firefox winbind","title":"use ubuntu package"},{"location":"applications/firefoxrest/#arguments","text":"\"--class=Rest.Firefox\"","title":"Arguments"},{"location":"applications/firefoxrest/#display-name","text":"\"Firefox-Rest\"","title":"Display name"},{"location":"applications/firefoxrest/#path","text":"\"/usr/bin/firefox\"","title":"path"},{"location":"applications/firefoxrest/#mime-type","text":"\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\"","title":"Mime Type"},{"location":"applications/firefoxrest/#file-extensions","text":"\"html;xml;gif\"","title":"File extensions"},{"location":"applications/firefoxrest/#legacy-file-extensions","text":"\"html;xml\"","title":"Legacy file extensions"},{"location":"applications/firefoxrest/#pre-run-command","text":"COPY composer/init.d/init.firefox /composer/init.d/init.firefox","title":"Pre run command"},{"location":"applications/gcompris/","text":"GCompris inherite from abcdesktopio/oc.template.gtk use ubuntu package qt5-default qml-module-qtquick-controls libqt5svg5 libqt5xmlpatterns5 libqt5sensors5 qml-module-qtquick-particles2 qml-module-qtmultimedia libqt5multimedia5-plugins gcompris-qt Display name \"GCompris\" path \"/usr/games/gcompris-qt\"","title":"GCompris"},{"location":"applications/gcompris/#gcompris","text":"","title":"GCompris"},{"location":"applications/gcompris/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/gcompris/#use-ubuntu-package","text":"qt5-default qml-module-qtquick-controls libqt5svg5 libqt5xmlpatterns5 libqt5sensors5 qml-module-qtquick-particles2 qml-module-qtmultimedia libqt5multimedia5-plugins gcompris-qt","title":"use ubuntu package"},{"location":"applications/gcompris/#display-name","text":"\"GCompris\"","title":"Display name"},{"location":"applications/gcompris/#path","text":"\"/usr/games/gcompris-qt\"","title":"path"},{"location":"applications/gedit/","text":"Gedit inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gedit Display name \"Gedit\" path \"/usr/bin/gedit\" Mime Type \"text/plain;\" File extensions \"txt\" Legacy file extensions \"txt\"","title":"Gedit"},{"location":"applications/gedit/#gedit","text":"","title":"Gedit"},{"location":"applications/gedit/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/gedit/#use-ubuntu-package","text":"gedit","title":"use ubuntu package"},{"location":"applications/gedit/#display-name","text":"\"Gedit\"","title":"Display name"},{"location":"applications/gedit/#path","text":"\"/usr/bin/gedit\"","title":"path"},{"location":"applications/gedit/#mime-type","text":"\"text/plain;\"","title":"Mime Type"},{"location":"applications/gedit/#file-extensions","text":"\"txt\"","title":"File extensions"},{"location":"applications/gedit/#legacy-file-extensions","text":"\"txt\"","title":"Legacy file extensions"},{"location":"applications/gelemental/","text":"gElemental inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gelemental Display name \"gElemental\" path \"/usr/bin/gelemental\"","title":"gElemental"},{"location":"applications/gelemental/#gelemental","text":"","title":"gElemental"},{"location":"applications/gelemental/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/gelemental/#use-ubuntu-package","text":"gelemental","title":"use ubuntu package"},{"location":"applications/gelemental/#display-name","text":"\"gElemental\"","title":"Display name"},{"location":"applications/gelemental/#path","text":"\"/usr/bin/gelemental\"","title":"path"},{"location":"applications/geogebra/","text":"Geogebra inherite from abcdesktopio/oc.template.gtk use ubuntu package geogebra Display name \"Geogebra\" path \"/usr/bin/geogebra\" File extensions \"ggb;ggt\" Legacy file extensions \"ggb;ggt\"","title":"Geogebra"},{"location":"applications/geogebra/#geogebra","text":"","title":"Geogebra"},{"location":"applications/geogebra/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/geogebra/#use-ubuntu-package","text":"geogebra","title":"use ubuntu package"},{"location":"applications/geogebra/#display-name","text":"\"Geogebra\"","title":"Display name"},{"location":"applications/geogebra/#path","text":"\"/usr/bin/geogebra\"","title":"path"},{"location":"applications/geogebra/#file-extensions","text":"\"ggb;ggt\"","title":"File extensions"},{"location":"applications/geogebra/#legacy-file-extensions","text":"\"ggb;ggt\"","title":"Legacy file extensions"},{"location":"applications/gephi/","text":"gephi inherite from abcdesktopio/oc.template.gtk.java.gephi Display name \"Gephi\" path \"/opt/gephi-0.9.1/bin/gephi\"","title":"gephi"},{"location":"applications/gephi/#gephi","text":"","title":"gephi"},{"location":"applications/gephi/#inherite-from","text":"abcdesktopio/oc.template.gtk.java.gephi","title":"inherite from"},{"location":"applications/gephi/#display-name","text":"\"Gephi\"","title":"Display name"},{"location":"applications/gephi/#path","text":"\"/opt/gephi-0.9.1/bin/gephi\"","title":"path"},{"location":"applications/gimagereader/","text":"gimagereader inherite from abcdesktopio/oc.template.gtk.gimagereader Display name \"OCR-gimagereader\" path \"/usr/bin/gimagereader-gtk\" Mime Type \"image/bmp;image/jpeg;image/gif;image/png;image/tiff;image/x-bmp;image/x-ico;image/x-png;image/x-pcx;image/x-tga;image/xpm;image/svg+xml;\" File extensions \"bmp;jpeg;png,tiff,tga\"","title":"gimagereader"},{"location":"applications/gimagereader/#gimagereader","text":"","title":"gimagereader"},{"location":"applications/gimagereader/#inherite-from","text":"abcdesktopio/oc.template.gtk.gimagereader","title":"inherite from"},{"location":"applications/gimagereader/#display-name","text":"\"OCR-gimagereader\"","title":"Display name"},{"location":"applications/gimagereader/#path","text":"\"/usr/bin/gimagereader-gtk\"","title":"path"},{"location":"applications/gimagereader/#mime-type","text":"\"image/bmp;image/jpeg;image/gif;image/png;image/tiff;image/x-bmp;image/x-ico;image/x-png;image/x-pcx;image/x-tga;image/xpm;image/svg+xml;\"","title":"Mime Type"},{"location":"applications/gimagereader/#file-extensions","text":"\"bmp;jpeg;png,tiff,tga\"","title":"File extensions"},{"location":"applications/gimp/","text":"Gimp inherite from abcdesktopio/oc.template.gtk use ubuntu package gimp Display name \"Gimp\" path \"/usr/bin/gimp\" Mime Type \"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\" File extensions \"dds\" Legacy file extensions \"dds\"","title":"Gimp"},{"location":"applications/gimp/#gimp","text":"","title":"Gimp"},{"location":"applications/gimp/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/gimp/#use-ubuntu-package","text":"gimp","title":"use ubuntu package"},{"location":"applications/gimp/#display-name","text":"\"Gimp\"","title":"Display name"},{"location":"applications/gimp/#path","text":"\"/usr/bin/gimp\"","title":"path"},{"location":"applications/gimp/#mime-type","text":"\"image/bmp;image/g3fax;image/gif;image/x-fits;image/x-pcx;image/x-portable-anymap;image/x-portable-bitmap;image/x-portable-graymap;image/x-portable-pixmap;image/x-psd;image/x-sgi;image/x-tga;image/x-xbitmap;image/x-xwindowdump;image/x-xcf;image/x-compressed-xcf;image/x-gimp-gbr;image/x-gimp-pat;image/x-gimp-gih;image/jpeg;image/x-psp;image/png;image/x-icon;image/x-xpixmap;image/x-wmf;image/jp2;image/jpeg2000;image/jpx;image/x-xcursor;\"","title":"Mime Type"},{"location":"applications/gimp/#file-extensions","text":"\"dds\"","title":"File extensions"},{"location":"applications/gimp/#legacy-file-extensions","text":"\"dds\"","title":"Legacy file extensions"},{"location":"applications/gnumeric/","text":"Gnumeric inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnumeric Display name \"Gnumeric\" path \"/usr/bin/gnumeric\" Mime Type \"application/x-gnumeric;application/x-oleo;application/x-planperfect;application/x-sc;application/x-sylk;application/x-xbase;\" File extensions \"gnm\" Legacy file extensions \"gnm\"","title":"Gnumeric"},{"location":"applications/gnumeric/#gnumeric","text":"","title":"Gnumeric"},{"location":"applications/gnumeric/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/gnumeric/#use-ubuntu-package","text":"gnumeric","title":"use ubuntu package"},{"location":"applications/gnumeric/#display-name","text":"\"Gnumeric\"","title":"Display name"},{"location":"applications/gnumeric/#path","text":"\"/usr/bin/gnumeric\"","title":"path"},{"location":"applications/gnumeric/#mime-type","text":"\"application/x-gnumeric;application/x-oleo;application/x-planperfect;application/x-sc;application/x-sylk;application/x-xbase;\"","title":"Mime Type"},{"location":"applications/gnumeric/#file-extensions","text":"\"gnm\"","title":"File extensions"},{"location":"applications/gnumeric/#legacy-file-extensions","text":"\"gnm\"","title":"Legacy file extensions"},{"location":"applications/golly/","text":"Golly inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package golly Display name \"Golly\" path \"/usr/games/golly\"","title":"Golly"},{"location":"applications/golly/#golly","text":"","title":"Golly"},{"location":"applications/golly/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/golly/#use-ubuntu-package","text":"golly","title":"use ubuntu package"},{"location":"applications/golly/#display-name","text":"\"Golly\"","title":"Display name"},{"location":"applications/golly/#path","text":"\"/usr/games/golly\"","title":"path"},{"location":"applications/gretl/","text":"Gretl inherite from abcdesktopio/oc.template.gtk use ubuntu package gretl Display name \"Gretl\" path \"/usr/bin/gretl\"","title":"Gretl"},{"location":"applications/gretl/#gretl","text":"","title":"Gretl"},{"location":"applications/gretl/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/gretl/#use-ubuntu-package","text":"gretl","title":"use ubuntu package"},{"location":"applications/gretl/#display-name","text":"\"Gretl\"","title":"Display name"},{"location":"applications/gretl/#path","text":"\"/usr/bin/gretl\"","title":"path"},{"location":"applications/hyper/","text":"hyper inherite from abcdesktopio/oc.template.gtk Display name \"hyper\" path \"/opt/Hyper/hyper\" Mime Type \"x-scheme-handler/ssh\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -O /tmp/hyper.deb https://releases.hyper.is/download/deb && apt-get install --no-install-recommends --yes /tmp/hyper.deb && apt-get clean && rm -rf /tmp/hyper.deb","title":"hyper"},{"location":"applications/hyper/#hyper","text":"","title":"hyper"},{"location":"applications/hyper/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/hyper/#display-name","text":"\"hyper\"","title":"Display name"},{"location":"applications/hyper/#path","text":"\"/opt/Hyper/hyper\"","title":"path"},{"location":"applications/hyper/#mime-type","text":"\"x-scheme-handler/ssh\"","title":"Mime Type"},{"location":"applications/hyper/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -O /tmp/hyper.deb https://releases.hyper.is/download/deb && apt-get install --no-install-recommends --yes /tmp/hyper.deb && apt-get clean && rm -rf /tmp/hyper.deb","title":"Pre run command"},{"location":"applications/impress/","text":"Impress inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--impress\" Display name \"Impress\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" showinview \"dock\" Mime Type \"application/vnd.oasis.opendocument.presentation;application/vnd.oasis.opendocument.presentation-template;application/vnd.sun.xml.impress;application/vnd.sun.xml.impress.template;application/mspowerpoint;application/vnd.ms-powerpoint;application/vnd.openxmlformats-officedocument.presentationml.presentation;application/vnd.ms-powerpoint.presentation.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.template;application/vnd.ms-powerpoint.template.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.slide;application/vnd.openxmlformats-officedocument.presentationml.slideshow;application/vnd.ms-powerpoint.slideshow.macroenabled.12;application/vnd.oasis.opendocument.presentation-flat-xml;application/x-iwork-keynote-sffkey;\" File extensions \"odp;pot;potm;potx;pps;ppsx;ppt;pptx;pptm\" Legacy file extensions \"odp\"","title":"Impress"},{"location":"applications/impress/#impress","text":"","title":"Impress"},{"location":"applications/impress/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/impress/#arguments","text":"\"--impress\"","title":"Arguments"},{"location":"applications/impress/#display-name","text":"\"Impress\"","title":"Display name"},{"location":"applications/impress/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/impress/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/impress/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/impress/#mime-type","text":"\"application/vnd.oasis.opendocument.presentation;application/vnd.oasis.opendocument.presentation-template;application/vnd.sun.xml.impress;application/vnd.sun.xml.impress.template;application/mspowerpoint;application/vnd.ms-powerpoint;application/vnd.openxmlformats-officedocument.presentationml.presentation;application/vnd.ms-powerpoint.presentation.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.template;application/vnd.ms-powerpoint.template.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.slide;application/vnd.openxmlformats-officedocument.presentationml.slideshow;application/vnd.ms-powerpoint.slideshow.macroenabled.12;application/vnd.oasis.opendocument.presentation-flat-xml;application/x-iwork-keynote-sffkey;\"","title":"Mime Type"},{"location":"applications/impress/#file-extensions","text":"\"odp;pot;potm;potx;pps;ppsx;ppt;pptx;pptm\"","title":"File extensions"},{"location":"applications/impress/#legacy-file-extensions","text":"\"odp\"","title":"Legacy file extensions"},{"location":"applications/inkscape/","text":"Inkscape inherite from abcdesktopio/oc.template.gtk use ubuntu package numix-gtk-theme gtk2-engines gtk2-engines-pixbuf libgtk2.0-0 inkscape Display name \"Inkscape\" path \"/usr/bin/inkscape\" Mime Type \"image/svg+xml;image/svg+xml-compressed;application/vnd.corel-draw;application/illustrator;\" File extensions \"ai;cdr\" Legacy file extensions \"ai;cdr\"","title":"Inkscape"},{"location":"applications/inkscape/#inkscape","text":"","title":"Inkscape"},{"location":"applications/inkscape/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/inkscape/#use-ubuntu-package","text":"numix-gtk-theme gtk2-engines gtk2-engines-pixbuf libgtk2.0-0 inkscape","title":"use ubuntu package"},{"location":"applications/inkscape/#display-name","text":"\"Inkscape\"","title":"Display name"},{"location":"applications/inkscape/#path","text":"\"/usr/bin/inkscape\"","title":"path"},{"location":"applications/inkscape/#mime-type","text":"\"image/svg+xml;image/svg+xml-compressed;application/vnd.corel-draw;application/illustrator;\"","title":"Mime Type"},{"location":"applications/inkscape/#file-extensions","text":"\"ai;cdr\"","title":"File extensions"},{"location":"applications/inkscape/#legacy-file-extensions","text":"\"ai;cdr\"","title":"Legacy file extensions"},{"location":"applications/kalzium/","text":"Kalzium inherite from abcdesktopio/oc.template.gtk use ubuntu package kalzium Display name \"Kalzium\" path \"/usr/bin/kalzium\"","title":"Kalzium"},{"location":"applications/kalzium/#kalzium","text":"","title":"Kalzium"},{"location":"applications/kalzium/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/kalzium/#use-ubuntu-package","text":"kalzium","title":"use ubuntu package"},{"location":"applications/kalzium/#display-name","text":"\"Kalzium\"","title":"Display name"},{"location":"applications/kalzium/#path","text":"\"/usr/bin/kalzium\"","title":"path"},{"location":"applications/kdiamond/","text":"kDiamond inherite from abcdesktopio/oc.template.gtk use ubuntu package dbus-x11 dbus-user-session kdiamond Display name \"kDiamond\" path \"/usr/games/kdiamond\"","title":"kDiamond"},{"location":"applications/kdiamond/#kdiamond","text":"","title":"kDiamond"},{"location":"applications/kdiamond/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/kdiamond/#use-ubuntu-package","text":"dbus-x11 dbus-user-session kdiamond","title":"use ubuntu package"},{"location":"applications/kdiamond/#display-name","text":"\"kDiamond\"","title":"Display name"},{"location":"applications/kdiamond/#path","text":"\"/usr/games/kdiamond\"","title":"path"},{"location":"applications/kgeography/","text":"Kgeography inherite from abcdesktopio/oc.template.gtk use ubuntu package kgeography Display name \"Kgeography\" path \"/usr/bin/kgeography\"","title":"Kgeography"},{"location":"applications/kgeography/#kgeography","text":"","title":"Kgeography"},{"location":"applications/kgeography/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/kgeography/#use-ubuntu-package","text":"kgeography","title":"use ubuntu package"},{"location":"applications/kgeography/#display-name","text":"\"Kgeography\"","title":"Display name"},{"location":"applications/kgeography/#path","text":"\"/usr/bin/kgeography\"","title":"path"},{"location":"applications/kigo/","text":"kigo inherite from abcdesktopio/oc.template.gtk use ubuntu package dbus-x11 dbus-user-session gnugo kigo Display name \"kigo\" path \"/usr/games/kigo\" Mime Type \"application/x-go-sgf;\" Pre run command COPY composer/init.d/init.kigo /composer/init.d/init.kigo","title":"kigo"},{"location":"applications/kigo/#kigo","text":"","title":"kigo"},{"location":"applications/kigo/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/kigo/#use-ubuntu-package","text":"dbus-x11 dbus-user-session gnugo kigo","title":"use ubuntu package"},{"location":"applications/kigo/#display-name","text":"\"kigo\"","title":"Display name"},{"location":"applications/kigo/#path","text":"\"/usr/games/kigo\"","title":"path"},{"location":"applications/kigo/#mime-type","text":"\"application/x-go-sgf;\"","title":"Mime Type"},{"location":"applications/kigo/#pre-run-command","text":"COPY composer/init.d/init.kigo /composer/init.d/init.kigo","title":"Pre run command"},{"location":"applications/klickety/","text":"Klickety inherite from abcdesktopio/oc.template.gtk use ubuntu package breeze-icon-theme dbus-x11 dbus-user-session klickety Display name \"Klickety\" path \"/usr/games/klickety\"","title":"Klickety"},{"location":"applications/klickety/#klickety","text":"","title":"Klickety"},{"location":"applications/klickety/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/klickety/#use-ubuntu-package","text":"breeze-icon-theme dbus-x11 dbus-user-session klickety","title":"use ubuntu package"},{"location":"applications/klickety/#display-name","text":"\"Klickety\"","title":"Display name"},{"location":"applications/klickety/#path","text":"\"/usr/games/klickety\"","title":"path"},{"location":"applications/klotski/","text":"Klotski inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-klotski Display name \"Klotski\" path \"/usr/games/gnome-klotski\"","title":"Klotski"},{"location":"applications/klotski/#klotski","text":"","title":"Klotski"},{"location":"applications/klotski/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/klotski/#use-ubuntu-package","text":"gnome-klotski","title":"use ubuntu package"},{"location":"applications/klotski/#display-name","text":"\"Klotski\"","title":"Display name"},{"location":"applications/klotski/#path","text":"\"/usr/games/gnome-klotski\"","title":"path"},{"location":"applications/ksquares/","text":"kSquares inherite from abcdesktopio/oc.template.gtk use ubuntu package dbus-x11 dbus-user-session ksquares Display name \"kSquares\" path \"/usr/games/ksquares\"","title":"kSquares"},{"location":"applications/ksquares/#ksquares","text":"","title":"kSquares"},{"location":"applications/ksquares/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/ksquares/#use-ubuntu-package","text":"dbus-x11 dbus-user-session ksquares","title":"use ubuntu package"},{"location":"applications/ksquares/#display-name","text":"\"kSquares\"","title":"Display name"},{"location":"applications/ksquares/#path","text":"\"/usr/games/ksquares\"","title":"path"},{"location":"applications/kturtle/","text":"kTurtle inherite from abcdesktopio/oc.template.gtk use ubuntu package kturtle Display name \"kTurtle\" path \"/usr/bin/kturtle\"","title":"kTurtle"},{"location":"applications/kturtle/#kturtle","text":"","title":"kTurtle"},{"location":"applications/kturtle/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/kturtle/#use-ubuntu-package","text":"kturtle","title":"use ubuntu package"},{"location":"applications/kturtle/#display-name","text":"\"kTurtle\"","title":"Display name"},{"location":"applications/kturtle/#path","text":"\"/usr/bin/kturtle\"","title":"path"},{"location":"applications/leocad/","text":"Leocad inherite from abcdesktopio/oc.template.gtk use ubuntu package leocad Arguments \"-l /usr/bin/leocad.library.bin\" Display name \"Leocad\" path \"/usr/bin/leocad\" Mime Type \"application/vnd.leocad;application/x-ldraw;application/x-multi-part-ldraw;application/x-ldlite;\" File extensions \"lcd\" Legacy file extensions \"lcd\"","title":"Leocad"},{"location":"applications/leocad/#leocad","text":"","title":"Leocad"},{"location":"applications/leocad/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/leocad/#use-ubuntu-package","text":"leocad","title":"use ubuntu package"},{"location":"applications/leocad/#arguments","text":"\"-l /usr/bin/leocad.library.bin\"","title":"Arguments"},{"location":"applications/leocad/#display-name","text":"\"Leocad\"","title":"Display name"},{"location":"applications/leocad/#path","text":"\"/usr/bin/leocad\"","title":"path"},{"location":"applications/leocad/#mime-type","text":"\"application/vnd.leocad;application/x-ldraw;application/x-multi-part-ldraw;application/x-ldlite;\"","title":"Mime Type"},{"location":"applications/leocad/#file-extensions","text":"\"lcd\"","title":"File extensions"},{"location":"applications/leocad/#legacy-file-extensions","text":"\"lcd\"","title":"Legacy file extensions"},{"location":"applications/librecad/","text":"LibreCAD inherite from abcdesktopio/oc.template.gtk use ubuntu package librecad Display name \"LibreCAD\" path \"/usr/bin/librecad\" Mime Type \"image/vnd.dxf;\" File extensions \"dxf;dwg\" Legacy file extensions \"dxf;dwg\"","title":"LibreCAD"},{"location":"applications/librecad/#librecad","text":"","title":"LibreCAD"},{"location":"applications/librecad/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/librecad/#use-ubuntu-package","text":"librecad","title":"use ubuntu package"},{"location":"applications/librecad/#display-name","text":"\"LibreCAD\"","title":"Display name"},{"location":"applications/librecad/#path","text":"\"/usr/bin/librecad\"","title":"path"},{"location":"applications/librecad/#mime-type","text":"\"image/vnd.dxf;\"","title":"Mime Type"},{"location":"applications/librecad/#file-extensions","text":"\"dxf;dwg\"","title":"File extensions"},{"location":"applications/librecad/#legacy-file-extensions","text":"\"dxf;dwg\"","title":"Legacy file extensions"},{"location":"applications/list/","text":"Application list This array describe the application list ready to use with abcdesktop. icon displayname description file md 2048 no description found 2048.md astromenace hardcore 3D space shooter with spaceship upgrade possibilities astromenace.md Atom A hackable text editor for the 21st Century. atom.md Base Manage databases, create queries and reports to track and manage your information by using Base. base.md Blender 3D modeling, animation, rendering and post-production blender.md Calc Perform calculations, analyze information and manage lists in spreadsheets by using Calc. calc.md Calculator no description found calculator.md Chess no description found chess.md Chrome no description found chrome.md Cloud Foundry cli no description found cloudfoundry.md Dia no description found dia.md Doom no description found doom.md Draw Create and edit drawings, flow charts and logos by using Draw. draw.md Eclipse no description found eclipse.md Eclipse Sts4 no description found eclipse_sts4.md eog no description found eog.md Evince no description found evince.md Evolution no description found evolution.md file-roller Create and modify an archive file-roller.md Filelight View disk usage information filelight.md Firefox Browse the World Wide Web firefox.md Firefox-Rest Browse the World Wide Web firefoxrest.md GCompris no description found gcompris.md Gedit no description found gedit.md gElemental no description found gelemental.md Geogebra no description found geogebra.md Gephi no description found gephi.md OCR-gimagereader no description found gimagereader.md Gimp Create images and edit photographs gimp.md Gnumeric Calculation, Analysis, and Visualization of Information gnumeric.md Golly no description found golly.md Gretl no description found gretl.md Impress Create and edit presentations for slideshows, meeting and Web pages by using Impress. impress.md Inkscape Create and edit Scalable Vector Graphics images inkscape.md Kalzium no description found kalzium.md kDiamond no description found kdiamond.md Kgeography no description found kgeography.md kigo no description found kigo.md Klickety no description found klickety.md Klotski no description found klotski.md kSquares no description found ksquares.md kTurtle no description found kturtle.md Leocad no description found leocad.md LibreCAD no description found librecad.md Mahjongg no description found mahjongg.md Math Create and edit scientific formulas and equations by using Math. math.md Mathwar no description found mathwar.md Mines no description found mines.md Netbeans no description found netbeans.md Notepad Wine no description found notepad-wine.md OnlyOffice Edit office documents onlyoffice.md OpenShift cli no description found openshift.md Planner no description found planner.md Postman no description found postman.md Putty Unix no description found putty-unix.md Putty Wine no description found putty-wine.md qElectrotech no description found qelectrotech.md Remarkable A free, fully featured markdown editor for Linux. remarkable.md Robots no description found robots.md Stellarium no description found stellarium.md Step no description found step.md Sublime-Text Sophisticated text editor for code, markup and prose sublime-text.md supertux2 Play a classic 2D platform game supertux2.md swell-foop no description found swell-foop.md Terminal no description found terminal.md Shell AI no description found terminalai.md Tetravex no description found tetravex.md Thunderbird Send and receive mail with Thunderbird thunderbird.md videolan Read, capture, broadcast your multimedia streams vlc.md VSCode Code Editing. Redefined. vscode.md Winefile Wine no description found winefile-wine.md WineMine Wine no description found winemine-wine.md Winhelp Wine no description found winhelp-wine.md Writer Create and edit text and graphics in letters, reports, documents and Web pages by using Writer. writer.md Xedit no description found xedit.md xeyes no description found xeyes.md Xman no description found xman.md Xterm no description found xterm.md Youtube Browse the World Wide Web youtube.md","title":"List of all applications ready to use"},{"location":"applications/list/#application-list","text":"This array describe the application list ready to use with abcdesktop. icon displayname description file md 2048 no description found 2048.md astromenace hardcore 3D space shooter with spaceship upgrade possibilities astromenace.md Atom A hackable text editor for the 21st Century. atom.md Base Manage databases, create queries and reports to track and manage your information by using Base. base.md Blender 3D modeling, animation, rendering and post-production blender.md Calc Perform calculations, analyze information and manage lists in spreadsheets by using Calc. calc.md Calculator no description found calculator.md Chess no description found chess.md Chrome no description found chrome.md Cloud Foundry cli no description found cloudfoundry.md Dia no description found dia.md Doom no description found doom.md Draw Create and edit drawings, flow charts and logos by using Draw. draw.md Eclipse no description found eclipse.md Eclipse Sts4 no description found eclipse_sts4.md eog no description found eog.md Evince no description found evince.md Evolution no description found evolution.md file-roller Create and modify an archive file-roller.md Filelight View disk usage information filelight.md Firefox Browse the World Wide Web firefox.md Firefox-Rest Browse the World Wide Web firefoxrest.md GCompris no description found gcompris.md Gedit no description found gedit.md gElemental no description found gelemental.md Geogebra no description found geogebra.md Gephi no description found gephi.md OCR-gimagereader no description found gimagereader.md Gimp Create images and edit photographs gimp.md Gnumeric Calculation, Analysis, and Visualization of Information gnumeric.md Golly no description found golly.md Gretl no description found gretl.md Impress Create and edit presentations for slideshows, meeting and Web pages by using Impress. impress.md Inkscape Create and edit Scalable Vector Graphics images inkscape.md Kalzium no description found kalzium.md kDiamond no description found kdiamond.md Kgeography no description found kgeography.md kigo no description found kigo.md Klickety no description found klickety.md Klotski no description found klotski.md kSquares no description found ksquares.md kTurtle no description found kturtle.md Leocad no description found leocad.md LibreCAD no description found librecad.md Mahjongg no description found mahjongg.md Math Create and edit scientific formulas and equations by using Math. math.md Mathwar no description found mathwar.md Mines no description found mines.md Netbeans no description found netbeans.md Notepad Wine no description found notepad-wine.md OnlyOffice Edit office documents onlyoffice.md OpenShift cli no description found openshift.md Planner no description found planner.md Postman no description found postman.md Putty Unix no description found putty-unix.md Putty Wine no description found putty-wine.md qElectrotech no description found qelectrotech.md Remarkable A free, fully featured markdown editor for Linux. remarkable.md Robots no description found robots.md Stellarium no description found stellarium.md Step no description found step.md Sublime-Text Sophisticated text editor for code, markup and prose sublime-text.md supertux2 Play a classic 2D platform game supertux2.md swell-foop no description found swell-foop.md Terminal no description found terminal.md Shell AI no description found terminalai.md Tetravex no description found tetravex.md Thunderbird Send and receive mail with Thunderbird thunderbird.md videolan Read, capture, broadcast your multimedia streams vlc.md VSCode Code Editing. Redefined. vscode.md Winefile Wine no description found winefile-wine.md WineMine Wine no description found winemine-wine.md Winhelp Wine no description found winhelp-wine.md Writer Create and edit text and graphics in letters, reports, documents and Web pages by using Writer. writer.md Xedit no description found xedit.md xeyes no description found xeyes.md Xman no description found xman.md Xterm no description found xterm.md Youtube Browse the World Wide Web youtube.md","title":"Application list"},{"location":"applications/mahjongg/","text":"Mahjongg inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-mahjongg Display name \"Mahjongg\" path \"/usr/games/gnome-mahjongg\"","title":"Mahjongg"},{"location":"applications/mahjongg/#mahjongg","text":"","title":"Mahjongg"},{"location":"applications/mahjongg/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/mahjongg/#use-ubuntu-package","text":"gnome-mahjongg","title":"use ubuntu package"},{"location":"applications/mahjongg/#display-name","text":"\"Mahjongg\"","title":"Display name"},{"location":"applications/mahjongg/#path","text":"\"/usr/games/gnome-mahjongg\"","title":"path"},{"location":"applications/math/","text":"Math inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--math\" Display name \"Math\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" Mime Type \"application/vnd.oasis.opendocument.formula;application/vnd.sun.xml.math;application/vnd.oasis.opendocument.formula-template;text/mathml;application/mathml+xml;\" File extensions \"odf;odc\" Legacy file extensions \"odf;odc\"","title":"Math"},{"location":"applications/math/#math","text":"","title":"Math"},{"location":"applications/math/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/math/#arguments","text":"\"--math\"","title":"Arguments"},{"location":"applications/math/#display-name","text":"\"Math\"","title":"Display name"},{"location":"applications/math/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/math/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/math/#mime-type","text":"\"application/vnd.oasis.opendocument.formula;application/vnd.sun.xml.math;application/vnd.oasis.opendocument.formula-template;text/mathml;application/mathml+xml;\"","title":"Mime Type"},{"location":"applications/math/#file-extensions","text":"\"odf;odc\"","title":"File extensions"},{"location":"applications/math/#legacy-file-extensions","text":"\"odf;odc\"","title":"Legacy file extensions"},{"location":"applications/mathwar/","text":"Mathwar inherite from abcdesktopio/oc.template.gtk use ubuntu package mathwar Display name \"Mathwar\" path \"/usr/games/mathwar\"","title":"Mathwar"},{"location":"applications/mathwar/#mathwar","text":"","title":"Mathwar"},{"location":"applications/mathwar/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/mathwar/#use-ubuntu-package","text":"mathwar","title":"use ubuntu package"},{"location":"applications/mathwar/#display-name","text":"\"Mathwar\"","title":"Display name"},{"location":"applications/mathwar/#path","text":"\"/usr/games/mathwar\"","title":"path"},{"location":"applications/mines/","text":"Mines inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-mines Display name \"Mines\" path \"/usr/games/gnome-mines\"","title":"Mines"},{"location":"applications/mines/#mines","text":"","title":"Mines"},{"location":"applications/mines/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/mines/#use-ubuntu-package","text":"gnome-mines","title":"use ubuntu package"},{"location":"applications/mines/#display-name","text":"\"Mines\"","title":"Display name"},{"location":"applications/mines/#path","text":"\"/usr/games/gnome-mines\"","title":"path"},{"location":"applications/netbeans/","text":"Netbeans inherite from abcdesktopio/oc.template.gtk use ubuntu package netbeans Display name \"Netbeans\" path \"/usr/bin/netbeans\"","title":"Netbeans"},{"location":"applications/netbeans/#netbeans","text":"","title":"Netbeans"},{"location":"applications/netbeans/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/netbeans/#use-ubuntu-package","text":"netbeans","title":"use ubuntu package"},{"location":"applications/netbeans/#display-name","text":"\"Netbeans\"","title":"Display name"},{"location":"applications/netbeans/#path","text":"\"/usr/bin/netbeans\"","title":"path"},{"location":"applications/notepad-wine/","text":"notepad-wine inherite from abcdesktopio/oc.template.gtk.mswindows Arguments \"notepad\" Display name \"Notepad Wine\" path \"/usr/bin/wine\" Mime Type \"application/text;\" File extensions \"txt;log;\"","title":"notepad-wine"},{"location":"applications/notepad-wine/#notepad-wine","text":"","title":"notepad-wine"},{"location":"applications/notepad-wine/#inherite-from","text":"abcdesktopio/oc.template.gtk.mswindows","title":"inherite from"},{"location":"applications/notepad-wine/#arguments","text":"\"notepad\"","title":"Arguments"},{"location":"applications/notepad-wine/#display-name","text":"\"Notepad Wine\"","title":"Display name"},{"location":"applications/notepad-wine/#path","text":"\"/usr/bin/wine\"","title":"path"},{"location":"applications/notepad-wine/#mime-type","text":"\"application/text;\"","title":"Mime Type"},{"location":"applications/notepad-wine/#file-extensions","text":"\"txt;log;\"","title":"File extensions"},{"location":"applications/onlyoffice/","text":"onlyoffice inherite from abcdesktopio/oc.template.gtk use ubuntu package onlyoffice-desktopeditors Display name \"OnlyOffice\" path \"/usr/bin/desktopeditors\" Mime Type \"application/vnd.oasis.opendocument.text;application/vnd.oasis.opendocument.text-template;application/vnd.oasis.opendocument.text-web;application/vnd.oasis.opendocument.text-master;application/vnd.sun.xml.writer;application/vnd.sun.xml.writer.template;application/vnd.sun.xml.writer.global;application/msword;application/vnd.ms-word;application/x-doc;application/rtf;text/rtf;application/vnd.wordperfect;application/wordperfect;application/vnd.openxmlformats-officedocument.wordprocessingml.document;application/vnd.ms-word.document.macroenabled.12;application/vnd.openxmlformats-officedocument.wordprocessingml.template;application/vnd.ms-word.template.macroenabled.12;application/vnd.oasis.opendocument.spreadsheet;application/vnd.oasis.opendocument.spreadsheet-template;application/vnd.sun.xml.calc;application/vnd.sun.xml.calc.template;application/msexcel;application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;application/vnd.ms-excel.sheet.macroenabled.12;application/vnd.openxmlformats-officedocument.spreadsheetml.template;application/vnd.ms-excel.template.macroenabled.12;application/vnd.ms-excel.sheet.binary.macroenabled.12;text/csv;text/spreadsheet;application/csv;application/excel;application/x-excel;application/x-msexcel;application/x-ms-excel;text/comma-separated-values;text/tab-separated-values;text/x-comma-separated-values;text/x-csv;application/vnd.oasis.opendocument.presentation;application/vnd.oasis.opendocument.presentation-template;application/vnd.sun.xml.impress;application/vnd.sun.xml.impress.template;application/mspowerpoint;application/vnd.ms-powerpoint;application/vnd.openxmlformats-officedocument.presentationml.presentation;application/vnd.ms-powerpoint.presentation.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.template;application/vnd.ms-powerpoint.template.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.slide;application/vnd.openxmlformats-officedocument.presentationml.slideshow;application/vnd.ms-powerpoint.slideshow.macroEnabled.12;\" File extensions \"doc;docx;odt;rtf;txt;xls;xlsx;ods;csv;ppt;pptx;odp\" Pre run command RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys CB2DE8E5,RUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN echo \"deb [arch=amd64] https://download.onlyoffice.com/repo/debian squeeze main\" > /etc/apt/sources.list.d/onlyoffice.list,RUN apt-get update && apt-get install --yes libgl1 libnss3 qt5dxcb-plugin && apt-get clean","title":"onlyoffice"},{"location":"applications/onlyoffice/#onlyoffice","text":"","title":"onlyoffice"},{"location":"applications/onlyoffice/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/onlyoffice/#use-ubuntu-package","text":"onlyoffice-desktopeditors","title":"use ubuntu package"},{"location":"applications/onlyoffice/#display-name","text":"\"OnlyOffice\"","title":"Display name"},{"location":"applications/onlyoffice/#path","text":"\"/usr/bin/desktopeditors\"","title":"path"},{"location":"applications/onlyoffice/#mime-type","text":"\"application/vnd.oasis.opendocument.text;application/vnd.oasis.opendocument.text-template;application/vnd.oasis.opendocument.text-web;application/vnd.oasis.opendocument.text-master;application/vnd.sun.xml.writer;application/vnd.sun.xml.writer.template;application/vnd.sun.xml.writer.global;application/msword;application/vnd.ms-word;application/x-doc;application/rtf;text/rtf;application/vnd.wordperfect;application/wordperfect;application/vnd.openxmlformats-officedocument.wordprocessingml.document;application/vnd.ms-word.document.macroenabled.12;application/vnd.openxmlformats-officedocument.wordprocessingml.template;application/vnd.ms-word.template.macroenabled.12;application/vnd.oasis.opendocument.spreadsheet;application/vnd.oasis.opendocument.spreadsheet-template;application/vnd.sun.xml.calc;application/vnd.sun.xml.calc.template;application/msexcel;application/vnd.ms-excel;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;application/vnd.ms-excel.sheet.macroenabled.12;application/vnd.openxmlformats-officedocument.spreadsheetml.template;application/vnd.ms-excel.template.macroenabled.12;application/vnd.ms-excel.sheet.binary.macroenabled.12;text/csv;text/spreadsheet;application/csv;application/excel;application/x-excel;application/x-msexcel;application/x-ms-excel;text/comma-separated-values;text/tab-separated-values;text/x-comma-separated-values;text/x-csv;application/vnd.oasis.opendocument.presentation;application/vnd.oasis.opendocument.presentation-template;application/vnd.sun.xml.impress;application/vnd.sun.xml.impress.template;application/mspowerpoint;application/vnd.ms-powerpoint;application/vnd.openxmlformats-officedocument.presentationml.presentation;application/vnd.ms-powerpoint.presentation.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.template;application/vnd.ms-powerpoint.template.macroenabled.12;application/vnd.openxmlformats-officedocument.presentationml.slide;application/vnd.openxmlformats-officedocument.presentationml.slideshow;application/vnd.ms-powerpoint.slideshow.macroEnabled.12;\"","title":"Mime Type"},{"location":"applications/onlyoffice/#file-extensions","text":"\"doc;docx;odt;rtf;txt;xls;xlsx;ods;csv;ppt;pptx;odp\"","title":"File extensions"},{"location":"applications/onlyoffice/#pre-run-command","text":"RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys CB2DE8E5,RUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections,RUN echo \"deb [arch=amd64] https://download.onlyoffice.com/repo/debian squeeze main\" > /etc/apt/sources.list.d/onlyoffice.list,RUN apt-get update && apt-get install --yes libgl1 libnss3 qt5dxcb-plugin && apt-get clean","title":"Pre run command"},{"location":"applications/openshift/","text":"openshift inherite from abcdesktopio/oc.template.gtk.fulldev use ubuntu package rhc Arguments \"--disable-factory --class openshift.cli\" Display name \"OpenShift cli\" path \"/usr/bin/gnome-terminal\"","title":"openshift"},{"location":"applications/openshift/#openshift","text":"","title":"openshift"},{"location":"applications/openshift/#inherite-from","text":"abcdesktopio/oc.template.gtk.fulldev","title":"inherite from"},{"location":"applications/openshift/#use-ubuntu-package","text":"rhc","title":"use ubuntu package"},{"location":"applications/openshift/#arguments","text":"\"--disable-factory --class openshift.cli\"","title":"Arguments"},{"location":"applications/openshift/#display-name","text":"\"OpenShift cli\"","title":"Display name"},{"location":"applications/openshift/#path","text":"\"/usr/bin/gnome-terminal\"","title":"path"},{"location":"applications/planner/","text":"Planner inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package planner Display name \"Planner\" path \"/usr/bin/planner\" Mime Type \"application/x-planner;\" File extensions \"mpp;mpx\" Legacy file extensions \"mpp;mpx\"","title":"Planner"},{"location":"applications/planner/#planner","text":"","title":"Planner"},{"location":"applications/planner/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/planner/#use-ubuntu-package","text":"planner","title":"use ubuntu package"},{"location":"applications/planner/#display-name","text":"\"Planner\"","title":"Display name"},{"location":"applications/planner/#path","text":"\"/usr/bin/planner\"","title":"path"},{"location":"applications/planner/#mime-type","text":"\"application/x-planner;\"","title":"Mime Type"},{"location":"applications/planner/#file-extensions","text":"\"mpp;mpx\"","title":"File extensions"},{"location":"applications/planner/#legacy-file-extensions","text":"\"mpp;mpx\"","title":"Legacy file extensions"},{"location":"applications/postman/","text":"postman inherite from abcdesktopio/oc.template.gtk.postman Display name \"Postman\" path \"/usr/local/bin/Postman/app/Postman\"","title":"postman"},{"location":"applications/postman/#postman","text":"","title":"postman"},{"location":"applications/postman/#inherite-from","text":"abcdesktopio/oc.template.gtk.postman","title":"inherite from"},{"location":"applications/postman/#display-name","text":"\"Postman\"","title":"Display name"},{"location":"applications/postman/#path","text":"\"/usr/local/bin/Postman/app/Postman\"","title":"path"},{"location":"applications/putty-unix/","text":"putty-unix inherite from abcdesktopio/oc.template.gtk use ubuntu package putty dbus-x11 Display name \"Putty Unix\" path \"/usr/bin/putty\"","title":"putty-unix"},{"location":"applications/putty-unix/#putty-unix","text":"","title":"putty-unix"},{"location":"applications/putty-unix/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/putty-unix/#use-ubuntu-package","text":"putty dbus-x11","title":"use ubuntu package"},{"location":"applications/putty-unix/#display-name","text":"\"Putty Unix\"","title":"Display name"},{"location":"applications/putty-unix/#path","text":"\"/usr/bin/putty\"","title":"path"},{"location":"applications/putty-wine/","text":"putty-wine inherite from abcdesktopio/oc.template.gtk.wine Arguments \"/composer/bin/putty.exe\" Display name \"Putty Wine\" path \"/usr/bin/wine\" Pre run command ENV WINEARCH=win64,USER $BUSER,RUN wineboot --init,RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe,RUN echo disable > $WINEPREFIX/.update-timestamp,COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine/","title":"putty-wine"},{"location":"applications/putty-wine/#putty-wine","text":"","title":"putty-wine"},{"location":"applications/putty-wine/#inherite-from","text":"abcdesktopio/oc.template.gtk.wine","title":"inherite from"},{"location":"applications/putty-wine/#arguments","text":"\"/composer/bin/putty.exe\"","title":"Arguments"},{"location":"applications/putty-wine/#display-name","text":"\"Putty Wine\"","title":"Display name"},{"location":"applications/putty-wine/#path","text":"\"/usr/bin/wine\"","title":"path"},{"location":"applications/putty-wine/#pre-run-command","text":"ENV WINEARCH=win64,USER $BUSER,RUN wineboot --init,RUN wget -O /composer/bin/putty.exe https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe,RUN echo disable > $WINEPREFIX/.update-timestamp,COPY --chown=$BUSER:$BUSER user.reg system.reg /composer/.wine/","title":"Pre run command"},{"location":"applications/qelectrotech/","text":"qElectrotech inherite from abcdesktopio/oc.template.gtk use ubuntu package qelectrotech Display name \"qElectrotech\" path \"/usr/bin/qelectrotech\"","title":"qElectrotech"},{"location":"applications/qelectrotech/#qelectrotech","text":"","title":"qElectrotech"},{"location":"applications/qelectrotech/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/qelectrotech/#use-ubuntu-package","text":"qelectrotech","title":"use ubuntu package"},{"location":"applications/qelectrotech/#display-name","text":"\"qElectrotech\"","title":"Display name"},{"location":"applications/qelectrotech/#path","text":"\"/usr/bin/qelectrotech\"","title":"path"},{"location":"applications/remarkable/","text":"remarkable inherite from abcdesktopio/oc.template.gtk.18.04 Display name \"Remarkable\" path \"/usr/bin/remarkable\" Mime Type \"text/x-markdown;text/markdown;\" File extensions \"md;markdown\" Legacy file extensions \"md;markdown\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes wget python3-gtkspellcheck wkhtmltopdf python3-markdown gir1.2-gtksource-3.0 yelp gir1.2-webkit-3.0 python3-bs4 && apt-get clean,RUN wget -O /tmp/remarkable_1.87_all.deb https://remarkableapp.github.io/files/remarkable_1.87_all.deb && apt-get install --no-install-recommends --yes /tmp/remarkable_1.87_all.deb && apt-get clean && rm -rf /tmp/remarkable_1.87_all.deb","title":"remarkable"},{"location":"applications/remarkable/#remarkable","text":"","title":"remarkable"},{"location":"applications/remarkable/#inherite-from","text":"abcdesktopio/oc.template.gtk.18.04","title":"inherite from"},{"location":"applications/remarkable/#display-name","text":"\"Remarkable\"","title":"Display name"},{"location":"applications/remarkable/#path","text":"\"/usr/bin/remarkable\"","title":"path"},{"location":"applications/remarkable/#mime-type","text":"\"text/x-markdown;text/markdown;\"","title":"Mime Type"},{"location":"applications/remarkable/#file-extensions","text":"\"md;markdown\"","title":"File extensions"},{"location":"applications/remarkable/#legacy-file-extensions","text":"\"md;markdown\"","title":"Legacy file extensions"},{"location":"applications/remarkable/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes wget python3-gtkspellcheck wkhtmltopdf python3-markdown gir1.2-gtksource-3.0 yelp gir1.2-webkit-3.0 python3-bs4 && apt-get clean,RUN wget -O /tmp/remarkable_1.87_all.deb https://remarkableapp.github.io/files/remarkable_1.87_all.deb && apt-get install --no-install-recommends --yes /tmp/remarkable_1.87_all.deb && apt-get clean && rm -rf /tmp/remarkable_1.87_all.deb","title":"Pre run command"},{"location":"applications/robots/","text":"Robots inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-robots Display name \"Robots\" path \"/usr/games/gnome-robots\"","title":"Robots"},{"location":"applications/robots/#robots","text":"","title":"Robots"},{"location":"applications/robots/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/robots/#use-ubuntu-package","text":"gnome-robots","title":"use ubuntu package"},{"location":"applications/robots/#display-name","text":"\"Robots\"","title":"Display name"},{"location":"applications/robots/#path","text":"\"/usr/games/gnome-robots\"","title":"path"},{"location":"applications/stellarium/","text":"Stellarium inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package stellarium Display name \"Stellarium\" path \"/usr/bin/stellarium\"","title":"Stellarium"},{"location":"applications/stellarium/#stellarium","text":"","title":"Stellarium"},{"location":"applications/stellarium/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/stellarium/#use-ubuntu-package","text":"stellarium","title":"use ubuntu package"},{"location":"applications/stellarium/#display-name","text":"\"Stellarium\"","title":"Display name"},{"location":"applications/stellarium/#path","text":"\"/usr/bin/stellarium\"","title":"path"},{"location":"applications/step/","text":"Step inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package step Display name \"Step\" path \"/usr/bin/step\"","title":"Step"},{"location":"applications/step/#step","text":"","title":"Step"},{"location":"applications/step/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/step/#use-ubuntu-package","text":"step","title":"use ubuntu package"},{"location":"applications/step/#display-name","text":"\"Step\"","title":"Display name"},{"location":"applications/step/#path","text":"\"/usr/bin/step\"","title":"path"},{"location":"applications/sublime-text/","text":"Sublime-Text inherite from abcdesktopio/oc.template.gtk use ubuntu package sublime-text Display name \"Sublime-Text\" path \"/opt/sublime_text/sublime_text\" Pre run command RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -a,RUN echo \"deb https://download.sublimetext.com/ apt/stable/\" | tee /etc/apt/sources.list.d/sublime-text.list","title":"Sublime-Text"},{"location":"applications/sublime-text/#sublime-text","text":"","title":"Sublime-Text"},{"location":"applications/sublime-text/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/sublime-text/#use-ubuntu-package","text":"sublime-text","title":"use ubuntu package"},{"location":"applications/sublime-text/#display-name","text":"\"Sublime-Text\"","title":"Display name"},{"location":"applications/sublime-text/#path","text":"\"/opt/sublime_text/sublime_text\"","title":"path"},{"location":"applications/sublime-text/#pre-run-command","text":"RUN apt-get update && apt-get install --no-install-recommends --yes wget && apt-get clean,RUN wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add -a,RUN echo \"deb https://download.sublimetext.com/ apt/stable/\" | tee /etc/apt/sources.list.d/sublime-text.list","title":"Pre run command"},{"location":"applications/supertux2/","text":"supertux2 inherite from abcdesktopio/oc.template.gtk use ubuntu package supertux Display name \"supertux2\" path \"/usr/games/supertux2\"","title":"supertux2"},{"location":"applications/supertux2/#supertux2","text":"","title":"supertux2"},{"location":"applications/supertux2/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/supertux2/#use-ubuntu-package","text":"supertux","title":"use ubuntu package"},{"location":"applications/supertux2/#display-name","text":"\"supertux2\"","title":"Display name"},{"location":"applications/supertux2/#path","text":"\"/usr/games/supertux2\"","title":"path"},{"location":"applications/swell-foop/","text":"swell-foop inherite from abcdesktopio/oc.template.gtk use ubuntu package swell-foop Display name \"swell-foop\" path \"/usr/games/swell-foop\"","title":"swell-foop"},{"location":"applications/swell-foop/#swell-foop","text":"","title":"swell-foop"},{"location":"applications/swell-foop/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/swell-foop/#use-ubuntu-package","text":"swell-foop","title":"use ubuntu package"},{"location":"applications/swell-foop/#display-name","text":"\"swell-foop\"","title":"Display name"},{"location":"applications/swell-foop/#path","text":"\"/usr/games/swell-foop\"","title":"path"},{"location":"applications/terminal/","text":"Terminal inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-terminal dbus-x11 Arguments \"--disable-factory\" Display name \"Terminal\" path \"/usr/bin/gnome-terminal\"","title":"Terminal"},{"location":"applications/terminal/#terminal","text":"","title":"Terminal"},{"location":"applications/terminal/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/terminal/#use-ubuntu-package","text":"gnome-terminal dbus-x11","title":"use ubuntu package"},{"location":"applications/terminal/#arguments","text":"\"--disable-factory\"","title":"Arguments"},{"location":"applications/terminal/#display-name","text":"\"Terminal\"","title":"Display name"},{"location":"applications/terminal/#path","text":"\"/usr/bin/gnome-terminal\"","title":"path"},{"location":"applications/terminalai/","text":"terminalai inherite from abcdesktopio/oc.template.gtk.fulldev.ia use ubuntu package gnome-terminal dbus-x11 Arguments \"--disable-factory --class=terminalai\" Display name \"Shell AI\" path \"/usr/bin/gnome-terminal\"","title":"terminalai"},{"location":"applications/terminalai/#terminalai","text":"","title":"terminalai"},{"location":"applications/terminalai/#inherite-from","text":"abcdesktopio/oc.template.gtk.fulldev.ia","title":"inherite from"},{"location":"applications/terminalai/#use-ubuntu-package","text":"gnome-terminal dbus-x11","title":"use ubuntu package"},{"location":"applications/terminalai/#arguments","text":"\"--disable-factory --class=terminalai\"","title":"Arguments"},{"location":"applications/terminalai/#display-name","text":"\"Shell AI\"","title":"Display name"},{"location":"applications/terminalai/#path","text":"\"/usr/bin/gnome-terminal\"","title":"path"},{"location":"applications/tetravex/","text":"Tetravex inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package gnome-tetravex Display name \"Tetravex\" path \"/usr/games/gnome-tetravex\"","title":"Tetravex"},{"location":"applications/tetravex/#tetravex","text":"","title":"Tetravex"},{"location":"applications/tetravex/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/tetravex/#use-ubuntu-package","text":"gnome-tetravex","title":"use ubuntu package"},{"location":"applications/tetravex/#display-name","text":"\"Tetravex\"","title":"Display name"},{"location":"applications/tetravex/#path","text":"\"/usr/games/gnome-tetravex\"","title":"path"},{"location":"applications/thunderbird/","text":"Thunderbird inherite from abcdesktopio/oc.template.gtk.language-pack-all use ubuntu package tk thunderbird gnome-keyring Display name \"Thunderbird\" path \"/usr/bin/thunderbird\" Mime Type \"x-scheme-handler/mailto\"","title":"Thunderbird"},{"location":"applications/thunderbird/#thunderbird","text":"","title":"Thunderbird"},{"location":"applications/thunderbird/#inherite-from","text":"abcdesktopio/oc.template.gtk.language-pack-all","title":"inherite from"},{"location":"applications/thunderbird/#use-ubuntu-package","text":"tk thunderbird gnome-keyring","title":"use ubuntu package"},{"location":"applications/thunderbird/#display-name","text":"\"Thunderbird\"","title":"Display name"},{"location":"applications/thunderbird/#path","text":"\"/usr/bin/thunderbird\"","title":"path"},{"location":"applications/thunderbird/#mime-type","text":"\"x-scheme-handler/mailto\"","title":"Mime Type"},{"location":"applications/vlc/","text":"vlc inherite from abcdesktopio/oc.template.gtk use ubuntu package ffmpeg vlc Display name \"videolan\" path \"/usr/bin/vlc\" Mime Type \"video/3gpp;video/dv;video/fli;video/flv;video/mp2t;video/mp4;video/mp4v-es;video/mpeg;video/msvideo;video/ogg;video/quicktime;video/vivo;video/vnd.divx;video/vnd.rn-realvideo;video/vnd.vivo;video/webm;video/x-anim;video/x-avi;video/x-flc;video/x-fli;video/x-flic;video/x-flv;video/x-m4v;video/x-matroska;video/x-mpeg;video/x-ms-asf;video/x-ms-asx;video/x-msvideo;video/x-ms-wm;video/x-ms-wmv;video/x-ms-wmx;video/x-ms-wvx;video/x-nsv;video/x-ogm+ogg;video/x-theora+ogg;\" File extensions \"asx;dts;gxf;m2v;m3u;m4v;mpeg1;mpeg2;mts;mxf;ogm;pls;bup;a52;aac;b4s;cue;divx;dv;flv;m1v;m2ts;mkv;mov;mpeg4;oma;spx;ts,vlc,vob,xspf;dat;bin;ifo;part;3g2;avi;mpeg;mpg;flac;m4a;mp1;ogg;wav;xm;3gp;srt;wmv;ac3;asf;mod;mp2;mp3;mp4;wma;mka;m4p\"","title":"vlc"},{"location":"applications/vlc/#vlc","text":"","title":"vlc"},{"location":"applications/vlc/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/vlc/#use-ubuntu-package","text":"ffmpeg vlc","title":"use ubuntu package"},{"location":"applications/vlc/#display-name","text":"\"videolan\"","title":"Display name"},{"location":"applications/vlc/#path","text":"\"/usr/bin/vlc\"","title":"path"},{"location":"applications/vlc/#mime-type","text":"\"video/3gpp;video/dv;video/fli;video/flv;video/mp2t;video/mp4;video/mp4v-es;video/mpeg;video/msvideo;video/ogg;video/quicktime;video/vivo;video/vnd.divx;video/vnd.rn-realvideo;video/vnd.vivo;video/webm;video/x-anim;video/x-avi;video/x-flc;video/x-fli;video/x-flic;video/x-flv;video/x-m4v;video/x-matroska;video/x-mpeg;video/x-ms-asf;video/x-ms-asx;video/x-msvideo;video/x-ms-wm;video/x-ms-wmv;video/x-ms-wmx;video/x-ms-wvx;video/x-nsv;video/x-ogm+ogg;video/x-theora+ogg;\"","title":"Mime Type"},{"location":"applications/vlc/#file-extensions","text":"\"asx;dts;gxf;m2v;m3u;m4v;mpeg1;mpeg2;mts;mxf;ogm;pls;bup;a52;aac;b4s;cue;divx;dv;flv;m1v;m2ts;mkv;mov;mpeg4;oma;spx;ts,vlc,vob,xspf;dat;bin;ifo;part;3g2;avi;mpeg;mpg;flac;m4a;mp1;ogg;wav;xm;3gp;srt;wmv;ac3;asf;mod;mp2;mp3;mp4;wma;mka;m4p\"","title":"File extensions"},{"location":"applications/vscode/","text":"VSCode inherite from abcdesktopio/oc.template.gtk.fulldev.vscode Arguments \"--extensions-dir /usr/share/code/extensions --disable-gpu --verbose\" Display name \"VSCode\" path \"/usr/bin/code\" Mime Type \"text/x-c;application/json;application/javascript;application/xml;text/xml;application/java-archive;text/x-java-source;text/plain;image/svg+xml;application/x-csh;text/x-yaml;application/x-yaml;application/x-python;\" File extensions \"c;cpp;py;json;js;java;jav;md;xml;txt;svg;html;htm;sh;csh;css;jsx;tsx;vue;yml;yaml;\" Legacy file extensions \"c;cpp;py;json;java;md;yml;yaml;\" Share size \"2gb\"","title":"VSCode"},{"location":"applications/vscode/#vscode","text":"","title":"VSCode"},{"location":"applications/vscode/#inherite-from","text":"abcdesktopio/oc.template.gtk.fulldev.vscode","title":"inherite from"},{"location":"applications/vscode/#arguments","text":"\"--extensions-dir /usr/share/code/extensions --disable-gpu --verbose\"","title":"Arguments"},{"location":"applications/vscode/#display-name","text":"\"VSCode\"","title":"Display name"},{"location":"applications/vscode/#path","text":"\"/usr/bin/code\"","title":"path"},{"location":"applications/vscode/#mime-type","text":"\"text/x-c;application/json;application/javascript;application/xml;text/xml;application/java-archive;text/x-java-source;text/plain;image/svg+xml;application/x-csh;text/x-yaml;application/x-yaml;application/x-python;\"","title":"Mime Type"},{"location":"applications/vscode/#file-extensions","text":"\"c;cpp;py;json;js;java;jav;md;xml;txt;svg;html;htm;sh;csh;css;jsx;tsx;vue;yml;yaml;\"","title":"File extensions"},{"location":"applications/vscode/#legacy-file-extensions","text":"\"c;cpp;py;json;java;md;yml;yaml;\"","title":"Legacy file extensions"},{"location":"applications/vscode/#share-size","text":"\"2gb\"","title":"Share size"},{"location":"applications/winefile-wine/","text":"winefile-wine inherite from abcdesktopio/oc.template.gtk.mswindows Arguments \"winefile\" Display name \"Winefile Wine\" path \"/usr/bin/wine\"","title":"winefile-wine"},{"location":"applications/winefile-wine/#winefile-wine","text":"","title":"winefile-wine"},{"location":"applications/winefile-wine/#inherite-from","text":"abcdesktopio/oc.template.gtk.mswindows","title":"inherite from"},{"location":"applications/winefile-wine/#arguments","text":"\"winefile\"","title":"Arguments"},{"location":"applications/winefile-wine/#display-name","text":"\"Winefile Wine\"","title":"Display name"},{"location":"applications/winefile-wine/#path","text":"\"/usr/bin/wine\"","title":"path"},{"location":"applications/winemine-wine/","text":"winemine-wine inherite from abcdesktopio/oc.template.gtk.mswindows Arguments \"winemine\" Display name \"WineMine Wine\" path \"/usr/bin/wine\"","title":"winemine-wine"},{"location":"applications/winemine-wine/#winemine-wine","text":"","title":"winemine-wine"},{"location":"applications/winemine-wine/#inherite-from","text":"abcdesktopio/oc.template.gtk.mswindows","title":"inherite from"},{"location":"applications/winemine-wine/#arguments","text":"\"winemine\"","title":"Arguments"},{"location":"applications/winemine-wine/#display-name","text":"\"WineMine Wine\"","title":"Display name"},{"location":"applications/winemine-wine/#path","text":"\"/usr/bin/wine\"","title":"path"},{"location":"applications/winhelp-wine/","text":"winhelp-wine inherite from abcdesktopio/oc.template.gtk.mswindows Arguments \"winhelp\" Display name \"Winhelp Wine\" path \"/usr/bin/wine\" Mime Type \"application/hlp;\" File extensions \"hlp;\"","title":"winhelp-wine"},{"location":"applications/winhelp-wine/#winhelp-wine","text":"","title":"winhelp-wine"},{"location":"applications/winhelp-wine/#inherite-from","text":"abcdesktopio/oc.template.gtk.mswindows","title":"inherite from"},{"location":"applications/winhelp-wine/#arguments","text":"\"winhelp\"","title":"Arguments"},{"location":"applications/winhelp-wine/#display-name","text":"\"Winhelp Wine\"","title":"Display name"},{"location":"applications/winhelp-wine/#path","text":"\"/usr/bin/wine\"","title":"path"},{"location":"applications/winhelp-wine/#mime-type","text":"\"application/hlp;\"","title":"Mime Type"},{"location":"applications/winhelp-wine/#file-extensions","text":"\"hlp;\"","title":"File extensions"},{"location":"applications/writer/","text":"Writer inherite from abcdesktopio/oc.template.gtk.libreoffice Arguments \"--writer\" Display name \"Writer\" path \"/usr/lib/libreoffice/program/soffice\" uniquerunkey \"libreoffice\" showinview \"dock\" Mime Type \"application/vnd.oasis.opendocument.text;application/vnd.oasis.opendocument.text-template;application/vnd.oasis.opendocument.text-web;application/vnd.oasis.opendocument.text-master;application/vnd.oasis.opendocument.text-master-template;application/vnd.sun.xml.writer;application/vnd.sun.xml.writer.template;application/vnd.sun.xml.writer.global;application/msword;application/vnd.ms-word;application/x-doc;application/x-hwp;application/rtf;text/rtf;application/vnd.wordperfect;application/wordperfect;application/vnd.lotus-wordpro;application/vnd.openxmlformats-officedocument.wordprocessingml.document;application/vnd.ms-word.document.macroenabled.12;application/vnd.openxmlformats-officedocument.wordprocessingml.template;application/vnd.ms-word.template.macroenabled.12;application/vnd.stardivision.writer-global;application/x-extension-txt;application/x-t602;application/vnd.oasis.opendocument.text-flat-xml;application/x-fictionbook+xml;application/macwriteii;application/x-aportisdoc;application/prs.plucker;application/vnd.palm;application/clarisworks;application/x-sony-bbeb;application/x-abiword;application/x-iwork-pages-sffpages;application/x-mswrite;\" File extensions \"sxw;stw;doc;dot;wps;rtf;602;wpd;docx;docm;dotx;dotm;abw;zabw;pages;dummy;lrf;cwk;hqx;fb2;mw;mcw;mwd;pdb;wn\" Legacy file extensions \"odf;ott;fodt;uot\"","title":"Writer"},{"location":"applications/writer/#writer","text":"","title":"Writer"},{"location":"applications/writer/#inherite-from","text":"abcdesktopio/oc.template.gtk.libreoffice","title":"inherite from"},{"location":"applications/writer/#arguments","text":"\"--writer\"","title":"Arguments"},{"location":"applications/writer/#display-name","text":"\"Writer\"","title":"Display name"},{"location":"applications/writer/#path","text":"\"/usr/lib/libreoffice/program/soffice\"","title":"path"},{"location":"applications/writer/#uniquerunkey","text":"\"libreoffice\"","title":"uniquerunkey"},{"location":"applications/writer/#showinview","text":"\"dock\"","title":"showinview"},{"location":"applications/writer/#mime-type","text":"\"application/vnd.oasis.opendocument.text;application/vnd.oasis.opendocument.text-template;application/vnd.oasis.opendocument.text-web;application/vnd.oasis.opendocument.text-master;application/vnd.oasis.opendocument.text-master-template;application/vnd.sun.xml.writer;application/vnd.sun.xml.writer.template;application/vnd.sun.xml.writer.global;application/msword;application/vnd.ms-word;application/x-doc;application/x-hwp;application/rtf;text/rtf;application/vnd.wordperfect;application/wordperfect;application/vnd.lotus-wordpro;application/vnd.openxmlformats-officedocument.wordprocessingml.document;application/vnd.ms-word.document.macroenabled.12;application/vnd.openxmlformats-officedocument.wordprocessingml.template;application/vnd.ms-word.template.macroenabled.12;application/vnd.stardivision.writer-global;application/x-extension-txt;application/x-t602;application/vnd.oasis.opendocument.text-flat-xml;application/x-fictionbook+xml;application/macwriteii;application/x-aportisdoc;application/prs.plucker;application/vnd.palm;application/clarisworks;application/x-sony-bbeb;application/x-abiword;application/x-iwork-pages-sffpages;application/x-mswrite;\"","title":"Mime Type"},{"location":"applications/writer/#file-extensions","text":"\"sxw;stw;doc;dot;wps;rtf;602;wpd;docx;docm;dotx;dotm;abw;zabw;pages;dummy;lrf;cwk;hqx;fb2;mw;mcw;mwd;pdb;wn\"","title":"File extensions"},{"location":"applications/writer/#legacy-file-extensions","text":"\"odf;ott;fodt;uot\"","title":"Legacy file extensions"},{"location":"applications/xedit/","text":"xedit inherite from abcdesktopio/oc.template.gtk use ubuntu package x11-apps Display name \"Xedit\" path \"/usr/bin/xedit\" Mime Type \"application/text;\" File extensions \"txt;log;md\"","title":"xedit"},{"location":"applications/xedit/#xedit","text":"","title":"xedit"},{"location":"applications/xedit/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/xedit/#use-ubuntu-package","text":"x11-apps","title":"use ubuntu package"},{"location":"applications/xedit/#display-name","text":"\"Xedit\"","title":"Display name"},{"location":"applications/xedit/#path","text":"\"/usr/bin/xedit\"","title":"path"},{"location":"applications/xedit/#mime-type","text":"\"application/text;\"","title":"Mime Type"},{"location":"applications/xedit/#file-extensions","text":"\"txt;log;md\"","title":"File extensions"},{"location":"applications/xeyes/","text":"xeyes inherite from abcdesktopio/oc.template.gtk use ubuntu package x11-apps Display name \"xeyes\" path \"/usr/bin/xeyes\"","title":"xeyes"},{"location":"applications/xeyes/#xeyes","text":"","title":"xeyes"},{"location":"applications/xeyes/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/xeyes/#use-ubuntu-package","text":"x11-apps","title":"use ubuntu package"},{"location":"applications/xeyes/#display-name","text":"\"xeyes\"","title":"Display name"},{"location":"applications/xeyes/#path","text":"\"/usr/bin/xeyes\"","title":"path"},{"location":"applications/xman/","text":"xman inherite from abcdesktopio/oc.template.gtk.18.04 use ubuntu package x11-apps man-db manpages manpages-posix manpages-dev manpages-posix-dev Display name \"Xman\" path \"/usr/bin/xman\" Mime Type \"application/x-troff;application/x-troff-man;\" File extensions \"man;roff\"","title":"xman"},{"location":"applications/xman/#xman","text":"","title":"xman"},{"location":"applications/xman/#inherite-from","text":"abcdesktopio/oc.template.gtk.18.04","title":"inherite from"},{"location":"applications/xman/#use-ubuntu-package","text":"x11-apps man-db manpages manpages-posix manpages-dev manpages-posix-dev","title":"use ubuntu package"},{"location":"applications/xman/#display-name","text":"\"Xman\"","title":"Display name"},{"location":"applications/xman/#path","text":"\"/usr/bin/xman\"","title":"path"},{"location":"applications/xman/#mime-type","text":"\"application/x-troff;application/x-troff-man;\"","title":"Mime Type"},{"location":"applications/xman/#file-extensions","text":"\"man;roff\"","title":"File extensions"},{"location":"applications/xterm/","text":"Xterm inherite from abcdesktopio/oc.template.gtk use ubuntu package xterm Display name \"Xterm\" path \"/usr/bin/xterm\"","title":"Xterm"},{"location":"applications/xterm/#xterm","text":"","title":"Xterm"},{"location":"applications/xterm/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/xterm/#use-ubuntu-package","text":"xterm","title":"use ubuntu package"},{"location":"applications/xterm/#display-name","text":"\"Xterm\"","title":"Display name"},{"location":"applications/xterm/#path","text":"\"/usr/bin/xterm\"","title":"path"},{"location":"applications/youtube/","text":"youtube inherite from abcdesktopio/oc.template.gtk use ubuntu package firefox Arguments \"-P youtube --class=youtube https://www.youtube.com/\" Display name \"Youtube\" path \"/usr/bin/firefox\" Mime Type \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\" File extensions \"html;xml;gif\" Legacy file extensions \"html;xml\" Pre run command COPY composer/init.d/init.firefox.youtube /composer/init.d/init.firefox","title":"youtube"},{"location":"applications/youtube/#youtube","text":"","title":"youtube"},{"location":"applications/youtube/#inherite-from","text":"abcdesktopio/oc.template.gtk","title":"inherite from"},{"location":"applications/youtube/#use-ubuntu-package","text":"firefox","title":"use ubuntu package"},{"location":"applications/youtube/#arguments","text":"\"-P youtube --class=youtube https://www.youtube.com/\"","title":"Arguments"},{"location":"applications/youtube/#display-name","text":"\"Youtube\"","title":"Display name"},{"location":"applications/youtube/#path","text":"\"/usr/bin/firefox\"","title":"path"},{"location":"applications/youtube/#mime-type","text":"\"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\"","title":"Mime Type"},{"location":"applications/youtube/#file-extensions","text":"\"html;xml;gif\"","title":"File extensions"},{"location":"applications/youtube/#legacy-file-extensions","text":"\"html;xml\"","title":"Legacy file extensions"},{"location":"applications/youtube/#pre-run-command","text":"COPY composer/init.d/init.firefox.youtube /composer/init.d/init.firefox","title":"Pre run command"},{"location":"applications/abcdesktopio/oc.template.gtk.18.04/","text":"","title":"Oc.template.gtk.18.04"},{"location":"applications/abcdesktopio/oc.template.gtk.elementary/","text":"","title":"Oc.template.gtk.elementary"},{"location":"applications/abcdesktopio/oc.template.gtk.firefox.rest/","text":"","title":"Oc.template.gtk.firefox.rest"},{"location":"applications/abcdesktopio/oc.template.gtk.fulldev.ia/","text":"","title":"Oc.template.gtk.fulldev.ia"},{"location":"applications/abcdesktopio/oc.template.gtk.fulldev/","text":"","title":"Oc.template.gtk.fulldev"},{"location":"applications/abcdesktopio/oc.template.gtk.fulldev.vscode/","text":"","title":"Oc.template.gtk.fulldev.vscode"},{"location":"applications/abcdesktopio/oc.template.gtk.gimagereader/","text":"","title":"Oc.template.gtk.gimagereader"},{"location":"applications/abcdesktopio/oc.template.gtk.java.eclipse/","text":"","title":"Oc.template.gtk.java.eclipse"},{"location":"applications/abcdesktopio/oc.template.gtk.java.gephi/","text":"","title":"Oc.template.gtk.java.gephi"},{"location":"applications/abcdesktopio/oc.template.gtk.java.sts4/","text":"","title":"Oc.template.gtk.java.sts4"},{"location":"applications/abcdesktopio/oc.template.gtk.language-pack-all/","text":"","title":"Oc.template.gtk.language pack all"},{"location":"applications/abcdesktopio/oc.template.gtk.libreoffice/","text":"","title":"Oc.template.gtk.libreoffice"},{"location":"applications/abcdesktopio/oc.template.gtk/","text":"","title":"Oc.template.gtk"},{"location":"applications/abcdesktopio/oc.template.gtk.mswindows.default/","text":"","title":"Oc.template.gtk.mswindows.default"},{"location":"applications/abcdesktopio/oc.template.gtk.mswindows.putty/","text":"","title":"Oc.template.gtk.mswindows.putty"},{"location":"applications/abcdesktopio/oc.template.gtk.postman/","text":"","title":"Oc.template.gtk.postman"},{"location":"cheatsheets/bash/","tags":["Featured"],"text":"Getting started {: .-three-column} Example #!/usr/bin/env bash NAME=\"John\" echo \"Hello $NAME!\" Variables NAME=\"John\" echo $NAME echo \"$NAME\" echo \"${NAME}!\" String quotes NAME=\"John\" echo \"Hi $NAME\" #=> Hi John echo 'Hi $NAME' #=> Hi $NAME Shell execution echo \"I'm in $(pwd)\" echo \"I'm in `pwd`\" # Same See Command substitution Conditional execution git commit && git push git commit || echo \"Commit failed\" Functions {: id='functions-example'} get_name() { echo \"John\" } echo \"You are $(get_name)\" See: Functions Conditionals {: id='conditionals-example'} if [[ -z \"$string\" ]]; then echo \"String is empty\" elif [[ -n \"$string\" ]]; then echo \"String is not empty\" fi See: Conditionals Strict mode set -euo pipefail IFS=$'\\n\\t' See: Unofficial bash strict mode Brace expansion echo {A,B}.js | {A,B} | Same as A B | | {A,B}.js | Same as A.js B.js | | {1..5} | Same as 1 2 3 4 5 | See: Brace expansion Parameter expansions {: .-three-column} Basics name=\"John\" echo ${name} echo ${name/J/j} #=> \"john\" (substitution) echo ${name:0:2} #=> \"Jo\" (slicing) echo ${name::2} #=> \"Jo\" (slicing) echo ${name::-1} #=> \"Joh\" (slicing) echo ${name:(-1)} #=> \"n\" (slicing from right) echo ${name:(-2):1} #=> \"h\" (slicing from right) echo ${food:-Cake} #=> $food or \"Cake\" length=2 echo ${name:0:length} #=> \"Jo\" See: Parameter expansion STR=\"/path/to/foo.cpp\" echo ${STR%.cpp} # /path/to/foo echo ${STR%.cpp}.o # /path/to/foo.o echo ${STR##*.} # cpp (extension) echo ${STR##*/} # foo.cpp (basepath) echo ${STR#*/} # path/to/foo.cpp echo ${STR##*/} # foo.cpp echo ${STR/foo/bar} # /path/to/bar.cpp STR=\"Hello world\" echo ${STR:6:5} # \"world\" echo ${STR:-5:5} # \"world\" SRC=\"/path/to/foo.cpp\" BASE=${SRC##*/} #=> \"foo.cpp\" (basepath) DIR=${SRC%$BASE} #=> \"/path/to/\" (dirpath) Substitution Code Description ${FOO%suffix} Remove suffix ${FOO#prefix} Remove prefix --- --- ${FOO%%suffix} Remove long suffix ${FOO##prefix} Remove long prefix --- --- ${FOO/from/to} Replace first match ${FOO//from/to} Replace all --- --- ${FOO/%from/to} Replace suffix ${FOO/#from/to} Replace prefix Comments # Single line comment : ' This is a multi line comment ' Substrings | ${FOO:0:3} | Substring (position, length) | | ${FOO:-3:3} | Substring from the right | Length | ${#FOO} | Length of $FOO | Manipulation STR=\"HELLO WORLD!\" echo ${STR,} #=> \"hELLO WORLD!\" (lowercase 1st letter) echo ${STR,,} #=> \"hello world!\" (all lowercase) STR=\"hello world!\" echo ${STR^} #=> \"Hello world!\" (uppercase 1st letter) echo ${STR^^} #=> \"HELLO WORLD!\" (all uppercase) Default values | ${FOO:-val} | $FOO , or val if not set | | ${FOO:=val} | Set $FOO to val if not set | | ${FOO:+val} | val if $FOO is set | | ${FOO:?message} | Show error message and exit if $FOO is not set | The : is optional (eg, ${FOO=word} works) Loops {: .-three-column} Basic for loop for i in /etc/rc.*; do echo $i done C-like for loop for ((i = 0 ; i < 100 ; i++)); do echo $i done Ranges for i in {1..5}; do echo \"Welcome $i\" done With step size for i in {5..50..5}; do echo \"Welcome $i\" done Reading lines cat file.txt | while read line; do echo $line done Forever while true; do \u00b7\u00b7\u00b7 done Functions {: .-three-column} Defining functions myfunc() { echo \"hello $1\" } # Same as above (alternate syntax) function myfunc() { echo \"hello $1\" } myfunc \"John\" Returning values myfunc() { local myresult='some value' echo $myresult } result=\"$(myfunc)\" Raising errors myfunc() { return 1 } if myfunc; then echo \"success\" else echo \"failure\" fi Arguments Expression Description $# Number of arguments $* All arguments $@ All arguments, starting from first $1 First argument $_ Last argument of the previous command See Special parameters . Conditionals {: .-three-column} Conditions Note that [[ is actually a command/program that returns either 0 (true) or 1 (false). Any program that obeys the same logic (like all base utils, such as grep(1) or ping(1) ) can be used as condition, see examples. Condition Description [[ -z STRING ]] Empty string [[ -n STRING ]] Not empty string [[ STRING == STRING ]] Equal [[ STRING != STRING ]] Not Equal --- --- [[ NUM -eq NUM ]] Equal [[ NUM -ne NUM ]] Not equal [[ NUM -lt NUM ]] Less than [[ NUM -le NUM ]] Less than or equal [[ NUM -gt NUM ]] Greater than [[ NUM -ge NUM ]] Greater than or equal --- --- [[ STRING =~ STRING ]] Regexp --- --- (( NUM < NUM )) Numeric conditions Condition Description [[ -o noclobber ]] If OPTIONNAME is enabled --- --- [[ ! EXPR ]] Not [[ X ]] && [[ Y ]] And [[ X ]] || [[ Y ]] Or File conditions Condition Description [[ -e FILE ]] Exists [[ -r FILE ]] Readable [[ -h FILE ]] Symlink [[ -d FILE ]] Directory [[ -w FILE ]] Writable [[ -s FILE ]] Size is > 0 bytes [[ -f FILE ]] File [[ -x FILE ]] Executable --- --- [[ FILE1 -nt FILE2 ]] 1 is more recent than 2 [[ FILE1 -ot FILE2 ]] 2 is more recent than 1 [[ FILE1 -ef FILE2 ]] Same files Example # String if [[ -z \"$string\" ]]; then echo \"String is empty\" elif [[ -n \"$string\" ]]; then echo \"String is not empty\" fi # Combinations if [[ X ]] && [[ Y ]]; then ... fi # Equal if [[ \"$A\" == \"$B\" ]] # Regex if [[ \"A\" =~ . ]] if (( $a < $b )); then echo \"$a is smaller than $b\" fi if [[ -e \"file.txt\" ]]; then echo \"file exists\" fi Arrays Defining arrays Fruits=('Apple' 'Banana' 'Orange') Fruits[0]=\"Apple\" Fruits[1]=\"Banana\" Fruits[2]=\"Orange\" Working with arrays echo ${Fruits[0]} # Element #0 echo ${Fruits[@]} # All elements, space-separated echo ${#Fruits[@]} # Number of elements echo ${#Fruits} # String length of the 1st element echo ${#Fruits[3]} # String length of the Nth element echo ${Fruits[@]:3:2} # Range (from position 3, length 2) Operations Fruits=(\"${Fruits[@]}\" \"Watermelon\") # Push Fruits+=('Watermelon') # Also Push Fruits=( ${Fruits[@]/Ap*/} ) # Remove by regex match unset Fruits[2] # Remove one item Fruits=(\"${Fruits[@]}\") # Duplicate Fruits=(\"${Fruits[@]}\" \"${Veggies[@]}\") # Concatenate lines=(`cat \"logfile\"`) # Read from file Iteration for i in \"${arrayName[@]}\"; do echo $i done Dictionaries {: .-three-column} Defining declare -A sounds sounds[dog]=\"bark\" sounds[cow]=\"moo\" sounds[bird]=\"tweet\" sounds[wolf]=\"howl\" Declares sound as a Dictionary object (aka associative array). Working with dictionaries echo ${sounds[dog]} # Dog's sound echo ${sounds[@]} # All values echo ${!sounds[@]} # All keys echo ${#sounds[@]} # Number of elements unset sounds[dog] # Delete dog Iteration Iterate over values for val in \"${sounds[@]}\"; do echo $val done Iterate over keys for key in \"${!sounds[@]}\"; do echo $key done Options Options set -o noclobber # Avoid overlay files (echo \"hi\" > foo) set -o errexit # Used to exit upon error, avoiding cascading errors set -o pipefail # Unveils hidden failures set -o nounset # Exposes unset variables Glob options shopt -s nullglob # Non-matching globs are removed ('*.foo' => '') shopt -s failglob # Non-matching globs throw errors shopt -s nocaseglob # Case insensitive globs shopt -s dotglob # Wildcards match dotfiles (\"*.sh\" => \".foo.sh\") shopt -s globstar # Allow ** for recursive matches ('lib/**/*.rb' => 'lib/a/b/c.rb') Set GLOBIGNORE as a colon-separated list of patterns to be removed from glob matches. History Commands | history | Show history | | shopt -s histverify | Don't execute expanded result immediately | Expansions | !$ | Expand last parameter of most recent command | | !* | Expand all parameters of most recent command | | !-n | Expand n th most recent command | | !n | Expand n th command in history | | !<command> | Expand most recent invocation of command <command> | Operations | !! | Execute last command again | | !!:s/<FROM>/<TO>/ | Replace first occurrence of <FROM> to <TO> in most recent command | | !!:gs/<FROM>/<TO>/ | Replace all occurrences of <FROM> to <TO> in most recent command | | !$:t | Expand only basename from last parameter of most recent command | | !$:h | Expand only directory from last parameter of most recent command | !! and !$ can be replaced with any valid expansion. Slices | !!:n | Expand only n th token from most recent command (command is 0 ; first argument is 1 ) | | !^ | Expand first argument from most recent command | | !$ | Expand last token from most recent command | | !!:n-m | Expand range of tokens from most recent command | | !!:n-$ | Expand n th token to last from most recent command | !! can be replaced with any valid expansion i.e. !cat , !-2 , !42 , etc. Miscellaneous Numeric calculations $((a + 200)) # Add 200 to $a $((RANDOM%=200)) # Random number 0..200 Subshells (cd somedir; echo \"I'm now in $PWD\") pwd # still in first directory Redirection python hello.py > output.txt # stdout to (file) python hello.py >> output.txt # stdout to (file), append python hello.py 2> error.log # stderr to (file) python hello.py 2>&1 # stderr to stdout python hello.py 2>/dev/null # stderr to (null) python hello.py &>/dev/null # stdout and stderr to (null) python hello.py < foo.txt # feed foo.txt to stdin for python Inspecting commands command -V cd #=> \"cd is a function/alias/whatever\" Trap errors trap 'echo Error at about $LINENO' ERR or traperr() { echo \"ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}\" } set -o errtrace trap traperr ERR Case/switch case \"$1\" in start | up) vagrant up ;; *) echo \"Usage: $0 {start|stop|ssh}\" ;; esac Source relative source \"${0%/*}/../share/foo.sh\" printf printf \"Hello %s, I'm %s\" Sven Olga #=> \"Hello Sven, I'm Olga printf \"1 + 1 = %d\" 2 #=> \"1 + 1 = 2\" printf \"This is how you print a float: %f\" 2 #=> \"This is how you print a float: 2.000000\" Directory of script DIR=\"${0%/*}\" Getting options while [[ \"$1\" =~ ^- && ! \"$1\" == \"--\" ]]; do case $1 in -V | --version ) echo $version exit ;; -s | --string ) shift; string=$1 ;; -f | --flag ) flag=1 ;; esac; shift; done if [[ \"$1\" == '--' ]]; then shift; fi Heredoc cat <<END hello world END Reading input echo -n \"Proceed? [y/n]: \" read ans echo $ans read -n 1 ans # Just one character Special variables | $? | Exit status of last task | | $! | PID of last background task | | $$ | PID of shell | | $0 | Filename of the shell script | See Special parameters . Go to previous directory pwd # /home/user/foo cd bar/ pwd # /home/user/foo/bar cd - pwd # /home/user/foo Check for command's result if ping -c 1 google.com; then echo \"It appears you have a working internet connection\" fi Grep check if grep -q 'foo' ~/.bash_history; then echo \"You appear to have typed 'foo' in the past\" fi Also see {: .-one-column} Bash-hackers wiki (bash-hackers.org) Shell vars (bash-hackers.org) Learn bash in y minutes (learnxinyminutes.com) Bash Guide (mywiki.wooledge.org) ShellCheck (shellcheck.net)","title":"Bash scripting"},{"location":"cheatsheets/bash/#getting-started","text":"{: .-three-column}","title":"Getting started"},{"location":"cheatsheets/bash/#example","text":"#!/usr/bin/env bash NAME=\"John\" echo \"Hello $NAME!\"","title":"Example"},{"location":"cheatsheets/bash/#variables","text":"NAME=\"John\" echo $NAME echo \"$NAME\" echo \"${NAME}!\"","title":"Variables"},{"location":"cheatsheets/bash/#string-quotes","text":"NAME=\"John\" echo \"Hi $NAME\" #=> Hi John echo 'Hi $NAME' #=> Hi $NAME","title":"String quotes"},{"location":"cheatsheets/bash/#shell-execution","text":"echo \"I'm in $(pwd)\" echo \"I'm in `pwd`\" # Same See Command substitution","title":"Shell execution"},{"location":"cheatsheets/bash/#conditional-execution","text":"git commit && git push git commit || echo \"Commit failed\"","title":"Conditional execution"},{"location":"cheatsheets/bash/#functions","text":"{: id='functions-example'} get_name() { echo \"John\" } echo \"You are $(get_name)\" See: Functions","title":"Functions"},{"location":"cheatsheets/bash/#conditionals","text":"{: id='conditionals-example'} if [[ -z \"$string\" ]]; then echo \"String is empty\" elif [[ -n \"$string\" ]]; then echo \"String is not empty\" fi See: Conditionals","title":"Conditionals"},{"location":"cheatsheets/bash/#strict-mode","text":"set -euo pipefail IFS=$'\\n\\t' See: Unofficial bash strict mode","title":"Strict mode"},{"location":"cheatsheets/bash/#brace-expansion","text":"echo {A,B}.js | {A,B} | Same as A B | | {A,B}.js | Same as A.js B.js | | {1..5} | Same as 1 2 3 4 5 | See: Brace expansion","title":"Brace expansion"},{"location":"cheatsheets/bash/#parameter-expansions","text":"{: .-three-column}","title":"Parameter expansions"},{"location":"cheatsheets/bash/#basics","text":"name=\"John\" echo ${name} echo ${name/J/j} #=> \"john\" (substitution) echo ${name:0:2} #=> \"Jo\" (slicing) echo ${name::2} #=> \"Jo\" (slicing) echo ${name::-1} #=> \"Joh\" (slicing) echo ${name:(-1)} #=> \"n\" (slicing from right) echo ${name:(-2):1} #=> \"h\" (slicing from right) echo ${food:-Cake} #=> $food or \"Cake\" length=2 echo ${name:0:length} #=> \"Jo\" See: Parameter expansion STR=\"/path/to/foo.cpp\" echo ${STR%.cpp} # /path/to/foo echo ${STR%.cpp}.o # /path/to/foo.o echo ${STR##*.} # cpp (extension) echo ${STR##*/} # foo.cpp (basepath) echo ${STR#*/} # path/to/foo.cpp echo ${STR##*/} # foo.cpp echo ${STR/foo/bar} # /path/to/bar.cpp STR=\"Hello world\" echo ${STR:6:5} # \"world\" echo ${STR:-5:5} # \"world\" SRC=\"/path/to/foo.cpp\" BASE=${SRC##*/} #=> \"foo.cpp\" (basepath) DIR=${SRC%$BASE} #=> \"/path/to/\" (dirpath)","title":"Basics"},{"location":"cheatsheets/bash/#substitution","text":"Code Description ${FOO%suffix} Remove suffix ${FOO#prefix} Remove prefix --- --- ${FOO%%suffix} Remove long suffix ${FOO##prefix} Remove long prefix --- --- ${FOO/from/to} Replace first match ${FOO//from/to} Replace all --- --- ${FOO/%from/to} Replace suffix ${FOO/#from/to} Replace prefix","title":"Substitution"},{"location":"cheatsheets/bash/#comments","text":"# Single line comment : ' This is a multi line comment '","title":"Comments"},{"location":"cheatsheets/bash/#substrings","text":"| ${FOO:0:3} | Substring (position, length) | | ${FOO:-3:3} | Substring from the right |","title":"Substrings"},{"location":"cheatsheets/bash/#length","text":"| ${#FOO} | Length of $FOO |","title":"Length"},{"location":"cheatsheets/bash/#manipulation","text":"STR=\"HELLO WORLD!\" echo ${STR,} #=> \"hELLO WORLD!\" (lowercase 1st letter) echo ${STR,,} #=> \"hello world!\" (all lowercase) STR=\"hello world!\" echo ${STR^} #=> \"Hello world!\" (uppercase 1st letter) echo ${STR^^} #=> \"HELLO WORLD!\" (all uppercase)","title":"Manipulation"},{"location":"cheatsheets/bash/#default-values","text":"| ${FOO:-val} | $FOO , or val if not set | | ${FOO:=val} | Set $FOO to val if not set | | ${FOO:+val} | val if $FOO is set | | ${FOO:?message} | Show error message and exit if $FOO is not set | The : is optional (eg, ${FOO=word} works)","title":"Default values"},{"location":"cheatsheets/bash/#loops","text":"{: .-three-column}","title":"Loops"},{"location":"cheatsheets/bash/#basic-for-loop","text":"for i in /etc/rc.*; do echo $i done","title":"Basic for loop"},{"location":"cheatsheets/bash/#c-like-for-loop","text":"for ((i = 0 ; i < 100 ; i++)); do echo $i done","title":"C-like for loop"},{"location":"cheatsheets/bash/#ranges","text":"for i in {1..5}; do echo \"Welcome $i\" done","title":"Ranges"},{"location":"cheatsheets/bash/#with-step-size","text":"for i in {5..50..5}; do echo \"Welcome $i\" done","title":"With step size"},{"location":"cheatsheets/bash/#reading-lines","text":"cat file.txt | while read line; do echo $line done","title":"Reading lines"},{"location":"cheatsheets/bash/#forever","text":"while true; do \u00b7\u00b7\u00b7 done","title":"Forever"},{"location":"cheatsheets/bash/#functions_1","text":"{: .-three-column}","title":"Functions"},{"location":"cheatsheets/bash/#defining-functions","text":"myfunc() { echo \"hello $1\" } # Same as above (alternate syntax) function myfunc() { echo \"hello $1\" } myfunc \"John\"","title":"Defining functions"},{"location":"cheatsheets/bash/#returning-values","text":"myfunc() { local myresult='some value' echo $myresult } result=\"$(myfunc)\"","title":"Returning values"},{"location":"cheatsheets/bash/#raising-errors","text":"myfunc() { return 1 } if myfunc; then echo \"success\" else echo \"failure\" fi","title":"Raising errors"},{"location":"cheatsheets/bash/#arguments","text":"Expression Description $# Number of arguments $* All arguments $@ All arguments, starting from first $1 First argument $_ Last argument of the previous command See Special parameters .","title":"Arguments"},{"location":"cheatsheets/bash/#conditionals_1","text":"{: .-three-column}","title":"Conditionals"},{"location":"cheatsheets/bash/#conditions","text":"Note that [[ is actually a command/program that returns either 0 (true) or 1 (false). Any program that obeys the same logic (like all base utils, such as grep(1) or ping(1) ) can be used as condition, see examples. Condition Description [[ -z STRING ]] Empty string [[ -n STRING ]] Not empty string [[ STRING == STRING ]] Equal [[ STRING != STRING ]] Not Equal --- --- [[ NUM -eq NUM ]] Equal [[ NUM -ne NUM ]] Not equal [[ NUM -lt NUM ]] Less than [[ NUM -le NUM ]] Less than or equal [[ NUM -gt NUM ]] Greater than [[ NUM -ge NUM ]] Greater than or equal --- --- [[ STRING =~ STRING ]] Regexp --- --- (( NUM < NUM )) Numeric conditions Condition Description [[ -o noclobber ]] If OPTIONNAME is enabled --- --- [[ ! EXPR ]] Not [[ X ]] && [[ Y ]] And [[ X ]] || [[ Y ]] Or","title":"Conditions"},{"location":"cheatsheets/bash/#file-conditions","text":"Condition Description [[ -e FILE ]] Exists [[ -r FILE ]] Readable [[ -h FILE ]] Symlink [[ -d FILE ]] Directory [[ -w FILE ]] Writable [[ -s FILE ]] Size is > 0 bytes [[ -f FILE ]] File [[ -x FILE ]] Executable --- --- [[ FILE1 -nt FILE2 ]] 1 is more recent than 2 [[ FILE1 -ot FILE2 ]] 2 is more recent than 1 [[ FILE1 -ef FILE2 ]] Same files","title":"File conditions"},{"location":"cheatsheets/bash/#example_1","text":"# String if [[ -z \"$string\" ]]; then echo \"String is empty\" elif [[ -n \"$string\" ]]; then echo \"String is not empty\" fi # Combinations if [[ X ]] && [[ Y ]]; then ... fi # Equal if [[ \"$A\" == \"$B\" ]] # Regex if [[ \"A\" =~ . ]] if (( $a < $b )); then echo \"$a is smaller than $b\" fi if [[ -e \"file.txt\" ]]; then echo \"file exists\" fi","title":"Example"},{"location":"cheatsheets/bash/#arrays","text":"","title":"Arrays"},{"location":"cheatsheets/bash/#defining-arrays","text":"Fruits=('Apple' 'Banana' 'Orange') Fruits[0]=\"Apple\" Fruits[1]=\"Banana\" Fruits[2]=\"Orange\"","title":"Defining arrays"},{"location":"cheatsheets/bash/#working-with-arrays","text":"echo ${Fruits[0]} # Element #0 echo ${Fruits[@]} # All elements, space-separated echo ${#Fruits[@]} # Number of elements echo ${#Fruits} # String length of the 1st element echo ${#Fruits[3]} # String length of the Nth element echo ${Fruits[@]:3:2} # Range (from position 3, length 2)","title":"Working with arrays"},{"location":"cheatsheets/bash/#operations","text":"Fruits=(\"${Fruits[@]}\" \"Watermelon\") # Push Fruits+=('Watermelon') # Also Push Fruits=( ${Fruits[@]/Ap*/} ) # Remove by regex match unset Fruits[2] # Remove one item Fruits=(\"${Fruits[@]}\") # Duplicate Fruits=(\"${Fruits[@]}\" \"${Veggies[@]}\") # Concatenate lines=(`cat \"logfile\"`) # Read from file","title":"Operations"},{"location":"cheatsheets/bash/#iteration","text":"for i in \"${arrayName[@]}\"; do echo $i done","title":"Iteration"},{"location":"cheatsheets/bash/#dictionaries","text":"{: .-three-column}","title":"Dictionaries"},{"location":"cheatsheets/bash/#defining","text":"declare -A sounds sounds[dog]=\"bark\" sounds[cow]=\"moo\" sounds[bird]=\"tweet\" sounds[wolf]=\"howl\" Declares sound as a Dictionary object (aka associative array).","title":"Defining"},{"location":"cheatsheets/bash/#working-with-dictionaries","text":"echo ${sounds[dog]} # Dog's sound echo ${sounds[@]} # All values echo ${!sounds[@]} # All keys echo ${#sounds[@]} # Number of elements unset sounds[dog] # Delete dog","title":"Working with dictionaries"},{"location":"cheatsheets/bash/#iteration_1","text":"","title":"Iteration"},{"location":"cheatsheets/bash/#iterate-over-values","text":"for val in \"${sounds[@]}\"; do echo $val done","title":"Iterate over values"},{"location":"cheatsheets/bash/#iterate-over-keys","text":"for key in \"${!sounds[@]}\"; do echo $key done","title":"Iterate over keys"},{"location":"cheatsheets/bash/#options","text":"","title":"Options"},{"location":"cheatsheets/bash/#options_1","text":"set -o noclobber # Avoid overlay files (echo \"hi\" > foo) set -o errexit # Used to exit upon error, avoiding cascading errors set -o pipefail # Unveils hidden failures set -o nounset # Exposes unset variables","title":"Options"},{"location":"cheatsheets/bash/#glob-options","text":"shopt -s nullglob # Non-matching globs are removed ('*.foo' => '') shopt -s failglob # Non-matching globs throw errors shopt -s nocaseglob # Case insensitive globs shopt -s dotglob # Wildcards match dotfiles (\"*.sh\" => \".foo.sh\") shopt -s globstar # Allow ** for recursive matches ('lib/**/*.rb' => 'lib/a/b/c.rb') Set GLOBIGNORE as a colon-separated list of patterns to be removed from glob matches.","title":"Glob options"},{"location":"cheatsheets/bash/#history","text":"","title":"History"},{"location":"cheatsheets/bash/#commands","text":"| history | Show history | | shopt -s histverify | Don't execute expanded result immediately |","title":"Commands"},{"location":"cheatsheets/bash/#expansions","text":"| !$ | Expand last parameter of most recent command | | !* | Expand all parameters of most recent command | | !-n | Expand n th most recent command | | !n | Expand n th command in history | | !<command> | Expand most recent invocation of command <command> |","title":"Expansions"},{"location":"cheatsheets/bash/#operations_1","text":"| !! | Execute last command again | | !!:s/<FROM>/<TO>/ | Replace first occurrence of <FROM> to <TO> in most recent command | | !!:gs/<FROM>/<TO>/ | Replace all occurrences of <FROM> to <TO> in most recent command | | !$:t | Expand only basename from last parameter of most recent command | | !$:h | Expand only directory from last parameter of most recent command | !! and !$ can be replaced with any valid expansion.","title":"Operations"},{"location":"cheatsheets/bash/#slices","text":"| !!:n | Expand only n th token from most recent command (command is 0 ; first argument is 1 ) | | !^ | Expand first argument from most recent command | | !$ | Expand last token from most recent command | | !!:n-m | Expand range of tokens from most recent command | | !!:n-$ | Expand n th token to last from most recent command | !! can be replaced with any valid expansion i.e. !cat , !-2 , !42 , etc.","title":"Slices"},{"location":"cheatsheets/bash/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"cheatsheets/bash/#numeric-calculations","text":"$((a + 200)) # Add 200 to $a $((RANDOM%=200)) # Random number 0..200","title":"Numeric calculations"},{"location":"cheatsheets/bash/#subshells","text":"(cd somedir; echo \"I'm now in $PWD\") pwd # still in first directory","title":"Subshells"},{"location":"cheatsheets/bash/#redirection","text":"python hello.py > output.txt # stdout to (file) python hello.py >> output.txt # stdout to (file), append python hello.py 2> error.log # stderr to (file) python hello.py 2>&1 # stderr to stdout python hello.py 2>/dev/null # stderr to (null) python hello.py &>/dev/null # stdout and stderr to (null) python hello.py < foo.txt # feed foo.txt to stdin for python","title":"Redirection"},{"location":"cheatsheets/bash/#inspecting-commands","text":"command -V cd #=> \"cd is a function/alias/whatever\"","title":"Inspecting commands"},{"location":"cheatsheets/bash/#trap-errors","text":"trap 'echo Error at about $LINENO' ERR or traperr() { echo \"ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}\" } set -o errtrace trap traperr ERR","title":"Trap errors"},{"location":"cheatsheets/bash/#caseswitch","text":"case \"$1\" in start | up) vagrant up ;; *) echo \"Usage: $0 {start|stop|ssh}\" ;; esac","title":"Case/switch"},{"location":"cheatsheets/bash/#source-relative","text":"source \"${0%/*}/../share/foo.sh\"","title":"Source relative"},{"location":"cheatsheets/bash/#printf","text":"printf \"Hello %s, I'm %s\" Sven Olga #=> \"Hello Sven, I'm Olga printf \"1 + 1 = %d\" 2 #=> \"1 + 1 = 2\" printf \"This is how you print a float: %f\" 2 #=> \"This is how you print a float: 2.000000\"","title":"printf"},{"location":"cheatsheets/bash/#directory-of-script","text":"DIR=\"${0%/*}\"","title":"Directory of script"},{"location":"cheatsheets/bash/#getting-options","text":"while [[ \"$1\" =~ ^- && ! \"$1\" == \"--\" ]]; do case $1 in -V | --version ) echo $version exit ;; -s | --string ) shift; string=$1 ;; -f | --flag ) flag=1 ;; esac; shift; done if [[ \"$1\" == '--' ]]; then shift; fi","title":"Getting options"},{"location":"cheatsheets/bash/#heredoc","text":"cat <<END hello world END","title":"Heredoc"},{"location":"cheatsheets/bash/#reading-input","text":"echo -n \"Proceed? [y/n]: \" read ans echo $ans read -n 1 ans # Just one character","title":"Reading input"},{"location":"cheatsheets/bash/#special-variables","text":"| $? | Exit status of last task | | $! | PID of last background task | | $$ | PID of shell | | $0 | Filename of the shell script | See Special parameters .","title":"Special variables"},{"location":"cheatsheets/bash/#go-to-previous-directory","text":"pwd # /home/user/foo cd bar/ pwd # /home/user/foo/bar cd - pwd # /home/user/foo","title":"Go to previous directory"},{"location":"cheatsheets/bash/#check-for-commands-result","text":"if ping -c 1 google.com; then echo \"It appears you have a working internet connection\" fi","title":"Check for command's result"},{"location":"cheatsheets/bash/#grep-check","text":"if grep -q 'foo' ~/.bash_history; then echo \"You appear to have typed 'foo' in the past\" fi","title":"Grep check"},{"location":"cheatsheets/bash/#also-see","text":"{: .-one-column} Bash-hackers wiki (bash-hackers.org) Shell vars (bash-hackers.org) Learn bash in y minutes (learnxinyminutes.com) Bash Guide (mywiki.wooledge.org) ShellCheck (shellcheck.net)","title":"Also see"},{"location":"cheatsheets/docker/","text":"Docker scripting cheatsheets Common Docker commands update all images docker images |grep -v REPOSITORY|awk '{print $1}'|xargs -L1 docker pull Remove exited container docker rm `docker ps -a -q -f \"status=exited\"` Remove dangling images docker rmi `docker images -q --filter \"dangling=true\"`","title":"Docker scripting cheatsheets"},{"location":"cheatsheets/docker/#docker-scripting-cheatsheets","text":"","title":"Docker scripting cheatsheets"},{"location":"cheatsheets/docker/#common-docker-commands","text":"","title":"Common Docker commands"},{"location":"cheatsheets/docker/#update-all-images","text":"docker images |grep -v REPOSITORY|awk '{print $1}'|xargs -L1 docker pull","title":"update all images"},{"location":"cheatsheets/docker/#remove-exited-container","text":"docker rm `docker ps -a -q -f \"status=exited\"`","title":"Remove exited container"},{"location":"cheatsheets/docker/#remove-dangling-images","text":"docker rmi `docker images -q --filter \"dangling=true\"`","title":"Remove dangling images"},{"location":"common/acl/","text":"Define access control list for application Goals restrict access to applications using authentication label Requirements A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host. Update applist.json file To restrict access to applications using authentication label, you need to define an acl entry in the application dictionary object. \"acl\": { \"permit\": [ \"tag\" ] }, For example using the application xedit all is a special label for everything. The xedit application can be run for all tags. { \"acl\": { \"permit\": [ \"all\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } To restrict access to applications using authentication label, you have to define label using rules during authentification step, and define label to the application. Define authenticated label using rules You can read the chapter authentification-rules to define some autenticated labels. Update the od.config file, to add a label mylocal if the source ip address is in local network 192.168.0.0/16 authmanagers: { 'external': {}, 'explicit': {}, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous', 'policies': { 'acl' : { 'permit': [ 'all' ] }, 'rules' : { 'rule-net-home': { 'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label' : 'localnet' } } } } } } } Restart the pyos service Using kubernetes run kubectl rollout restart daemonset daemonset-pyos -n abcdesktop Using docker only, run docker-compose restart When your services are restarted, launch your web browser Login to your abcdesktop service and choose anonymous authentication Check the label set during the authentication process Goto the menu option at the right up corner, choose Settings | User | Session You should read the label localnet in the Anonymous user information. Define the acl label to the application You can read the chapter Build your own application image , if your are building user docker abcdsktop application image for the first time. Create a xedit.json file Create a edit.json file with the content : { \"acl\": { \"permit\": [ \"localhost\", \"localnet\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can't download this file. Make sure that you have installed nodejs To install make.js command wget https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/make.js Create icons directory mkdir -p icons curl --output icons/xedit.svg https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/xedit.svg Run the make command node make.js -f xedit.json Dockerfile You should read on standard output myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] opening file xedit.json applist.json entries: 1 myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] Building file Dockerfile as output { acl: { permit: [ 'all' ] }, cat: 'utilities', debpackage: 'x11-apps', icon: 'xedit.svg', keyword: 'text,notepad,edit,txt,editor,xedit', launch: 'xedit.Xedit', name: 'xedit', displayname: 'Xedit', path: '/usr/bin/xedit', template: 'abcdesktopio/oc.template.gtk', mimetype: 'application/text;', fileextensions: 'txt;log;md' } Building xedit.Xedit Look at the new Dockerfile , and build the new docker image for xedit docker build -t xedit.d . You should read on standard output [+] Building 13.0s (11/11) FINISHED => [internal] load build definition from Dockerfile 0.0s => => transferring dockerfile: 2.01kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:dev 2.3s => [auth] abcdesktopio/oc.template.gtk:pull token for registry-1.docker.io 0.0s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.4s => => resolve docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.0s => => sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 3.88kB / 3.88kB 0.0s => => sha256:fe01ec1c214baf8b3e86255ac7dbca3157be4932ae19dfe07bbcf7d8c8839b07 7.80kB / 7.80kB 0.0s => [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends x11-apps && apt-get clean 8.7s => [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.4s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.3s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.3s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.3s => => exporting layers 0.3s => => writing image sha256:0b7cb908c88bf6301eb0555e558e99436e40bd5604e7ffebd12f137e9b5f9878 0.0s => => naming to docker.io/library/xedit.d Then look at the acl label docker inspect xedit.d | grep oc.acl \"oc.acl\": \"{\\\"permit\\\":[\\\"localhost\\\",\\\"localnet\\\"]}\", \"oc.acl\": \"{\\\"permit\\\":[\\\"localhost\\\",\\\"localnet\\\"]}\", The acl is stringified json object. Run the xedit application from your local network The xedit application is listed only if your are connected from a local network matching the previous rules. Look for the application xedit , using the quick launch search text area on the bottom right corner. Insert the first character of xedit : Launch the xedit application Run the application from another source IP address or update the acl application Update acl of xedit application To update the acl of xedit application, edit the edit.json file with the content, and set nowhere tag in acl array : { \"acl\": { \"permit\": [ \"nowhere\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } Then, rebuild Dockerfile and the docker image of the xedit application node make.js -f xedit.json Dockerfile docker build -t xedit.d . % node make.js -f xedit.json Dockerfile myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] opening file xedit.json applist.json entries: 1 myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] Building file Dockerfile as output { acl: { permit: [ 'nowhere' ] }, cat: 'utilities', debpackage: 'x11-apps', icon: 'xedit.svg', keyword: 'text,notepad,edit,txt,editor,xedit', launch: 'xedit.Xedit', name: 'xedit', displayname: 'Xedit', path: '/usr/bin/xedit', template: 'abcdesktopio/oc.template.gtk', mimetype: 'application/text;', fileextensions: 'txt;log;md' } Building xedit.Xedit % docker build -t xedit.d . [+] Building 1.5s (11/11) FINISHED => [internal] load build definition from Dockerfile 0.0s => => transferring dockerfile: 4.19kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:dev 1.4s => [auth] abcdesktopio/oc.template.gtk:pull token for registry-1.docker.io 0.0s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.0s => CACHED [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends x11-apps && apt-get clean 0.0s => CACHED [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.0s => CACHED [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.0s => CACHED [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.0s => CACHED [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.0s => => exporting layers 0.0s => => writing image sha256:640a4dd66b03420c4128e2fcd920dc5749cc5b687abc62b68e52f3c562943903 0.0s => => naming to docker.io/library/xedit.d Launch your web browser, and log in to your abcdesktop service Check that xedit is not found and not listed. The new acl does not allow the xedit application to be run and show. You can now define your own rules, add set the access control list to your applications.","title":"Define access control for an application"},{"location":"common/acl/#define-access-control-list-for-application","text":"","title":"Define access control list for application"},{"location":"common/acl/#goals","text":"restrict access to applications using authentication label","title":"Goals"},{"location":"common/acl/#requirements","text":"A running dockerd last version An access to the docker public registry An access to the ubuntu repository Nodejs installed on your host.","title":"Requirements"},{"location":"common/acl/#update-applistjson-file","text":"To restrict access to applications using authentication label, you need to define an acl entry in the application dictionary object. \"acl\": { \"permit\": [ \"tag\" ] }, For example using the application xedit all is a special label for everything. The xedit application can be run for all tags. { \"acl\": { \"permit\": [ \"all\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } To restrict access to applications using authentication label, you have to define label using rules during authentification step, and define label to the application.","title":"Update applist.json file"},{"location":"common/acl/#define-authenticated-label-using-rules","text":"You can read the chapter authentification-rules to define some autenticated labels. Update the od.config file, to add a label mylocal if the source ip address is in local network 192.168.0.0/16 authmanagers: { 'external': {}, 'explicit': {}, 'implicit': { 'providers': { 'anonymous': { 'displayname': 'Anonymous', 'caption': 'Have a look !', 'userid': 'anonymous', 'username': 'Anonymous', 'policies': { 'acl' : { 'permit': [ 'all' ] }, 'rules' : { 'rule-net-home': { 'conditions' : [ { 'network': '192.168.0.0/16', 'expected' : True } ], 'expected' : True, 'label' : 'localnet' } } } } } } } Restart the pyos service Using kubernetes run kubectl rollout restart daemonset daemonset-pyos -n abcdesktop Using docker only, run docker-compose restart When your services are restarted, launch your web browser Login to your abcdesktop service and choose anonymous authentication Check the label set during the authentication process Goto the menu option at the right up corner, choose Settings | User | Session You should read the label localnet in the Anonymous user information.","title":"Define authenticated label using rules"},{"location":"common/acl/#define-the-acl-label-to-the-application","text":"You can read the chapter Build your own application image , if your are building user docker abcdsktop application image for the first time.","title":"Define the acl label to the application"},{"location":"common/acl/#create-a-xeditjson-file","text":"Create a edit.json file with the content : { \"acl\": { \"permit\": [ \"localhost\", \"localnet\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } To build your new image, download the make.js script file. make.js is located in the oc.apps repository. Look at https://github.com/abcdesktopio/oc.apps if you can't download this file. Make sure that you have installed nodejs To install make.js command wget https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/make.js Create icons directory mkdir -p icons curl --output icons/xedit.svg https://raw.githubusercontent.com/abcdesktopio/oc.apps/main/icons/xedit.svg Run the make command node make.js -f xedit.json Dockerfile You should read on standard output myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] opening file xedit.json applist.json entries: 1 myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] Building file Dockerfile as output { acl: { permit: [ 'all' ] }, cat: 'utilities', debpackage: 'x11-apps', icon: 'xedit.svg', keyword: 'text,notepad,edit,txt,editor,xedit', launch: 'xedit.Xedit', name: 'xedit', displayname: 'Xedit', path: '/usr/bin/xedit', template: 'abcdesktopio/oc.template.gtk', mimetype: 'application/text;', fileextensions: 'txt;log;md' } Building xedit.Xedit Look at the new Dockerfile , and build the new docker image for xedit docker build -t xedit.d . You should read on standard output [+] Building 13.0s (11/11) FINISHED => [internal] load build definition from Dockerfile 0.0s => => transferring dockerfile: 2.01kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:dev 2.3s => [auth] abcdesktopio/oc.template.gtk:pull token for registry-1.docker.io 0.0s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.4s => => resolve docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.0s => => sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 3.88kB / 3.88kB 0.0s => => sha256:fe01ec1c214baf8b3e86255ac7dbca3157be4932ae19dfe07bbcf7d8c8839b07 7.80kB / 7.80kB 0.0s => [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends x11-apps && apt-get clean 8.7s => [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.4s => [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.3s => [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.3s => [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.3s => => exporting layers 0.3s => => writing image sha256:0b7cb908c88bf6301eb0555e558e99436e40bd5604e7ffebd12f137e9b5f9878 0.0s => => naming to docker.io/library/xedit.d Then look at the acl label docker inspect xedit.d | grep oc.acl \"oc.acl\": \"{\\\"permit\\\":[\\\"localhost\\\",\\\"localnet\\\"]}\", \"oc.acl\": \"{\\\"permit\\\":[\\\"localhost\\\",\\\"localnet\\\"]}\", The acl is stringified json object.","title":"Create a xedit.json file"},{"location":"common/acl/#run-the-xedit-application-from-your-local-network","text":"The xedit application is listed only if your are connected from a local network matching the previous rules. Look for the application xedit , using the quick launch search text area on the bottom right corner. Insert the first character of xedit : Launch the xedit application","title":"Run the xedit application from your local network"},{"location":"common/acl/#run-the-application-from-another-source-ip-address-or-update-the-acl-application","text":"","title":"Run the application from another source IP address or update the acl application"},{"location":"common/acl/#update-acl-of-xedit-application","text":"To update the acl of xedit application, edit the edit.json file with the content, and set nowhere tag in acl array : { \"acl\": { \"permit\": [ \"nowhere\" ] }, \"cat\": \"utilities\", \"debpackage\": \"x11-apps\", \"icon\": \"xedit.svg\", \"keyword\": \"text,notepad,edit,txt,editor,xedit\", \"launch\": \"xedit.Xedit\", \"name\": \"xedit\", \"displayname\": \"Xedit\", \"path\": \"/usr/bin/xedit\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"application/text;\", \"fileextensions\":\"txt;log;md\" } Then, rebuild Dockerfile and the docker image of the xedit application node make.js -f xedit.json Dockerfile docker build -t xedit.d . % node make.js -f xedit.json Dockerfile myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] opening file xedit.json applist.json entries: 1 myArgs: [ '-f', 'xedit.json', 'Dockerfile' ] Building file Dockerfile as output { acl: { permit: [ 'nowhere' ] }, cat: 'utilities', debpackage: 'x11-apps', icon: 'xedit.svg', keyword: 'text,notepad,edit,txt,editor,xedit', launch: 'xedit.Xedit', name: 'xedit', displayname: 'Xedit', path: '/usr/bin/xedit', template: 'abcdesktopio/oc.template.gtk', mimetype: 'application/text;', fileextensions: 'txt;log;md' } Building xedit.Xedit % docker build -t xedit.d . [+] Building 1.5s (11/11) FINISHED => [internal] load build definition from Dockerfile 0.0s => => transferring dockerfile: 4.19kB 0.0s => [internal] load .dockerignore 0.0s => => transferring context: 2B 0.0s => [internal] load metadata for docker.io/abcdesktopio/oc.template.gtk:dev 1.4s => [auth] abcdesktopio/oc.template.gtk:pull token for registry-1.docker.io 0.0s => [1/6] FROM docker.io/abcdesktopio/oc.template.gtk:dev@sha256:4aac32209c27a3e88906f39aecdfee6833bed022871366356bfd5518e2248b79 0.0s => CACHED [2/6] RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends x11-apps && apt-get clean 0.0s => CACHED [3/6] RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections 0.0s => CACHED [4/6] RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi 0.0s => CACHED [5/6] RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi 0.0s => CACHED [6/6] WORKDIR /home/balloon 0.0s => exporting to image 0.0s => => exporting layers 0.0s => => writing image sha256:640a4dd66b03420c4128e2fcd920dc5749cc5b687abc62b68e52f3c562943903 0.0s => => naming to docker.io/library/xedit.d Launch your web browser, and log in to your abcdesktop service Check that xedit is not found and not listed. The new acl does not allow the xedit application to be run and show. You can now define your own rules, add set the access control list to your applications.","title":"Update acl of xedit application"},{"location":"common/custom-wallpaper/","text":"Customize default wallpaper Requirements Goals Change the default wallpaper and use your own Change od.config file To update the default wallpaper file, add a ENV variable in the desktop.envlocal dictionary. Add the new entry SET_DEFAULT_WALLPAPER to the value like welcometoabcdesktop.png . The file welcometoabcdesktop.png already exists in the /composer/wallpapers directory of your abcdesktopio/oc.user.XX.YY container image. desktop.envlocal : { 'DISPLAY' : ':0.0', 'USER' : 'balloon', 'LOGNAME' : 'balloon', 'LIBOVERLAY_SCROLLBAR' : '0', 'UBUNTU_MENUPROXY' : '0', 'HOME' : '/home/balloon', 'SET_DEFAULT_WALLPAPER' : 'welcometoabcdesktop.png' } Restart your pyos daemon, to make sure that the ENV dictionary will be use to start a new user container. Login on your abcdesktop service, your should see the wallpaper file: Update oc.user image to add your own wallpaper Find a new wallpaper image Download a new wallpaper image, for example I choose the file on unsplash.com web site wallpaper unsplash from Silas Baisch Rename the downloaded file as silas-baisch-unsplash.jpg Create a new oc.user image Create a Dockerfile to copy the new wallpaper file in /composer/wallpapers directory Not For a development environment, add the TAG dev FROM abcdesktopio/oc.user.18.04:dev USER root COPY silas-baisch-unsplash.jpg /composer/wallpapers USER balloon Build the new docker image To build the new docker image, run the command line docker build -t abcdesktopio/oc.user.18.04 . You should read on the standard output : Sending build context to Docker daemon 3.184MB Step 1/4 : FROM abcdesktopio/oc.user.18.04:dev ---> 61bfdb4e71d4 Step 2/4 : USER root ---> Using cache ---> c1aa17b9999c Step 3/4 : COPY silas-baisch-unsplash.jpg /composer/wallpapers ---> 73c786ecca04 Step 4/4 : USER balloon ---> Running in 1e0ad794c0cb Removing intermediate container 1e0ad794c0cb ---> a0b12a183b47 Successfully built a0b12a183b47 Successfully tagged abcdesktopio/oc.user.18.04:dev Change od.config file To update the default wallpaper file, add a ENV variable in the desktop.envlocal dictionary. Add the new entry SET_DEFAULT_WALLPAPER to the value like silas-baisch-unsplash.jpg . The file silas-baisch-unsplash.jpg exists in the /composer/wallpapers directory of your new abcdesktopio/oc.user.18.04 container image. desktop.envlocal : { 'DISPLAY' : ':0.0', 'USER' : 'balloon', 'LOGNAME' : 'balloon', 'LIBOVERLAY_SCROLLBAR' : '0', 'UBUNTU_MENUPROXY' : '0', 'HOME' : '/home/balloon', 'SET_DEFAULT_WALLPAPER' : 'silas-baisch-unsplash.jpg' } Restart your pyos daemon, to make sure that the ENV dictionary will be use to start a new user container. Login on your abcdesktop service, your should see the wallpaper :","title":"Custom default desktop wallpaper"},{"location":"common/custom-wallpaper/#customize-default-wallpaper","text":"","title":"Customize default wallpaper"},{"location":"common/custom-wallpaper/#requirements","text":"","title":"Requirements"},{"location":"common/custom-wallpaper/#goals","text":"Change the default wallpaper and use your own","title":"Goals"},{"location":"common/custom-wallpaper/#change-odconfig-file","text":"To update the default wallpaper file, add a ENV variable in the desktop.envlocal dictionary. Add the new entry SET_DEFAULT_WALLPAPER to the value like welcometoabcdesktop.png . The file welcometoabcdesktop.png already exists in the /composer/wallpapers directory of your abcdesktopio/oc.user.XX.YY container image. desktop.envlocal : { 'DISPLAY' : ':0.0', 'USER' : 'balloon', 'LOGNAME' : 'balloon', 'LIBOVERLAY_SCROLLBAR' : '0', 'UBUNTU_MENUPROXY' : '0', 'HOME' : '/home/balloon', 'SET_DEFAULT_WALLPAPER' : 'welcometoabcdesktop.png' } Restart your pyos daemon, to make sure that the ENV dictionary will be use to start a new user container. Login on your abcdesktop service, your should see the wallpaper file:","title":"Change od.config file"},{"location":"common/custom-wallpaper/#update-ocuser-image-to-add-your-own-wallpaper","text":"","title":"Update oc.user image to add your own wallpaper"},{"location":"common/custom-wallpaper/#find-a-new-wallpaper-image","text":"Download a new wallpaper image, for example I choose the file on unsplash.com web site wallpaper unsplash from Silas Baisch Rename the downloaded file as silas-baisch-unsplash.jpg","title":"Find a new wallpaper image"},{"location":"common/custom-wallpaper/#create-a-new-ocuser-image","text":"Create a Dockerfile to copy the new wallpaper file in /composer/wallpapers directory Not For a development environment, add the TAG dev FROM abcdesktopio/oc.user.18.04:dev USER root COPY silas-baisch-unsplash.jpg /composer/wallpapers USER balloon Build the new docker image To build the new docker image, run the command line docker build -t abcdesktopio/oc.user.18.04 . You should read on the standard output : Sending build context to Docker daemon 3.184MB Step 1/4 : FROM abcdesktopio/oc.user.18.04:dev ---> 61bfdb4e71d4 Step 2/4 : USER root ---> Using cache ---> c1aa17b9999c Step 3/4 : COPY silas-baisch-unsplash.jpg /composer/wallpapers ---> 73c786ecca04 Step 4/4 : USER balloon ---> Running in 1e0ad794c0cb Removing intermediate container 1e0ad794c0cb ---> a0b12a183b47 Successfully built a0b12a183b47 Successfully tagged abcdesktopio/oc.user.18.04:dev","title":"Create a new oc.user image"},{"location":"common/custom-wallpaper/#change-odconfig-file_1","text":"To update the default wallpaper file, add a ENV variable in the desktop.envlocal dictionary. Add the new entry SET_DEFAULT_WALLPAPER to the value like silas-baisch-unsplash.jpg . The file silas-baisch-unsplash.jpg exists in the /composer/wallpapers directory of your new abcdesktopio/oc.user.18.04 container image. desktop.envlocal : { 'DISPLAY' : ':0.0', 'USER' : 'balloon', 'LOGNAME' : 'balloon', 'LIBOVERLAY_SCROLLBAR' : '0', 'UBUNTU_MENUPROXY' : '0', 'HOME' : '/home/balloon', 'SET_DEFAULT_WALLPAPER' : 'silas-baisch-unsplash.jpg' } Restart your pyos daemon, to make sure that the ENV dictionary will be use to start a new user container. Login on your abcdesktop service, your should see the wallpaper :","title":"Change od.config file"},{"location":"common/debug_application/","text":"How to debug containerised application in abcdesktop Requirements jq package should be install on your Linux docker or ctr package should be install on your Linux In this example, I use docker command but you can easily convert it as ctr (containerd CLI) command Goals Read log from web interface Read stdout and stderr, dump all environment variables, and entrypoint log, to troubleshoot application error and get quick informations Create a new containerised application from scratch using pod volume mapping Read log from web interface Start an containerised application, I choose 2048 application, for example. Using the web browser, choose Settings in the menu. Choose Tasks to list all running containers Choose Logs to read the stdout log file of an application This application write on stdout Error setting cipher RC4 40F7D1D5D07F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (RC4 : 37), Properties () QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game You will read the sample stdout line, using a docker logs command Look for the container id of the 2048 containerised application $ docker ps -a|grep 2048 01579054a1f6 abcdesktopio/ubuntu-2048.d:3.0 \"/composer/appli-doc\u2026\" 21 minutes ago Up 21 minutes anonymous-ubuntu-2048-37830ad00d9f473aa4d0c7872089c6b8 Read the log file form the docker logs command $ docker logs 01579054a1f6 You should read on output the same lines writed on the web interface Error setting cipher RC4 40F7D1D5D07F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (RC4 : 37), Properties () QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game Debug an application using stderr and stdout The main log files are lastcmd.log lastcmdenv.log and $APPBIN.log : /tmp/lastcmd.log : contains the stdout file of the init script command /composer/appli-docker-entrypoint.sh for latest running application /tmp/lastcmdenv.log : contains the dump of all environment variables for latest running application /tmp/$APPBIN.log : contains stderr and stdout of the application $APPBIN . $APPBIN should be replace by the name of your binary application filename. By default, with all abcdesktop templates, applications redirect stderr to stdout and pipe to a tee. ${APP} ${ARGS} \"${APPARGS}\" 2>&1 | tee /tmp/$BASENAME_APP.log By default, the /tmp volume is shared with all containers. So to debug and read log applications, you can run a webshell to have an access to stdout and stderr content. The var $BASENAME_APP is the name of your application BASENAME_APP=$(basename \"$APPBIN\") and APPBIN is path to the binary Example with the 2048-qt application APPBIN=/usr/games/2048-qt The /tmp directory, you can read the log file '/tmp/2048-qt.log'. Look at the /tmp directory balloon:~$ ls -la /tmp/ total 20 drwxrwxrwt 5 root root 260 Dec 1 09:58 . drwxr-xr-x 1 root root 4096 Dec 1 09:55 .. -rw-r--r-- 1 balloon balloon 102 Dec 1 09:58 2048-qt.log srwxrwxrwx 1 root root 0 Dec 1 09:55 .cups.sock -rw-r--r-- 1 balloon balloon 0 Dec 1 09:57 gnome-2048.log -rw-r--r-- 1 balloon balloon 1175 Dec 1 09:58 lastcmdenv.log -rw-r--r-- 1 balloon balloon 437 Dec 1 09:58 lastcmd.log drwx------ 2 balloon balloon 60 Dec 1 09:55 pulse-jkzlygT9Y7lT srwxrwxrwx 1 balloon balloon 0 Dec 1 09:55 .pulse.sock drwx------ 2 balloon balloon 40 Dec 1 09:58 runtime-balloon -r--r--r-- 1 balloon balloon 11 Dec 1 09:55 .X0-lock drwxrwxrwt 2 root root 60 Dec 1 09:55 .X11-unix srw------- 1 balloon balloon 0 Dec 1 09:55 .x11vnc balloon:~$ The main files are /tmp/lastcmd.log , /tmp/lastcmdenv.log and /tmp/2048-qt.log . Dump the /tmp/2048-qt.log , with a cat command cat /tmp/2048-qt.log . Replace /tmp/2048-qt.log by your own application (binary) if you choose another application. balloon:~$ cat /tmp/2048-qt.log QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game Dump the /composer/appli-docker-entrypoint.sh result in /tmp/lastcmd.log , with a cat command cat /tmp/lastcmd.log . balloon:~$ cat /tmp/lastcmd.log APP=/usr/bin/gnome-2048 ARGS= APPARGS= run previous init overlay stack run init app if exists BASENAME_APP=gnome-2048 xauth add :0.0 MIT-MAGIC-COOKIE-1 55dd9838e9404e3b13b635153365d3 setting pulseaudio cookie end of app exit_code=0 Dump all environment variables in file /tmp/lastcmdenv.log . balloon:/tmp$ cat /tmp/lastcmdenv.log BUSER=balloon SENDCUTTEXT=enabled PARENT_ID=2eecb67f5408c2552e7ee78b4fa2c9a419e9af9557c12c4d2f9f5c4fd1af70f4 APPBIN=/usr/games/2048-qt HOSTNAME=c477d8983486 LANGUAGE=en_US STDOUT_LOGFILE=/tmp/lastcmd.log LC_ADDRESS=en_US.UTF-8 CUPS_SERVER=/tmp/.cups.sock LIBOVERLAY_SCROLLBAR=0 LC_MONETARY=en_US.UTF-8 PULSEAUDIO_COOKIE=17de4db317fbf10624911dbe28c528bd PWD=/home/balloon LOGNAME=balloon XAUTH_KEY=55dd9838e9404e3b13b635153365d3 TZ=Europe/Paris HOME=/home/balloon LC_PAPER=en_US.UTF-8 LANG=en_US.UTF-8 ACCEPTCUTTEXT=enabled APP=/usr/games/2048-qt APPNAME=ubuntu-2048 DEBCONF_FRONTEND=noninteractive SET_DEFAULT_WALLPAPER=welcometoabcdesktop.png TERM=linux LC_IDENTIFICATION=en_US.UTF-8 USER=balloon DISPLAY=:0.0 SHLVL=1 LC_TELEPHONE=en_US.UTF-8 LC_MEASUREMENT=en_US.UTF-8 UBUNTU_MENUPROXY=0 STDOUT_ENVLOGFILE=/tmp/lastcmdenv.log BROADCAST_COOKIE=b7bc93457df5aa6bedb5ad2fe972268fa268bf3439b4024c LC_TIME=en_US.UTF-8 LC_ALL=en_US.UTF-8 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin PULSE_SERVER=/tmp/.pulse.sock LC_NUMERIC=en_US.UTF-8 Debug an application using a new container We are starting a new containerised application from a fresh ubuntu:22.04 image and bind the X11 socket to use the pod DISPLAY. Start a new abcdesktop session Login in as hermes for release 3.0 Start webshell client instance Write webshell or terminal in the application search bar The new webshell window is opened Run the command echo $XAUTH_KEY to read the $XAUTH_KEY value, and copy the value for a next usage. $ echo $XAUTH_KEY For example $ echo $XAUTH_KEY 73e6fd484fbe823bcfc8ed1bf7696a Copy the value 73e6fd484fbe823bcfc8ed1bf7696a for a next usage. Run docker inspect command to look for Binding Get a shell on your host, and run the docker command $ docker ps -a |grep k8s_x 952aeedc815d 0c7301c0630d \"/composer/docker-en\u2026\" 10 minutes ago Up 10 minutes k8s_x-hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02_hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02_abcdesktop_32754d0c-bd43-49c0-a12a-e51d15ee7691_0 The docker container id is 952aeedc815d Read the binding mounts export mycontainer=952aeedc815d docker inspect -f '{{ json .HostConfig.Binds }}' $mycontainer | jq Replace 952aeedc815d with your own container id, read previously. [ \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/tmp:/tmp\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/run:/var/run/desktop\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/log:/var/log/desktop\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~secret/auth-localaccount-hermes:/var/secrets/abcdesktop/localaccount:ro\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~secret/auth-vnc-hermes:/var/secrets/abcdesktop/vnc:ro\", \"/mnt/hermes-conrad:/home/balloon\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/etc-hosts:/etc/hosts\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/containers/x-hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02/d881dda3:/dev/termination-log\" ] Copy the lines with the /tmp/.X11-unix and /home/balloon mapping \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix\" \"/mnt/hermes-conrad:/home/balloon\" Start a new container from ubuntu:22.04 docker run -it \\ -v /var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix \\ -v /mnt/hermes-conrad:/home/balloon \\ ubuntu:22.04 \\ bash You get a shell inside the container. for release 3.0 set the MIT-MAGIC-COOKIE-1 apt-get update && apt-get install -y xauth Replace 73e6fd484fbe823bcfc8ed1bf7696a by your own XAUTH_KEY read previously. export DISPLAY=:0.0 export XAUTH_KEY=73e6fd484fbe823bcfc8ed1bf7696a xauth add $DISPLAY MIT-MAGIC-COOKIE-1 $XAUTH_KEY You can read on stdout xauth: file /root/.Xauthority does not exist The new file /root/.Xauthority has been created. Install your X11 applications, for example I choose the x11-apps package Replace x11-apps by you own application apt-get update && apt-get install -y x11-apps Start your X11 applications To start the application, just run it. But remember you a running a container as root xedit Go back to your web browser and a new x11 window xedit should be present :x","title":"Debug you own application"},{"location":"common/debug_application/#how-to-debug-containerised-application-in-abcdesktop","text":"","title":"How to debug containerised application in abcdesktop"},{"location":"common/debug_application/#requirements","text":"jq package should be install on your Linux docker or ctr package should be install on your Linux In this example, I use docker command but you can easily convert it as ctr (containerd CLI) command","title":"Requirements"},{"location":"common/debug_application/#goals","text":"Read log from web interface Read stdout and stderr, dump all environment variables, and entrypoint log, to troubleshoot application error and get quick informations Create a new containerised application from scratch using pod volume mapping","title":"Goals"},{"location":"common/debug_application/#read-log-from-web-interface","text":"Start an containerised application, I choose 2048 application, for example. Using the web browser, choose Settings in the menu. Choose Tasks to list all running containers Choose Logs to read the stdout log file of an application This application write on stdout Error setting cipher RC4 40F7D1D5D07F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (RC4 : 37), Properties () QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game You will read the sample stdout line, using a docker logs command Look for the container id of the 2048 containerised application $ docker ps -a|grep 2048 01579054a1f6 abcdesktopio/ubuntu-2048.d:3.0 \"/composer/appli-doc\u2026\" 21 minutes ago Up 21 minutes anonymous-ubuntu-2048-37830ad00d9f473aa4d0c7872089c6b8 Read the log file form the docker logs command $ docker logs 01579054a1f6 You should read on output the same lines writed on the web interface Error setting cipher RC4 40F7D1D5D07F0000:error:0308010C:digital envelope routines:inner_evp_generic_fetch:unsupported:../crypto/evp/evp_fetch.c:349:Global default library context, Algorithm (RC4 : 37), Properties () QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game","title":"Read log from web interface"},{"location":"common/debug_application/#debug-an-application-using-stderr-and-stdout","text":"The main log files are lastcmd.log lastcmdenv.log and $APPBIN.log : /tmp/lastcmd.log : contains the stdout file of the init script command /composer/appli-docker-entrypoint.sh for latest running application /tmp/lastcmdenv.log : contains the dump of all environment variables for latest running application /tmp/$APPBIN.log : contains stderr and stdout of the application $APPBIN . $APPBIN should be replace by the name of your binary application filename. By default, with all abcdesktop templates, applications redirect stderr to stdout and pipe to a tee. ${APP} ${ARGS} \"${APPARGS}\" 2>&1 | tee /tmp/$BASENAME_APP.log By default, the /tmp volume is shared with all containers. So to debug and read log applications, you can run a webshell to have an access to stdout and stderr content. The var $BASENAME_APP is the name of your application BASENAME_APP=$(basename \"$APPBIN\") and APPBIN is path to the binary Example with the 2048-qt application APPBIN=/usr/games/2048-qt The /tmp directory, you can read the log file '/tmp/2048-qt.log'. Look at the /tmp directory balloon:~$ ls -la /tmp/ total 20 drwxrwxrwt 5 root root 260 Dec 1 09:58 . drwxr-xr-x 1 root root 4096 Dec 1 09:55 .. -rw-r--r-- 1 balloon balloon 102 Dec 1 09:58 2048-qt.log srwxrwxrwx 1 root root 0 Dec 1 09:55 .cups.sock -rw-r--r-- 1 balloon balloon 0 Dec 1 09:57 gnome-2048.log -rw-r--r-- 1 balloon balloon 1175 Dec 1 09:58 lastcmdenv.log -rw-r--r-- 1 balloon balloon 437 Dec 1 09:58 lastcmd.log drwx------ 2 balloon balloon 60 Dec 1 09:55 pulse-jkzlygT9Y7lT srwxrwxrwx 1 balloon balloon 0 Dec 1 09:55 .pulse.sock drwx------ 2 balloon balloon 40 Dec 1 09:58 runtime-balloon -r--r--r-- 1 balloon balloon 11 Dec 1 09:55 .X0-lock drwxrwxrwt 2 root root 60 Dec 1 09:55 .X11-unix srw------- 1 balloon balloon 0 Dec 1 09:55 .x11vnc balloon:~$ The main files are /tmp/lastcmd.log , /tmp/lastcmdenv.log and /tmp/2048-qt.log . Dump the /tmp/2048-qt.log , with a cat command cat /tmp/2048-qt.log . Replace /tmp/2048-qt.log by your own application (binary) if you choose another application. balloon:~$ cat /tmp/2048-qt.log QStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-balloon' qml: Started a new game Dump the /composer/appli-docker-entrypoint.sh result in /tmp/lastcmd.log , with a cat command cat /tmp/lastcmd.log . balloon:~$ cat /tmp/lastcmd.log APP=/usr/bin/gnome-2048 ARGS= APPARGS= run previous init overlay stack run init app if exists BASENAME_APP=gnome-2048 xauth add :0.0 MIT-MAGIC-COOKIE-1 55dd9838e9404e3b13b635153365d3 setting pulseaudio cookie end of app exit_code=0 Dump all environment variables in file /tmp/lastcmdenv.log . balloon:/tmp$ cat /tmp/lastcmdenv.log BUSER=balloon SENDCUTTEXT=enabled PARENT_ID=2eecb67f5408c2552e7ee78b4fa2c9a419e9af9557c12c4d2f9f5c4fd1af70f4 APPBIN=/usr/games/2048-qt HOSTNAME=c477d8983486 LANGUAGE=en_US STDOUT_LOGFILE=/tmp/lastcmd.log LC_ADDRESS=en_US.UTF-8 CUPS_SERVER=/tmp/.cups.sock LIBOVERLAY_SCROLLBAR=0 LC_MONETARY=en_US.UTF-8 PULSEAUDIO_COOKIE=17de4db317fbf10624911dbe28c528bd PWD=/home/balloon LOGNAME=balloon XAUTH_KEY=55dd9838e9404e3b13b635153365d3 TZ=Europe/Paris HOME=/home/balloon LC_PAPER=en_US.UTF-8 LANG=en_US.UTF-8 ACCEPTCUTTEXT=enabled APP=/usr/games/2048-qt APPNAME=ubuntu-2048 DEBCONF_FRONTEND=noninteractive SET_DEFAULT_WALLPAPER=welcometoabcdesktop.png TERM=linux LC_IDENTIFICATION=en_US.UTF-8 USER=balloon DISPLAY=:0.0 SHLVL=1 LC_TELEPHONE=en_US.UTF-8 LC_MEASUREMENT=en_US.UTF-8 UBUNTU_MENUPROXY=0 STDOUT_ENVLOGFILE=/tmp/lastcmdenv.log BROADCAST_COOKIE=b7bc93457df5aa6bedb5ad2fe972268fa268bf3439b4024c LC_TIME=en_US.UTF-8 LC_ALL=en_US.UTF-8 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin PULSE_SERVER=/tmp/.pulse.sock LC_NUMERIC=en_US.UTF-8","title":"Debug an application using stderr and stdout"},{"location":"common/debug_application/#debug-an-application-using-a-new-container","text":"We are starting a new containerised application from a fresh ubuntu:22.04 image and bind the X11 socket to use the pod DISPLAY.","title":"Debug an application using a new container"},{"location":"common/debug_application/#start-a-new-abcdesktop-session","text":"Login in as hermes","title":"Start a new abcdesktop session"},{"location":"common/debug_application/#for-release-30-start-webshell-client-instance","text":"Write webshell or terminal in the application search bar The new webshell window is opened Run the command echo $XAUTH_KEY to read the $XAUTH_KEY value, and copy the value for a next usage. $ echo $XAUTH_KEY For example $ echo $XAUTH_KEY 73e6fd484fbe823bcfc8ed1bf7696a Copy the value 73e6fd484fbe823bcfc8ed1bf7696a for a next usage.","title":"for release 3.0 Start webshell client instance"},{"location":"common/debug_application/#run-docker-inspect-command-to-look-for-binding","text":"Get a shell on your host, and run the docker command $ docker ps -a |grep k8s_x 952aeedc815d 0c7301c0630d \"/composer/docker-en\u2026\" 10 minutes ago Up 10 minutes k8s_x-hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02_hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02_abcdesktop_32754d0c-bd43-49c0-a12a-e51d15ee7691_0 The docker container id is 952aeedc815d","title":"Run docker inspect command to look for Binding"},{"location":"common/debug_application/#read-the-binding-mounts","text":"export mycontainer=952aeedc815d docker inspect -f '{{ json .HostConfig.Binds }}' $mycontainer | jq Replace 952aeedc815d with your own container id, read previously. [ \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/tmp:/tmp\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/run:/var/run/desktop\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/log:/var/log/desktop\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~secret/auth-localaccount-hermes:/var/secrets/abcdesktop/localaccount:ro\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~secret/auth-vnc-hermes:/var/secrets/abcdesktop/vnc:ro\", \"/mnt/hermes-conrad:/home/balloon\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/etc-hosts:/etc/hosts\", \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/containers/x-hermes-eff4a4cf-729e-453f-b948-d03d7cfa2b02/d881dda3:/dev/termination-log\" ] Copy the lines with the /tmp/.X11-unix and /home/balloon mapping \"/var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix\" \"/mnt/hermes-conrad:/home/balloon\"","title":"Read the binding mounts"},{"location":"common/debug_application/#start-a-new-container-from-ubuntu2204","text":"docker run -it \\ -v /var/lib/kubelet/pods/32754d0c-bd43-49c0-a12a-e51d15ee7691/volumes/kubernetes.io~empty-dir/x11socket:/tmp/.X11-unix \\ -v /mnt/hermes-conrad:/home/balloon \\ ubuntu:22.04 \\ bash You get a shell inside the container.","title":"Start a new container from ubuntu:22.04"},{"location":"common/debug_application/#for-release-30-set-the-mit-magic-cookie-1","text":"apt-get update && apt-get install -y xauth Replace 73e6fd484fbe823bcfc8ed1bf7696a by your own XAUTH_KEY read previously. export DISPLAY=:0.0 export XAUTH_KEY=73e6fd484fbe823bcfc8ed1bf7696a xauth add $DISPLAY MIT-MAGIC-COOKIE-1 $XAUTH_KEY You can read on stdout xauth: file /root/.Xauthority does not exist The new file /root/.Xauthority has been created.","title":"for release 3.0 set the MIT-MAGIC-COOKIE-1"},{"location":"common/debug_application/#install-your-x11-applications-for-example-i-choose-the-x11-apps-package","text":"Replace x11-apps by you own application apt-get update && apt-get install -y x11-apps","title":"Install your X11 applications, for example I choose the x11-apps package"},{"location":"common/debug_application/#start-your-x11-applications","text":"To start the application, just run it. But remember you a running a container as root xedit Go back to your web browser and a new x11 window xedit should be present :x","title":"Start your X11 applications"},{"location":"common/firefox-extension/","text":"Mozilla Firefox clipboard extension Install Firefox Extension file Download the Mozilla Firefox clipboard extension for abcdesktop Download the firefox clipboard extension abcdesktop_clipboard_helper.xpi and press Continue to Installation button. Choose Add as a response to the question Add abcdesktop Clipboad Helper ? Press OKay, Got it to confirm the abcdesktop Clipboad helper insallation Use fully qualified domain name filter Firefox clipboard extension runs ONLY if the hostname contains desktop string . The URL must matches *://*desktop*/*\" to run the clipboard extension. https://demo.abcdesktop.io matches, the firefox clipboard extension is running. https://desktop.domain.io matches, the firefox clipboard extension is running. https://abcdesktop.mydomain.local matches, the firefox clipboard extension is running. https://demo.domain.com does not match, the firefox clipboard extension is not running. Run firefox clipboard extension for abcdesktop Firefox clipboard extension syncs only text data , binary data like images are not yet supported. Firefox clipboard extension syncs your clipboard data selected from your abcdesktop desktop to your local desktop environment. Firefox clipboard extension syncs your local desktop environment clipboard to your abcdesktop desktop clipboard.","title":"Sync clipboard with Mozilla Firefox"},{"location":"common/firefox-extension/#mozilla-firefox-clipboard-extension","text":"","title":"Mozilla Firefox clipboard extension"},{"location":"common/firefox-extension/#install-firefox-extension-file","text":"","title":"Install Firefox Extension file"},{"location":"common/firefox-extension/#download-the-mozilla-firefox-clipboard-extension-for-abcdesktop","text":"Download the firefox clipboard extension abcdesktop_clipboard_helper.xpi and press Continue to Installation button. Choose Add as a response to the question Add abcdesktop Clipboad Helper ? Press OKay, Got it to confirm the abcdesktop Clipboad helper insallation","title":"Download the Mozilla Firefox clipboard extension for abcdesktop"},{"location":"common/firefox-extension/#use-fully-qualified-domain-name-filter","text":"Firefox clipboard extension runs ONLY if the hostname contains desktop string . The URL must matches *://*desktop*/*\" to run the clipboard extension. https://demo.abcdesktop.io matches, the firefox clipboard extension is running. https://desktop.domain.io matches, the firefox clipboard extension is running. https://abcdesktop.mydomain.local matches, the firefox clipboard extension is running. https://demo.domain.com does not match, the firefox clipboard extension is not running.","title":"Use fully qualified domain name filter"},{"location":"common/firefox-extension/#run-firefox-clipboard-extension-for-abcdesktop","text":"Firefox clipboard extension syncs only text data , binary data like images are not yet supported. Firefox clipboard extension syncs your clipboard data selected from your abcdesktop desktop to your local desktop environment. Firefox clipboard extension syncs your local desktop environment clipboard to your abcdesktop desktop clipboard.","title":"Run firefox clipboard extension for abcdesktop"},{"location":"common/flash-firefox-esr/","text":"How to build and run abcdesktop firefox-esr image to run flash application Adobe no longer supports Flash Player after December 31, 2020 and blocked Flash content from running in Flash Player beginning January 12, 2021. Lot of applications need to be rewrite, this can take time to rewrite application using HTML5. Abcdesktop can be use to run Abode Flash application, using Firefox ESR web browser. Firefox Extended Support Release (ESR) is an official version of Firefox developed for large organizations like universities and businesses that need to set up and maintain Firefox on a large scale. Firefox ESR does not come with the latest features but it has the latest security and stability fixes. Goals use Flash Player for own web site Requirements A running dockerd last version An access to the docker public registry Nodejs installed on your host. Edit the mms.cfg file Edit the mms.cfg file, and add your own website url EOLUninstallDisable=1 SilentAutoUpdateEnable=0 AutoUpdateDisable=1 EnableAllowList=1 AllowListURLPattern=*://*.adobe.com AllowListURLPattern=https://*.abcdesktop.io Add the a new line and replace https://www.domain.com by your own web site AllowListURLPattern=https://www.domain.com Create file firefox-esr.d Create a Dockerfile firefox-esr.d to copy your new mms.cfg into the directory /etc/adobe of your container image FROM abcdesktopio/firefox-esr.d USER 0 COPY mms.cfg /etc/adobe/mms.cfg USER balloon Build the new firefox-esr abcdesktop image Run the docker build command docker build -t firefox-esr.d -f firefox-esr.d . Run the firefox-esr application Login to your abcdesktop service Using you web browser, log in to your abcdesktop service Look at the twice firefox icon for Firefox and Firefox-esr application. Start the application Firefox-esr Open you own flash website, or go to https://www.abcdesktop.io/flash sample web site Click to the Run Adobe Flash plugins And Allow the Adobe Flash to run Great, you can run the Adobe Flash plugins.","title":"Run Adobe Flash player with Mozilla Firefox-esr"},{"location":"common/flash-firefox-esr/#how-to-build-and-run-abcdesktop-firefox-esr-image-to-run-flash-application","text":"Adobe no longer supports Flash Player after December 31, 2020 and blocked Flash content from running in Flash Player beginning January 12, 2021. Lot of applications need to be rewrite, this can take time to rewrite application using HTML5. Abcdesktop can be use to run Abode Flash application, using Firefox ESR web browser. Firefox Extended Support Release (ESR) is an official version of Firefox developed for large organizations like universities and businesses that need to set up and maintain Firefox on a large scale. Firefox ESR does not come with the latest features but it has the latest security and stability fixes.","title":"How to build and run abcdesktop firefox-esr image to run flash application"},{"location":"common/flash-firefox-esr/#goals","text":"use Flash Player for own web site","title":"Goals"},{"location":"common/flash-firefox-esr/#requirements","text":"A running dockerd last version An access to the docker public registry Nodejs installed on your host.","title":"Requirements"},{"location":"common/flash-firefox-esr/#edit-the-mmscfg-file","text":"Edit the mms.cfg file, and add your own website url EOLUninstallDisable=1 SilentAutoUpdateEnable=0 AutoUpdateDisable=1 EnableAllowList=1 AllowListURLPattern=*://*.adobe.com AllowListURLPattern=https://*.abcdesktop.io Add the a new line and replace https://www.domain.com by your own web site AllowListURLPattern=https://www.domain.com","title":"Edit the mms.cfg file"},{"location":"common/flash-firefox-esr/#create-file-firefox-esrd","text":"Create a Dockerfile firefox-esr.d to copy your new mms.cfg into the directory /etc/adobe of your container image FROM abcdesktopio/firefox-esr.d USER 0 COPY mms.cfg /etc/adobe/mms.cfg USER balloon","title":"Create file firefox-esr.d"},{"location":"common/flash-firefox-esr/#build-the-new-firefox-esr-abcdesktop-image","text":"Run the docker build command docker build -t firefox-esr.d -f firefox-esr.d .","title":"Build the new firefox-esr abcdesktop image"},{"location":"common/flash-firefox-esr/#run-the-firefox-esr-application","text":"","title":"Run the firefox-esr application"},{"location":"common/flash-firefox-esr/#login-to-your-abcdesktop-service","text":"Using you web browser, log in to your abcdesktop service Look at the twice firefox icon for Firefox and Firefox-esr application. Start the application Firefox-esr Open you own flash website, or go to https://www.abcdesktop.io/flash sample web site Click to the Run Adobe Flash plugins And Allow the Adobe Flash to run Great, you can run the Adobe Flash plugins.","title":"Login to your abcdesktop service"},{"location":"common/non-free-applications/","text":"Install non-free applications Install and build Citrix Receiver for abcdesktop Citrix Workspace App or Citrix Receiver does not exist in official debian repository. You need to download the deb package from the www.citrix.com website manually. Clone the abcdesktopio/oc.apps repository git clone https://github.com/abcdesktopio/oc.apps.git Download the Citrix Receiver for Linux .deb package. Go to https://www.citrix.com/downloads/citrix-receiver/linux/receiver-for-linux-latest.html Copy the downloaded file icaclient_13.10.0.20_amd64.deb for example as icaclient_amd64.deb to your local oc.apps directory cd oc.apps cp ~/Download/icaclient_13.10.0.20_amd64.deb icaclient_amd64.deb Run docker build command docker build --build-arg TAG=dev -t abcdesktopio/citrix.d:dev -f citrix.d . Sending build context to Docker daemon 29.13MB Step 1/28 : ARG TAG=dev Step 2/28 : FROM abcdesktopio/oc.template.gtk.18.04:$TAG ---> c66ccd2edc52 Step 3/28 : COPY icaclient_amd64.deb /tmp/icaclient_amd64.deb ---> Using cache ---> de6a2bcaa7c0 Step 4/28 : RUN apt-get install --no-install-recommends --yes /tmp/icaclient_amd64.deb && apt-get clean && rm /tmp/icaclient_amd64.deb ---> Using cache ---> 87e1ce530e44 Step 5/28 : ENV BUSER balloon ---> Using cache ---> e4f474a17688 Step 6/28 : LABEL oc.icon=\"icaclient.svg\" ---> Using cache ---> c6b12ecd898c Step 7/28 : LABEL oc.icondata=\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI2NCIgaGVpZ2h0PSI2NCIgdmVyc2lvbj0iMSI+CiA8cmVjdCBzdHlsZT0ib3BhY2l0eTouMiIgd2lkdGg9IjU2IiBoZWlnaHQ9IjU2IiB4PSItNTkiIHk9Ii02MCIgcng9IjI4IiByeT0iMjgiIHRyYW5zZm9ybT0ibWF0cml4KDAsLTEsLTEsMCwwLDApIi8+CiA8cmVjdCBzdHlsZT0iZmlsbDojNGY0ZjRmIiB3aWR0aD0iNTYiIGhlaWdodD0iNTYiIHg9Ii01OCIgeT0iLTYwIiByeD0iMjgiIHJ5PSIyOCIgdHJhbnNmb3JtPSJtYXRyaXgoMCwtMSwtMSwwLDAsMCkiLz4KIDxwYXRoIHN0eWxlPSJvcGFjaXR5Oi4yIiBkPSJtMzIgMTFhMiAyIDAgMCAwIC0wLjE5MTQgMC4wMTE3MmMtMTAuOTMzMjI0IDAuMTA0NTM5LTE5LjgwODYgOS4wMzA5Ny0xOS44MDg2IDE5Ljk4ODI4IDAgMTEuMDIyMDA2IDguOTc3OTk0IDIwIDIwIDIwIDEwLjk1NDY3OCAwIDE5Ljg3OTUyNC04Ljg3MTE4IDE5Ljk4ODI4Mi0xOS44MDA3ODJhMiAyIDAgMCAwIDAuMDExNzE4IC0wLjE5OTIxOCAyIDIgMCAwIDAgLTIgLTIgMiAyIDAgMCAwIC0yIDJjMCA4Ljg2MDI0Ni03LjEzOTc1NCAxNi0xNiAxNnMtMTYtNy4xMzk3NTQtMTYtMTYgNy4xMzk3NTQtMTYgMTYtMTZhMiAyIDAgMCAwIDIgLTIgMiAyIDAgMCAwIC0yIC0yem0wIDhhMiAyIDAgMCAwIC0wLjE5MTQgMC4wMDc4Yy02LjUxNTM3NCAwLjEwNDEyNi0xMS44MDg2IDUuNDUzMDUyLTExLjgwODYgMTEuOTkyMiAwIDYuNjAzNzI4IDUuMzk2MjcyIDEyIDEyIDEyIDYuNTM2NDUyIDAgMTEuODc5ODgtNS4yODkxMTIgMTEuOTg4MjgyLTExLjgwMDc4MmEyIDIgMCAwIDAgMC4wMTE3MTggLTAuMTk5MjE4IDIgMiAwIDAgMCAtMiAtMiAyIDIgMCAwIDAgLTIgMmMwIDQuNDQxOTY4LTMuNTU4MDMyIDgtOCA4cy04LTMuNTU4MDMyLTgtOCAzLjU1ODAzMi04IDgtOGEyIDIgMCAwIDAgMiAtMiAyIDIgMCAwIDAgLTIgLTJ6bTAgOGE0IDQgMCAwIDAgLTQgNCA0IDQgMCAwIDAgNCA0IDQgNCAwIDAgMCA0IC00IDQgNCAwIDAgMCAtNCAtNHoiLz4KIDxwYXRoIHN0eWxlPSJmaWxsOiNmZmZmZmYiIGQ9Im0zMiAxMGEyIDIgMCAwIDAgLTAuMTkxNCAwLjAxMTcyYy0xMC45MzMyMjQgMC4xMDQ1MzktMTkuODA4NiA5LjAzMDk3LTE5LjgwODYgMTkuOTg4MjggMCAxMS4wMjIwMDYgOC45Nzc5OTQgMjAgMjAgMjAgMTAuOTU0Njc4IDAgMTkuODc5NTI0LTguODcxMTggMTkuOTg4MjgyLTE5LjgwMDc4MmEyIDIgMCAwIDAgMC4wMTE3MTggLTAuMTk5MjE4IDIgMiAwIDAgMCAtMiAtMiAyIDIgMCAwIDAgLTIgMmMwIDguODYwMjQ2LTcuMTM5NzU0IDE2LTE2IDE2cy0xNi03LjEzOTc1NC0xNi0xNiA3LjEzOTc1NC0xNiAxNi0xNmEyIDIgMCAwIDAgMiAtMiAyIDIgMCAwIDAgLTIgLTJ6bTAgOGEyIDIgMCAwIDAgLTAuMTkxNCAwLjAwNzhjLTYuNTE1Mzc0IDAuMTA0MTI2LTExLjgwODYgNS40NTMwNTItMTEuODA4NiAxMS45OTIyIDAgNi42MDM3MjggNS4zOTYyNzIgMTIgMTIgMTIgNi41MzY0NTIgMCAxMS44Nzk4OC01LjI4OTExMiAxMS45ODgyODItMTEuODAwNzgyYTIgMiAwIDAgMCAwLjAxMTcxOCAtMC4xOTkyMTggMiAyIDAgMCAwIC0yIC0yIDIgMiAwIDAgMCAtMiAyYzAgNC40NDE5NjgtMy41NTgwMzIgOC04IDhzLTgtMy41NTgwMzItOC04IDMuNTU4MDMyLTggOC04YTIgMiAwIDAgMCAyIC0yIDIgMiAwIDAgMCAtMiAtMnptMCA4YTQgNCAwIDAgMCAtNCA0IDQgNCAwIDAgMCA0IDQgNCA0IDAgMCAwIDQgLTQgNCA0IDAgMCAwIC00IC00eiIvPgogPHBhdGggc3R5bGU9Im9wYWNpdHk6LjE7ZmlsbDojZmZmZmZmIiBkPSJtMzIgMmMtMTUuNTEyIDAtMjggMTIuNDg4LTI4IDI4IDAgMC4xMTM0NSAwLjAxMTI4MDUgMC4yMjQxMTMgMC4wMTc1NzgxIDAuMzM1OTM4IDAuMzUxNTQzMi0xNS4yMDE3NTcgMTIuNjkzMTQ5OS0yNy4zMzU5MzggMjcuOTgyNDIxOS0yNy4zMzU5MzhzMjcuNjMwODc5IDEyLjEzNDE4MSAyNy45ODI0MjIgMjcuMzM1OTM4YzAuMDA2Mjk4LTAuMTExODI1IDAuMDE3NTc4LTAuMjIyNDg4IDAuMDE3NTc4LTAuMzM1OTM4IDAtMTUuNTEyLTEyLjQ4OC0yOC0yOC0yOHoiLz4KPC9zdmc+Cg==\" ---> Using cache ---> cb5821f26574 Step 8/28 : LABEL oc.keyword=\"ica,citrix,icaclient,\" ---> Using cache ---> 841fc5293542 Step 9/28 : LABEL oc.cat=\"office\" ---> Using cache ---> b02b64fab112 Step 10/28 : LABEL oc.desktopfile=\"wfica.desktop\" ---> Using cache ---> d8929c453992 Step 11/28 : LABEL oc.launch=\"Wfica.Wfica\" ---> Using cache ---> 3c0001542ee6 Step 12/28 : LABEL oc.template=\"abcdesktopio/oc.template.gtk.18.04\" ---> Using cache ---> c48014944a74 Step 13/28 : ENV ARGS=\"-icaroot /opt/Citrix/ICAClient\" ---> Using cache ---> d242eb681417 Step 14/28 : LABEL oc.name=\"citrix\" ---> Using cache ---> fee77a4b23d6 Step 15/28 : LABEL oc.displayname=\"citrix-client\" ---> Using cache ---> 1fb6f9642a9f Step 16/28 : LABEL oc.path=\"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 0cba59460d1a Step 17/28 : LABEL oc.type=app ---> Using cache ---> a14be19dc259 Step 18/28 : LABEL oc.showinview=\"dock\" ---> Using cache ---> 9ee26ab86b1d Step 19/28 : LABEL oc.mimetype=\"application/x-ica;\" ---> Using cache ---> 5536706365ef Step 20/28 : RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi ---> Using cache ---> 49a06d7adf22 Step 21/28 : RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi ---> Using cache ---> 5090828ce15e Step 22/28 : WORKDIR /home/balloon ---> Using cache ---> ac6821413e1f Step 23/28 : USER balloon ---> Using cache ---> 7cbea5e541e8 Step 24/28 : ENV APPNAME \"citrix\" ---> Using cache ---> a6662e5e1ea4 Step 25/28 : ENV APPBIN \"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 475f164cc974 Step 26/28 : LABEL oc.args=\"-icaroot /opt/Citrix/ICAClient\" ---> Using cache ---> b085c5a7c97d Step 27/28 : ENV APP \"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 534994e86953 Step 28/28 : LABEL oc.usedefaultapplication=true ---> Using cache ---> 5cd6ea7a4228 Successfully built 5cd6ea7a4228 Successfully tagged abcdesktopio/citrix.d:dev The new ica citrix docker image abcdesktopio/citrix.d:dev is ready to run","title":"Build non free applications"},{"location":"common/non-free-applications/#install-non-free-applications","text":"","title":"Install non-free applications"},{"location":"common/non-free-applications/#install-and-build-citrix-receiver-for-abcdesktop","text":"Citrix Workspace App or Citrix Receiver does not exist in official debian repository. You need to download the deb package from the www.citrix.com website manually. Clone the abcdesktopio/oc.apps repository git clone https://github.com/abcdesktopio/oc.apps.git Download the Citrix Receiver for Linux .deb package. Go to https://www.citrix.com/downloads/citrix-receiver/linux/receiver-for-linux-latest.html Copy the downloaded file icaclient_13.10.0.20_amd64.deb for example as icaclient_amd64.deb to your local oc.apps directory cd oc.apps cp ~/Download/icaclient_13.10.0.20_amd64.deb icaclient_amd64.deb Run docker build command docker build --build-arg TAG=dev -t abcdesktopio/citrix.d:dev -f citrix.d . Sending build context to Docker daemon 29.13MB Step 1/28 : ARG TAG=dev Step 2/28 : FROM abcdesktopio/oc.template.gtk.18.04:$TAG ---> c66ccd2edc52 Step 3/28 : COPY icaclient_amd64.deb /tmp/icaclient_amd64.deb ---> Using cache ---> de6a2bcaa7c0 Step 4/28 : RUN apt-get install --no-install-recommends --yes /tmp/icaclient_amd64.deb && apt-get clean && rm /tmp/icaclient_amd64.deb ---> Using cache ---> 87e1ce530e44 Step 5/28 : ENV BUSER balloon ---> Using cache ---> e4f474a17688 Step 6/28 : LABEL oc.icon=\"icaclient.svg\" ---> Using cache ---> c6b12ecd898c Step 7/28 : LABEL oc.icondata=\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSI2NCIgaGVpZ2h0PSI2NCIgdmVyc2lvbj0iMSI+CiA8cmVjdCBzdHlsZT0ib3BhY2l0eTouMiIgd2lkdGg9IjU2IiBoZWlnaHQ9IjU2IiB4PSItNTkiIHk9Ii02MCIgcng9IjI4IiByeT0iMjgiIHRyYW5zZm9ybT0ibWF0cml4KDAsLTEsLTEsMCwwLDApIi8+CiA8cmVjdCBzdHlsZT0iZmlsbDojNGY0ZjRmIiB3aWR0aD0iNTYiIGhlaWdodD0iNTYiIHg9Ii01OCIgeT0iLTYwIiByeD0iMjgiIHJ5PSIyOCIgdHJhbnNmb3JtPSJtYXRyaXgoMCwtMSwtMSwwLDAsMCkiLz4KIDxwYXRoIHN0eWxlPSJvcGFjaXR5Oi4yIiBkPSJtMzIgMTFhMiAyIDAgMCAwIC0wLjE5MTQgMC4wMTE3MmMtMTAuOTMzMjI0IDAuMTA0NTM5LTE5LjgwODYgOS4wMzA5Ny0xOS44MDg2IDE5Ljk4ODI4IDAgMTEuMDIyMDA2IDguOTc3OTk0IDIwIDIwIDIwIDEwLjk1NDY3OCAwIDE5Ljg3OTUyNC04Ljg3MTE4IDE5Ljk4ODI4Mi0xOS44MDA3ODJhMiAyIDAgMCAwIDAuMDExNzE4IC0wLjE5OTIxOCAyIDIgMCAwIDAgLTIgLTIgMiAyIDAgMCAwIC0yIDJjMCA4Ljg2MDI0Ni03LjEzOTc1NCAxNi0xNiAxNnMtMTYtNy4xMzk3NTQtMTYtMTYgNy4xMzk3NTQtMTYgMTYtMTZhMiAyIDAgMCAwIDIgLTIgMiAyIDAgMCAwIC0yIC0yem0wIDhhMiAyIDAgMCAwIC0wLjE5MTQgMC4wMDc4Yy02LjUxNTM3NCAwLjEwNDEyNi0xMS44MDg2IDUuNDUzMDUyLTExLjgwODYgMTEuOTkyMiAwIDYuNjAzNzI4IDUuMzk2MjcyIDEyIDEyIDEyIDYuNTM2NDUyIDAgMTEuODc5ODgtNS4yODkxMTIgMTEuOTg4MjgyLTExLjgwMDc4MmEyIDIgMCAwIDAgMC4wMTE3MTggLTAuMTk5MjE4IDIgMiAwIDAgMCAtMiAtMiAyIDIgMCAwIDAgLTIgMmMwIDQuNDQxOTY4LTMuNTU4MDMyIDgtOCA4cy04LTMuNTU4MDMyLTgtOCAzLjU1ODAzMi04IDgtOGEyIDIgMCAwIDAgMiAtMiAyIDIgMCAwIDAgLTIgLTJ6bTAgOGE0IDQgMCAwIDAgLTQgNCA0IDQgMCAwIDAgNCA0IDQgNCAwIDAgMCA0IC00IDQgNCAwIDAgMCAtNCAtNHoiLz4KIDxwYXRoIHN0eWxlPSJmaWxsOiNmZmZmZmYiIGQ9Im0zMiAxMGEyIDIgMCAwIDAgLTAuMTkxNCAwLjAxMTcyYy0xMC45MzMyMjQgMC4xMDQ1MzktMTkuODA4NiA5LjAzMDk3LTE5LjgwODYgMTkuOTg4MjggMCAxMS4wMjIwMDYgOC45Nzc5OTQgMjAgMjAgMjAgMTAuOTU0Njc4IDAgMTkuODc5NTI0LTguODcxMTggMTkuOTg4MjgyLTE5LjgwMDc4MmEyIDIgMCAwIDAgMC4wMTE3MTggLTAuMTk5MjE4IDIgMiAwIDAgMCAtMiAtMiAyIDIgMCAwIDAgLTIgMmMwIDguODYwMjQ2LTcuMTM5NzU0IDE2LTE2IDE2cy0xNi03LjEzOTc1NC0xNi0xNiA3LjEzOTc1NC0xNiAxNi0xNmEyIDIgMCAwIDAgMiAtMiAyIDIgMCAwIDAgLTIgLTJ6bTAgOGEyIDIgMCAwIDAgLTAuMTkxNCAwLjAwNzhjLTYuNTE1Mzc0IDAuMTA0MTI2LTExLjgwODYgNS40NTMwNTItMTEuODA4NiAxMS45OTIyIDAgNi42MDM3MjggNS4zOTYyNzIgMTIgMTIgMTIgNi41MzY0NTIgMCAxMS44Nzk4OC01LjI4OTExMiAxMS45ODgyODItMTEuODAwNzgyYTIgMiAwIDAgMCAwLjAxMTcxOCAtMC4xOTkyMTggMiAyIDAgMCAwIC0yIC0yIDIgMiAwIDAgMCAtMiAyYzAgNC40NDE5NjgtMy41NTgwMzIgOC04IDhzLTgtMy41NTgwMzItOC04IDMuNTU4MDMyLTggOC04YTIgMiAwIDAgMCAyIC0yIDIgMiAwIDAgMCAtMiAtMnptMCA4YTQgNCAwIDAgMCAtNCA0IDQgNCAwIDAgMCA0IDQgNCA0IDAgMCAwIDQgLTQgNCA0IDAgMCAwIC00IC00eiIvPgogPHBhdGggc3R5bGU9Im9wYWNpdHk6LjE7ZmlsbDojZmZmZmZmIiBkPSJtMzIgMmMtMTUuNTEyIDAtMjggMTIuNDg4LTI4IDI4IDAgMC4xMTM0NSAwLjAxMTI4MDUgMC4yMjQxMTMgMC4wMTc1NzgxIDAuMzM1OTM4IDAuMzUxNTQzMi0xNS4yMDE3NTcgMTIuNjkzMTQ5OS0yNy4zMzU5MzggMjcuOTgyNDIxOS0yNy4zMzU5MzhzMjcuNjMwODc5IDEyLjEzNDE4MSAyNy45ODI0MjIgMjcuMzM1OTM4YzAuMDA2Mjk4LTAuMTExODI1IDAuMDE3NTc4LTAuMjIyNDg4IDAuMDE3NTc4LTAuMzM1OTM4IDAtMTUuNTEyLTEyLjQ4OC0yOC0yOC0yOHoiLz4KPC9zdmc+Cg==\" ---> Using cache ---> cb5821f26574 Step 8/28 : LABEL oc.keyword=\"ica,citrix,icaclient,\" ---> Using cache ---> 841fc5293542 Step 9/28 : LABEL oc.cat=\"office\" ---> Using cache ---> b02b64fab112 Step 10/28 : LABEL oc.desktopfile=\"wfica.desktop\" ---> Using cache ---> d8929c453992 Step 11/28 : LABEL oc.launch=\"Wfica.Wfica\" ---> Using cache ---> 3c0001542ee6 Step 12/28 : LABEL oc.template=\"abcdesktopio/oc.template.gtk.18.04\" ---> Using cache ---> c48014944a74 Step 13/28 : ENV ARGS=\"-icaroot /opt/Citrix/ICAClient\" ---> Using cache ---> d242eb681417 Step 14/28 : LABEL oc.name=\"citrix\" ---> Using cache ---> fee77a4b23d6 Step 15/28 : LABEL oc.displayname=\"citrix-client\" ---> Using cache ---> 1fb6f9642a9f Step 16/28 : LABEL oc.path=\"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 0cba59460d1a Step 17/28 : LABEL oc.type=app ---> Using cache ---> a14be19dc259 Step 18/28 : LABEL oc.showinview=\"dock\" ---> Using cache ---> 9ee26ab86b1d Step 19/28 : LABEL oc.mimetype=\"application/x-ica;\" ---> Using cache ---> 5536706365ef Step 20/28 : RUN if [ -d /usr/share/icons ]; then cd /usr/share/icons; /composer/safelinks.sh; fi ---> Using cache ---> 49a06d7adf22 Step 21/28 : RUN if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps; /composer/safelinks.sh; fi ---> Using cache ---> 5090828ce15e Step 22/28 : WORKDIR /home/balloon ---> Using cache ---> ac6821413e1f Step 23/28 : USER balloon ---> Using cache ---> 7cbea5e541e8 Step 24/28 : ENV APPNAME \"citrix\" ---> Using cache ---> a6662e5e1ea4 Step 25/28 : ENV APPBIN \"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 475f164cc974 Step 26/28 : LABEL oc.args=\"-icaroot /opt/Citrix/ICAClient\" ---> Using cache ---> b085c5a7c97d Step 27/28 : ENV APP \"/opt/Citrix/ICAClient/wfica\" ---> Using cache ---> 534994e86953 Step 28/28 : LABEL oc.usedefaultapplication=true ---> Using cache ---> 5cd6ea7a4228 Successfully built 5cd6ea7a4228 Successfully tagged abcdesktopio/citrix.d:dev The new ica citrix docker image abcdesktopio/citrix.d:dev is ready to run","title":"Install and build Citrix Receiver for abcdesktop"},{"location":"common/update_image/","text":"Update and custom front end image Requirements Goals Update abcdesktop.io images to use your own. Build images Build image process from abcdesktopio docker registry to your private registry Update oc.nginx image Goal : Custom web site colors Change logo Rename the web site name Only the name of the network is used by abcdesktop. Clone default webmodules git clone https://github.com/abcdesktopio/webModules.git Locate project and ui files Update ui.json file Update your ui.json file. ui.json is located in var/webModules/transpile/config directory. # cd var/webModules/transpile/config var/webModules/transpile/config# ls -la total 204 drwxrwxr-x 1 root root 4096 Feb 1 15:14 . drwxr-xr-x 1 root root 4096 Feb 1 15:14 .. -rw-rw-r-- 1 root root 34 Feb 1 15:14 .cache.json -rw-rw-r-- 1 root root 2215 Feb 1 15:11 modules.json -rw-rw-r-- 1 root root 1044 Feb 1 15:11 ui.json ui.json is a json dictionary file The main entry is name , name is the project name: entry default value example name abcdesktop.io acmedesktop.io { \"name\": \"abcdesktop.io\", \"colors\": [ { \"name\": \"@primary\", \"value\": \"#474B55\" }, { \"name\": \"@secondary\", \"value\": \"#2D2D2D\" }, { \"name\": \"@tertiary\", \"value\": \"#6EC6F0\" }, { \"name\": \"@svgColor\", \"value\": \"#FFFFFF\" }, { \"name\": \"@danger\", \"value\": \"#CD3C14\" }, { \"name\": \"@success\", \"value\": \"#32C832\" }, { \"name\": \"@info\", \"value\": \"#527EDB\" }, { \"name\": \"@warning\", \"value\": \"#FFCC00\" }, { \"name\": \"@light\", \"value\": \"#FFFFFF\" }, { \"name\": \"@dark\", \"value\": \"#666666\" }, { \"name\": \"@blue\", \"value\": \"#4BB4E6\" }, { \"name\": \"@green\", \"value\": \"#50BE87\" }, { \"name\": \"@purple\", \"value\": \"#A885D8\" }, { \"name\": \"@pink\", \"value\": \"#FFB4E6\" }, { \"name\": \"@yellow\", \"value\": \"#FFD200\" } ], \"urlcannotopensession\": \"/identification/site/\" } Colors dictionary entries entry default value example @primary #474B55 #474B55 @secondatry #2D2D2D #2D2D2D @tertiary #6EC6F0 #6EC6F0 Create a new Dockerfile to build changes Update the ui.json with your own values Change for example the name to \"name\": \"acmedesktop.io\" and the @tertiary \"value\": \"#00BCD4\" Example { \"name\": \"acmedesktop.io\", \"colors\": [ { \"name\": \"@primary\", \"value\": \"#474B55\" }, { \"name\": \"@secondary\", \"value\": \"#2D2D2D\" }, { \"name\": \"@tertiary\", \"value\": \"#00FCD4\" }, { \"name\": \"@svgColor\", \"value\": \"#FFFFFF\" }, { \"name\": \"@danger\", \"value\": \"#CD3C14\" }, { \"name\": \"@success\", \"value\": \"#32C832\" }, { \"name\": \"@info\", \"value\": \"#527EDB\" }, { \"name\": \"@warning\", \"value\": \"#FFCC00\" }, { \"name\": \"@light\", \"value\": \"#FFFFFF\" }, { \"name\": \"@dark\", \"value\": \"#666666\" }, { \"name\": \"@blue\", \"value\": \"#4BB4E6\" }, { \"name\": \"@green\", \"value\": \"#50BE87\" }, { \"name\": \"@purple\", \"value\": \"#A885D8\" }, { \"name\": \"@pink\", \"value\": \"#FFB4E6\" }, { \"name\": \"@yellow\", \"value\": \"#FFD200\" } ], \"urlcannotopensession\": \"/identification/site/\" } Write your Dockerfile FROM abcdesktopio/oc.nginx:builder as builder # copy data files COPY --from=abcdesktopio/oc.nginx:dev var/webModules /var/webModules # copy updated file ui.json COPY ui.json /var/webModules/transpile/config/ui.json # run makefile RUN cd /var/webModules && make css # --- START Build image --- FROM abcdesktopio/oc.nginx # COPY generated web site from builder container COPY --from=builder var/webModules /var/webModules Docker build Run the docker build command to build the new oc.nginx:acme image docker build -t oc.nginx:acme . Sending build context to Docker daemon 258.3MB Step 1/6 : FROM abcdesktopio/oc.nginx:builder as builder ---> b04ba79c6b97 Step 2/6 : COPY --from=abcdesktopio/oc.nginx var/webModules /var/webModules ---> Using cache ---> 3c16ce97b6b5 Step 3/6 : COPY ui.json /var/webModules/transpile/config/ui.json ---> Using cache ---> 3c8e48730bb0 Step 4/6 : RUN cd /var/webModules && make css ---> Running in b9660fb676b2 Build css: 1.005s Total duration: 1.007s Removing intermediate container b9660fb676b2 ---> febdb98ad1aa Step 5/6 : FROM abcdesktopio/oc.nginx ---> 2b311b600a4e Step 6/6 : COPY --from=builder var/webModules /var/webModules ---> Using cache ---> c9545d07f825 Successfully built c9545d07f825 Successfully tagged oc.nginx:acme Run the docker images command to read the new oc.nginx image docker images REPOSITORY TAG IMAGE ID CREATED SIZE oc.nginx acme 4de1755b60d7 About an hour ago 746MB Update the dockercompose or the abcdesktop.yaml file Update the dockercompose or the abcdesktop.yaml file to replace the default abcdesktopio/oc.nginx by the new image oc.nginx:acme name. version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'oc.nginx:acme' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback networks: netuser: driver: bridge netback: internal: true The run the docker-compose up, and start you web browser. You can read the new project name at the home page. We define the new tertiary color as #00FCD4 in dict { \"name\": \"@tertiary\", \"value\": \"#00FCD4\" } Old tertiary color has been replace by #00FCD4 .","title":"Update and custom frontend image"},{"location":"common/update_image/#update-and-custom-front-end-image","text":"","title":"Update and custom front end image"},{"location":"common/update_image/#requirements","text":"","title":"Requirements"},{"location":"common/update_image/#goals","text":"Update abcdesktop.io images to use your own.","title":"Goals"},{"location":"common/update_image/#build-images","text":"Build image process from abcdesktopio docker registry to your private registry","title":"Build images"},{"location":"common/update_image/#update-ocnginx-image","text":"Goal : Custom web site colors Change logo Rename the web site name Only the name of the network is used by abcdesktop.","title":"Update oc.nginx image"},{"location":"common/update_image/#clone-default-webmodules","text":"git clone https://github.com/abcdesktopio/webModules.git","title":"Clone default webmodules"},{"location":"common/update_image/#locate-project-and-ui-files","text":"","title":"Locate project and ui files"},{"location":"common/update_image/#update-uijson-file","text":"Update your ui.json file. ui.json is located in var/webModules/transpile/config directory. # cd var/webModules/transpile/config var/webModules/transpile/config# ls -la total 204 drwxrwxr-x 1 root root 4096 Feb 1 15:14 . drwxr-xr-x 1 root root 4096 Feb 1 15:14 .. -rw-rw-r-- 1 root root 34 Feb 1 15:14 .cache.json -rw-rw-r-- 1 root root 2215 Feb 1 15:11 modules.json -rw-rw-r-- 1 root root 1044 Feb 1 15:11 ui.json ui.json is a json dictionary file The main entry is name , name is the project name: entry default value example name abcdesktop.io acmedesktop.io { \"name\": \"abcdesktop.io\", \"colors\": [ { \"name\": \"@primary\", \"value\": \"#474B55\" }, { \"name\": \"@secondary\", \"value\": \"#2D2D2D\" }, { \"name\": \"@tertiary\", \"value\": \"#6EC6F0\" }, { \"name\": \"@svgColor\", \"value\": \"#FFFFFF\" }, { \"name\": \"@danger\", \"value\": \"#CD3C14\" }, { \"name\": \"@success\", \"value\": \"#32C832\" }, { \"name\": \"@info\", \"value\": \"#527EDB\" }, { \"name\": \"@warning\", \"value\": \"#FFCC00\" }, { \"name\": \"@light\", \"value\": \"#FFFFFF\" }, { \"name\": \"@dark\", \"value\": \"#666666\" }, { \"name\": \"@blue\", \"value\": \"#4BB4E6\" }, { \"name\": \"@green\", \"value\": \"#50BE87\" }, { \"name\": \"@purple\", \"value\": \"#A885D8\" }, { \"name\": \"@pink\", \"value\": \"#FFB4E6\" }, { \"name\": \"@yellow\", \"value\": \"#FFD200\" } ], \"urlcannotopensession\": \"/identification/site/\" }","title":"Update ui.json file"},{"location":"common/update_image/#colors-dictionary-entries","text":"entry default value example @primary #474B55 #474B55 @secondatry #2D2D2D #2D2D2D @tertiary #6EC6F0 #6EC6F0","title":"Colors dictionary entries"},{"location":"common/update_image/#create-a-new-dockerfile-to-build-changes","text":"","title":"Create a new Dockerfile to build changes"},{"location":"common/update_image/#update-the-uijson-with-your-own-values","text":"Change for example the name to \"name\": \"acmedesktop.io\" and the @tertiary \"value\": \"#00BCD4\" Example { \"name\": \"acmedesktop.io\", \"colors\": [ { \"name\": \"@primary\", \"value\": \"#474B55\" }, { \"name\": \"@secondary\", \"value\": \"#2D2D2D\" }, { \"name\": \"@tertiary\", \"value\": \"#00FCD4\" }, { \"name\": \"@svgColor\", \"value\": \"#FFFFFF\" }, { \"name\": \"@danger\", \"value\": \"#CD3C14\" }, { \"name\": \"@success\", \"value\": \"#32C832\" }, { \"name\": \"@info\", \"value\": \"#527EDB\" }, { \"name\": \"@warning\", \"value\": \"#FFCC00\" }, { \"name\": \"@light\", \"value\": \"#FFFFFF\" }, { \"name\": \"@dark\", \"value\": \"#666666\" }, { \"name\": \"@blue\", \"value\": \"#4BB4E6\" }, { \"name\": \"@green\", \"value\": \"#50BE87\" }, { \"name\": \"@purple\", \"value\": \"#A885D8\" }, { \"name\": \"@pink\", \"value\": \"#FFB4E6\" }, { \"name\": \"@yellow\", \"value\": \"#FFD200\" } ], \"urlcannotopensession\": \"/identification/site/\" }","title":"Update the ui.json with your own values"},{"location":"common/update_image/#write-your-dockerfile","text":"FROM abcdesktopio/oc.nginx:builder as builder # copy data files COPY --from=abcdesktopio/oc.nginx:dev var/webModules /var/webModules # copy updated file ui.json COPY ui.json /var/webModules/transpile/config/ui.json # run makefile RUN cd /var/webModules && make css # --- START Build image --- FROM abcdesktopio/oc.nginx # COPY generated web site from builder container COPY --from=builder var/webModules /var/webModules","title":"Write your Dockerfile"},{"location":"common/update_image/#docker-build","text":"Run the docker build command to build the new oc.nginx:acme image docker build -t oc.nginx:acme . Sending build context to Docker daemon 258.3MB Step 1/6 : FROM abcdesktopio/oc.nginx:builder as builder ---> b04ba79c6b97 Step 2/6 : COPY --from=abcdesktopio/oc.nginx var/webModules /var/webModules ---> Using cache ---> 3c16ce97b6b5 Step 3/6 : COPY ui.json /var/webModules/transpile/config/ui.json ---> Using cache ---> 3c8e48730bb0 Step 4/6 : RUN cd /var/webModules && make css ---> Running in b9660fb676b2 Build css: 1.005s Total duration: 1.007s Removing intermediate container b9660fb676b2 ---> febdb98ad1aa Step 5/6 : FROM abcdesktopio/oc.nginx ---> 2b311b600a4e Step 6/6 : COPY --from=builder var/webModules /var/webModules ---> Using cache ---> c9545d07f825 Successfully built c9545d07f825 Successfully tagged oc.nginx:acme Run the docker images command to read the new oc.nginx image docker images REPOSITORY TAG IMAGE ID CREATED SIZE oc.nginx acme 4de1755b60d7 About an hour ago 746MB","title":"Docker build"},{"location":"common/update_image/#update-the-dockercompose-or-the-abcdesktopyaml-file","text":"Update the dockercompose or the abcdesktop.yaml file to replace the default abcdesktopio/oc.nginx by the new image oc.nginx:acme name. version: '3' services: pyos: depends_on: - memcached - mongodb image: 'abcdesktopio/oc.pyos' networks: - netback volumes: - /var/run/docker.sock:/var/run/docker.sock speedtest: image: 'abcdesktopio/oc.speedtest' networks: - netuser nginx: depends_on: - memcached - pyos image: 'oc.nginx:acme' ports: - '80:80' - '443:443' networks: - netuser - netback memcached: image: memcached networks: - netback mongodb: image: mongo networks: - netback networks: netuser: driver: bridge netback: internal: true The run the docker-compose up, and start you web browser. You can read the new project name at the home page. We define the new tertiary color as #00FCD4 in dict { \"name\": \"@tertiary\", \"value\": \"#00FCD4\" } Old tertiary color has been replace by #00FCD4 .","title":"Update the dockercompose or the abcdesktop.yaml file"},{"location":"common/upload_and_download_files/","text":"Upload and Download files in your desktop Goals Upload file from your local storage to your abcdesktop Download file from your abcdesktop to your local storage Upload file in your desktop To upload file into your local storage, just use a drag & drop, from your device to you adcdesktop Then, start the filemanager, your new file is located in your home directory Download file from your desktop To download file from your abcdesktop to you local storage, just start the file manager. Choose your file and using the right mouse button, choose the menu option Download for Desktop as describe : The file is downloaded by your web browser The file is located in your Downloads directory Great, you have uploaded and downloaded files with your abcdesktop, you can now use abcdesktop.io applications to edit all your files.","title":"Upload and from files with your desktop"},{"location":"common/upload_and_download_files/#upload-and-download-files-in-your-desktop","text":"","title":"Upload and Download files in your desktop"},{"location":"common/upload_and_download_files/#goals","text":"Upload file from your local storage to your abcdesktop Download file from your abcdesktop to your local storage","title":"Goals"},{"location":"common/upload_and_download_files/#upload-file-in-your-desktop","text":"To upload file into your local storage, just use a drag & drop, from your device to you adcdesktop Then, start the filemanager, your new file is located in your home directory","title":"Upload file in your desktop"},{"location":"common/upload_and_download_files/#download-file-from-your-desktop","text":"To download file from your abcdesktop to you local storage, just start the file manager. Choose your file and using the right mouse button, choose the menu option Download for Desktop as describe : The file is downloaded by your web browser The file is located in your Downloads directory Great, you have uploaded and downloaded files with your abcdesktop, you can now use abcdesktop.io applications to edit all your files.","title":"Download file from your desktop"},{"location":"common/1.0/abcdesktop.bastion/","text":"Setup guide to use abcdesktop.io as bastion service Design The goal of this setup guide is to install abcdesktio.io as a bastion service, with only one virtual machine script and vagrant file get script and vagrant file To get the installation script and the vagrant file, run the command git clone https://github.com/abcdesktopio/vagrant.git The vagrant file name is Vagrantfile.kubernetes.bastion The installation script is abcdesktop_kubernetes_bastion.sh start vagrant file to run the kmaster vm Run the command to run the vagrant file $ cd vagrant $ VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant up This vagrant file defines a vm kmaster : kmaster.vm.box = \"hashicorp/bionic64\" kmaster.vm.hostname = \"kmaster.example.com\" # By default, Vagrant uses a netmask of 255.255.255.0 # config.vm.network :hostonly, \"10.11.12.13\", :netmask => \"255.255.0.0\" kmaster.vm.network \"private_network\", ip: \"172.42.42.100\" kmaster.vm.network \"private_network\", ip: \"10.9.1.100\", virtualbox__intnet: true kmaster.vm.network \"private_network\", ip: \"192.168.29.100\", virtualbox__intnet: true kmaster.vm.network \"forwarded_port\", guest: 30443, host: 30443 kmaster.vm.provider \"virtualbox\" do |v| v.name = \"kmaster\" v.memory = 4096 v.cpus = 4 end kmaster.vm.provision \"shell\", path: \"abcdesktop_kubernetes_bastion.sh\" It forward the host tcp port 30443 to guest port 30443 ( mapped as a host port in kubernetes ) All networks are defined as private_network to make it simplest as possible. abcdesktop_kubernetes_bastion.sh description abcdesktop_kubernetes_bastion.sh takes more than eight minutes to install all services, from an ubuntu bionic 64 hashicorp/bionic64 : kubernetes abcdesktop multus-cni multi-networkpolicy Read step by step the abcdesktop_kubernetes_bastion.sh content to get more details. You can read the vagrant stdout file as example abcdesktop kubernetes bastion install log file login to get a ssh into the kmaster vm VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh List kube-system pods and abcdesktop pods To run kubectl commands inside the master virtual machine export KUBECONFIG=/etc/kubernetes/admin.conf vagrant@kmaster:~$ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE coredns-64897985d-4d57p 1/1 Running 0 11h coredns-64897985d-qtmkq 1/1 Running 0 11h etcd-kmaster 1/1 Running 0 11h kube-apiserver-kmaster 1/1 Running 0 11h kube-controller-manager-kmaster 1/1 Running 0 11h kube-flannel-ds-gskrs 1/1 Running 0 11h kube-proxy-c566l 1/1 Running 0 11h kube-scheduler-kmaster 1/1 Running 0 11h vagrant@kmaster:~$ kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-pt2j6 1/1 Running 0 11h daemonset-pyos-zqpf7 1/1 Running 0 11h memcached-od-78578c879-kstcl 1/1 Running 0 11h mongodb-od-5c68794bb8-wf6sm 1/1 Running 0 11h openldap-od-558f7959d5-vhbln 1/1 Running 0 11h speedtest-od-7b66cc656b-fh97g 1/1 Running 0 11h Login as a user Connect your local abcdesktop Open your web browser to http://[your-ip-hostname]:30443/ Replace [your-ip-hostname] by the host node IP address You should get the web page Log in as abcdesktop adds an OpenLDAP server for testing LDAP applications, i.e. unit tests. The ldap server is used to authenticate user. To get more informations about the OpenLDAP server and the account detail, read ldap server Login Accounts Login Password Hubert J. Farnsworth professor Philip J. Fry fry Hermes Conrad hermes Turanga Leela leela Bender Bending Rodr\u00edguez bende Use the credentials, to login Login Account : Philip J. Fry Login Password : fry Get the default desktop After the login, you should get the default desktop. Run a web shell process To start a shell, insert webshell as keywords in the search text area : Run ifconfig command to list network interfaces In the web shell, run the command $ ifconfig -a This command shows the network interfaces net1 and net2 with the associated ip address Tag and rules Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash Config file abcdesktop.yaml Open the abcdesktop.yaml configuration file, and look at ldapconfig ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap.abcdesktop.svc.cluster.local' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrew' }, 'rule-test': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'adminstaff' } } } } } openldap.abcdesktop.svc.cluster.local is a local ldap server running as a pod Rules description 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrew' } If a user is member of 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' then the label tag shipcrew is set to the user's pod 'rule-admin': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'adminstaff' } If a user is member of 'cn=admin_staff,ou=people,dc=planetexpress,dc=com' then the label tag adminstaff is set to the user's pod In the abcdesktop.yaml configuration file, and look at the desktop.policies and the network option desktop.policies: { 'rules': { 'network': { 'shipcrew': { 'annotations' : { 'k8s.v1.cni.cncf.io/networks': '[ {\"name\":\"macvlan-conf-eth3\"}, { \"name\":\"macvlan-conf-eth2\", \"default-route\": [\"10.9.1.100\"] } ]' } } } }, 'acls' : {} } If a pod as the 'shipcrew' tag, then add the network annotations [ { \"name\": \"macvlan-conf-eth3\"}, { \"name\": \"macvlan-conf-eth2\", \"default-route\": [\"10.9.1.100\"] } ] List pods and labels in abcdesktop namespace To list pod in the abcdesktop namespace, run the command export KUBECONFIG=/etc/kubernetes/admin.conf kubectl get pods -n abcdesktop root@kmaster:~# export KUBECONFIG=/etc/kubernetes/admin.conf root@kmaster:~# kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-5dzjc 1/1 Running 0 151m daemonset-pyos-szs8h 1/1 Running 0 151m fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 3/3 Running 0 86m memcached-od-78578c879-vx26h 1/1 Running 0 151m mongodb-od-6568f85897-tgfjb 1/1 Running 0 151m openldap-od-558f7959d5-qz2kg 1/1 Running 0 151m speedtest-od-76d578578d-rl8k8 1/1 Running 0 151m Describe pods fry Run the command kubectl describe pods YOUR_POD Replace YOUR_POD by your pod root@kmaster:~# kubectl describe pods fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 -n abcdesktop Name: fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 Namespace: abcdesktop Priority: 0 Node: kmaster/10.0.2.15 Start Time: Mon, 31 Jan 2022 16:14:16 +0000 Labels: access_provider=planet access_userid=FRY access_username=philip_j__fry broadcast_cookie=f7ee45615acce9c5fbed2607d35471264d6c6c14b5cd5778 domain=desktop netpol/ocuser=true pulseaudio_cookie=f7cfdfb7b4227e816f3ad59f9d122fac49674a1a60455951 shipcrew=true type=x11server xauthkey=ad9e3675cb184db9b6c9eee4852a94est-od-76d578578d-rl8k8 The label shipcrew=true is set Annotations: k8s.v1.cni.cncf.io/network-status: [{ \"name\": \"cbr0\", \"interface\": \"eth0\", \"ips\": [ \"10.244.0.12\" ], \"mac\": \"06:17:a7:0c:24:9b\", \"default\": true, \"dns\": {} },{ \"name\": \"abcdesktop/macvlan-conf-eth3\", \"interface\": \"net1\", \"ips\": [ \"192.168.29.12\" ], \"mac\": \"3a:db:a1:33:53:72\", \"dns\": {} },{ \"name\": \"abcdesktop/macvlan-conf-eth2\", \"interface\": \"net2\", \"ips\": [ \"10.9.1.12\" ], \"mac\": \"86:eb:43:fe:db:e7\", \"dns\": {} }] The Annotations k8s.v1.cni.cncf.io/network-status describes the network interfaces inside the pod. Look at the pre installed network rules Run the command kubectl get net-attach-def -n abcdesktop root@kmaster:~# kubectl get net-attach-def -n abcdesktop NAME AGE macvlan-conf-eth2 154m macvlan-conf-eth3 154m Get more details about macvlan-conf-eth3 root@kmaster:~# kubectl describe net-attach-def macvlan-conf-eth3 -n abcdesktop Name: macvlan-conf-eth3 Namespace: abcdesktop Labels: <none> Annotations: <none> API Version: k8s.cni.cncf.io/v1 Kind: NetworkAttachmentDefinition Metadata: Creation Timestamp: 2022-01-31T15:10:38Z Generation: 1 Managed Fields: API Version: k8s.cni.cncf.io/v1 Fields Type: FieldsV1 fieldsV1: f:metadata: f:annotations: .: f:kubectl.kubernetes.io/last-applied-configuration: f:spec: .: f:config: Manager: kubectl-client-side-apply Operation: Update Time: 2022-01-31T15:10:38Z Resource Version: 1008 UID: a5b0d3a0-52c4-42da-887b-8de73cff2b1c Spec: Config: { \"cniVersion\": \"0.3.0\", \"type\": \"macvlan\", \"master\": \"eth3\", \"mode\": \"bridge\", \"ipam\": { \"type\": \"host-local\", \"subnet\": \"192.168.29.0/24\", \"rangeStart\": \"192.168.29.10\", \"rangeEnd\": \"192.168.29.99\", \"gateway\": \"192.168.29.100\" } } Events: <none> macvlan-conf-eth3 is used by the user's pod. List multi-policy To list multi-policy, run the command kubectl get multi-policy -n abcdesktop root@kmaster:~# kubectl get multi-policy -n abcdesktop NAME AGE mnp-permit-shipcrew 3h And get description about the policy mnp-permit-shipcrew apiVersion: k8s.cni.cncf.io/v1beta1 kind: MultiNetworkPolicy metadata: name: mnp-permit-shipcrew namespace: abcdesktop annotations: k8s.v1.cni.cncf.io/policy-for: macvlan-conf-eth3 spec: podSelector: matchLabels: shipcrew: 'true' policyTypes: - Egress egress: - to: - ipBlock: cidr: 192.168.55.21/32 - ipBlock: cidr: 192.168.55.22/32 ports: - protocol: TCP port: 22 If a pod in the abcdesktop namespace, contains a label shipcrew: 'true' set the iptables to permit egress to host 192.168.55.21/32 and 192.168.55.22/32 using protocol TCP destination port 22 . dump the generated by iptables in /var/lib/multi-networkpolicy/iptables/ Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash list the directories /var/lib/multi-networkpolicy/iptables/ in kmaster root@kmaster:~# ls /var/lib/multi-networkpolicy/iptables/ afe82680-77b4-4bac-ad2b-8be9488402fb A new afe82680-77b4-4bac-ad2b-8be9488402fb exists cat the current.iptables file content in the /var/lib/multi-networkpolicy/iptables/ afe82680-77b4-4bac-ad2b-8be9488402fb root@kmaster:~# cat /var/lib/multi-networkpolicy/iptables/afe82680-77b4-4bac-ad2b-8be9488402fb/current.iptables # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *mangle :PREROUTING ACCEPT [441:57462] :INPUT ACCEPT [441:57462] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [370:150632] :POSTROUTING ACCEPT [367:150476] COMMIT # Completed on Mon Jan 31 16:16:22 2022 # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] :MULTI-0-EGRESS - [0:0] :MULTI-0-EGRESS-0-PORTS - [0:0] :MULTI-0-EGRESS-0-TO - [0:0] :MULTI-EGRESS - [0:0] :MULTI-INGRESS - [0:0] -A INPUT -i net2 -j MULTI-INGRESS -A INPUT -i net1 -j MULTI-INGRESS -A OUTPUT -o net2 -j MULTI-EGRESS -A OUTPUT -o net1 -j MULTI-EGRESS -A MULTI-0-EGRESS -j MARK --set-xmark 0x0/0x30000 -A MULTI-0-EGRESS -j MULTI-0-EGRESS-0-PORTS -A MULTI-0-EGRESS -j MULTI-0-EGRESS-0-TO -A MULTI-0-EGRESS -m mark --mark 0x30000/0x30000 -j RETURN -A MULTI-0-EGRESS -j DROP -A MULTI-0-EGRESS-0-PORTS -o net1 -p tcp -m tcp --dport 22 -j MARK --set-xmark 0x10000/0x10000 -A MULTI-0-EGRESS-0-TO -d 192.168.55.21/32 -o net1 -j MARK --set-xmark 0x20000/0x20000 -A MULTI-0-EGRESS-0-TO -d 192.168.55.22/32 -o net1 -j MARK --set-xmark 0x20000/0x20000 -A MULTI-EGRESS -o net1 -m comment --comment \"policy:mnp-permit-shipcrew net-attach-def:abcdesktop/macvlan-conf-eth3\" -j MULTI-0-EGRESS COMMIT # Completed on Mon Jan 31 16:16:22 2022 # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *nat Add some applications to your desktop For abcdesktop a desktop application is a container image. To add an application you just need to pull an container image. Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash list your docker images root@kmaster:~# docker images REPOSITORY TAG IMAGE ID CREATED SIZE abcdesktopio/oc.pyos dev 6bd8b8d33b73 19 hours ago 1.17GB rancher/mirrored-flannelcni-flannel v0.16.3 8cb5de74f107 3 days ago 59.7MB memcached latest fa6cf68061c2 5 days ago 89.1MB k8s.gcr.io/kube-apiserver v1.23.3 f40be0088a83 6 days ago 135MB k8s.gcr.io/kube-controller-manager v1.23.3 b07520cd7ab7 6 days ago 125MB k8s.gcr.io/kube-scheduler v1.23.3 99a3486be4f2 6 days ago 53.5MB k8s.gcr.io/kube-proxy v1.23.3 9b7cc9982109 6 days ago 112MB abcdesktopio/oc.user.18.04 latest 52176672cf2e 7 days ago 1.79GB abcdesktopio/oc.user.ssh.18.04 dev 52176672cf2e 7 days ago 1.79GB ghcr.io/k8snetworkplumbingwg/multi-networkpolicy-iptables latest 54838d8bbd14 10 days ago 408MB rancher/mirrored-flannelcni-flannel-cni-plugin v1.0.1 ac40ce625740 12 days ago 8.1MB abcdesktopio/oc.nginx dev fe71c8621ef2 12 days ago 506MB abcdesktopio/oc.pulseaudio.18.04 dev d44997a46969 2 months ago 170MB abcdesktopio/oc.pulseaudio.18.04 latest d44997a46969 2 months ago 170MB k8s.gcr.io/etcd 3.5.1-0 25f8c7f3da61 3 months ago 293MB ghcr.io/k8snetworkplumbingwg/multus-cni stable e6cafb5d5aa1 3 months ago 290MB k8s.gcr.io/coredns/coredns v1.8.6 a4ca41631cc7 3 months ago 46.8MB abcdesktopio/oc.cupsd.18.04 dev 095105a59722 4 months ago 745MB abcdesktopio/oc.cupsd.18.04 latest 095105a59722 4 months ago 745MB k8s.gcr.io/pause 3.6 6270bb605e12 5 months ago 683kB rroemhild/test-openldap latest c6b1bec361ca 10 months ago 144MB abcdesktopio/oc.mongo latest 802219537d3b 12 months ago 493MB abcdesktopio/oc.speedtest dev 298a391cfb5b 3 years ago 355MB Add new application images To add an application like Firefox, run the docker pull command : root@kmaster:~# docker pull abcdesktopio/firefox.d:dev docker pull abcdesktopio/firefox.d:dev dev: Pulling from abcdesktopio/firefox.d 7b1a6ab2e44d: Already exists 2371f0a6d5ec: Already exists b55247ebc792: Already exists 38b40dedf719: Already exists a609cdbac5b4: Already exists f2e98da86f69: Already exists 8589cdafb8d3: Already exists f110041cad0c: Already exists 8d2557b365eb: Already exists 0de73c57e07d: Already exists 165ea38f2f53: Already exists 66b43fff8150: Already exists ccc0386d04e3: Already exists 26d822b9fccb: Already exists d489c5be8f43: Already exists c342009660e3: Already exists e2006e25f603: Already exists 612638393a03: Already exists dae51e73d8bc: Already exists 07243e67b561: Pull complete 2ee8a212fe21: Pull complete 19e557a0567c: Pull complete ff417f05521e: Pull complete 539fd422158e: Pull complete ef5cf2280d59: Pull complete 24d2ecc0cc9a: Pull complete 9dc58ab20296: Pull complete aba0cc69761b: Pull complete Digest: sha256:454657f20f7a09d45dc8ac4f4d3263360480c15f69bece280dd06b8d1647ad7f Status: Downloaded newer image for abcdesktopio/firefox.d:dev docker.io/abcdesktopio/firefox.d:dev Reload the web browser page Connect your local abcdesktop Reload or open your web browser http://[your-ip-hostname]:30443/ Firefox is added to your desktop dock. Start Firefox application No rule has be defined to allow http request from your pod to a web site All http requests are denied The firefox application inherits from the pod's the network rules. Troubleshooting If you choose to use VMware instead of VirtualBox hypervisor Notes about the macvlan driver : Macvlan allows you to configure sub-interfaces of a parent, physical Ethernet interface, each with its own unique MAC address , and consequently its own IP address. Applications, VMs and containers can then bind to a specific sub-interface to connect directly to the physical network, using their own MAC and IP address. macvlan driver on vSwitch VMware The security policy of a virtual switch includes a MAC address changes option. This option allows virtual machines to receive frames with a Mac Address that is different from the one configured in the VMX. When the Mac address changes option is set to Accept, ESXi accepts requests to change the effective MAC address of a virtual machine to a different address than the initial MAC address. Set the Mac address changes option is set to Accept","title":"Use abcdesktop as a bastion"},{"location":"common/1.0/abcdesktop.bastion/#setup-guide-to-use-abcdesktopio-as-bastion-service","text":"","title":"Setup guide to use abcdesktop.io as bastion service"},{"location":"common/1.0/abcdesktop.bastion/#design","text":"The goal of this setup guide is to install abcdesktio.io as a bastion service, with only one virtual machine","title":"Design"},{"location":"common/1.0/abcdesktop.bastion/#script-and-vagrant-file","text":"","title":"script and vagrant file"},{"location":"common/1.0/abcdesktop.bastion/#get-script-and-vagrant-file","text":"To get the installation script and the vagrant file, run the command git clone https://github.com/abcdesktopio/vagrant.git The vagrant file name is Vagrantfile.kubernetes.bastion The installation script is abcdesktop_kubernetes_bastion.sh","title":"get script and vagrant file"},{"location":"common/1.0/abcdesktop.bastion/#start-vagrant-file-to-run-the-kmaster-vm","text":"Run the command to run the vagrant file $ cd vagrant $ VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant up This vagrant file defines a vm kmaster : kmaster.vm.box = \"hashicorp/bionic64\" kmaster.vm.hostname = \"kmaster.example.com\" # By default, Vagrant uses a netmask of 255.255.255.0 # config.vm.network :hostonly, \"10.11.12.13\", :netmask => \"255.255.0.0\" kmaster.vm.network \"private_network\", ip: \"172.42.42.100\" kmaster.vm.network \"private_network\", ip: \"10.9.1.100\", virtualbox__intnet: true kmaster.vm.network \"private_network\", ip: \"192.168.29.100\", virtualbox__intnet: true kmaster.vm.network \"forwarded_port\", guest: 30443, host: 30443 kmaster.vm.provider \"virtualbox\" do |v| v.name = \"kmaster\" v.memory = 4096 v.cpus = 4 end kmaster.vm.provision \"shell\", path: \"abcdesktop_kubernetes_bastion.sh\" It forward the host tcp port 30443 to guest port 30443 ( mapped as a host port in kubernetes ) All networks are defined as private_network to make it simplest as possible.","title":"start vagrant file to run the kmaster vm"},{"location":"common/1.0/abcdesktop.bastion/#abcdesktop_kubernetes_bastionsh-description","text":"abcdesktop_kubernetes_bastion.sh takes more than eight minutes to install all services, from an ubuntu bionic 64 hashicorp/bionic64 : kubernetes abcdesktop multus-cni multi-networkpolicy Read step by step the abcdesktop_kubernetes_bastion.sh content to get more details. You can read the vagrant stdout file as example abcdesktop kubernetes bastion install log file","title":"abcdesktop_kubernetes_bastion.sh description"},{"location":"common/1.0/abcdesktop.bastion/#login-to-get-a-ssh-into-the-kmaster-vm","text":"VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh List kube-system pods and abcdesktop pods To run kubectl commands inside the master virtual machine export KUBECONFIG=/etc/kubernetes/admin.conf vagrant@kmaster:~$ kubectl get pods -n kube-system NAME READY STATUS RESTARTS AGE coredns-64897985d-4d57p 1/1 Running 0 11h coredns-64897985d-qtmkq 1/1 Running 0 11h etcd-kmaster 1/1 Running 0 11h kube-apiserver-kmaster 1/1 Running 0 11h kube-controller-manager-kmaster 1/1 Running 0 11h kube-flannel-ds-gskrs 1/1 Running 0 11h kube-proxy-c566l 1/1 Running 0 11h kube-scheduler-kmaster 1/1 Running 0 11h vagrant@kmaster:~$ kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-pt2j6 1/1 Running 0 11h daemonset-pyos-zqpf7 1/1 Running 0 11h memcached-od-78578c879-kstcl 1/1 Running 0 11h mongodb-od-5c68794bb8-wf6sm 1/1 Running 0 11h openldap-od-558f7959d5-vhbln 1/1 Running 0 11h speedtest-od-7b66cc656b-fh97g 1/1 Running 0 11h","title":"login to get a ssh into the kmaster vm"},{"location":"common/1.0/abcdesktop.bastion/#login-as-a-user","text":"","title":"Login as a user"},{"location":"common/1.0/abcdesktop.bastion/#connect-your-local-abcdesktop","text":"Open your web browser to http://[your-ip-hostname]:30443/ Replace [your-ip-hostname] by the host node IP address You should get the web page","title":"Connect your local abcdesktop"},{"location":"common/1.0/abcdesktop.bastion/#log-in-as","text":"abcdesktop adds an OpenLDAP server for testing LDAP applications, i.e. unit tests. The ldap server is used to authenticate user. To get more informations about the OpenLDAP server and the account detail, read ldap server Login Accounts Login Password Hubert J. Farnsworth professor Philip J. Fry fry Hermes Conrad hermes Turanga Leela leela Bender Bending Rodr\u00edguez bende Use the credentials, to login Login Account : Philip J. Fry Login Password : fry","title":"Log in as"},{"location":"common/1.0/abcdesktop.bastion/#get-the-default-desktop","text":"After the login, you should get the default desktop.","title":"Get the default desktop"},{"location":"common/1.0/abcdesktop.bastion/#run-a-web-shell-process","text":"To start a shell, insert webshell as keywords in the search text area :","title":"Run a web shell process"},{"location":"common/1.0/abcdesktop.bastion/#run-ifconfig-command-to-list-network-interfaces","text":"In the web shell, run the command $ ifconfig -a This command shows the network interfaces net1 and net2 with the associated ip address","title":"Run ifconfig command to list network interfaces"},{"location":"common/1.0/abcdesktop.bastion/#tag-and-rules","text":"Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash","title":"Tag and rules"},{"location":"common/1.0/abcdesktop.bastion/#config-file-abcdesktopyaml","text":"Open the abcdesktop.yaml configuration file, and look at ldapconfig ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'openldap.abcdesktop.svc.cluster.local' ], 'secure' : False, 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrew' }, 'rule-test': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'adminstaff' } } } } } openldap.abcdesktop.svc.cluster.local is a local ldap server running as a pod","title":"Config file abcdesktop.yaml"},{"location":"common/1.0/abcdesktop.bastion/#rules-description","text":"'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'shipcrew' } If a user is member of 'cn=ship_crew,ou=people,dc=planetexpress,dc=com' then the label tag shipcrew is set to the user's pod 'rule-admin': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'adminstaff' } If a user is member of 'cn=admin_staff,ou=people,dc=planetexpress,dc=com' then the label tag adminstaff is set to the user's pod In the abcdesktop.yaml configuration file, and look at the desktop.policies and the network option desktop.policies: { 'rules': { 'network': { 'shipcrew': { 'annotations' : { 'k8s.v1.cni.cncf.io/networks': '[ {\"name\":\"macvlan-conf-eth3\"}, { \"name\":\"macvlan-conf-eth2\", \"default-route\": [\"10.9.1.100\"] } ]' } } } }, 'acls' : {} } If a pod as the 'shipcrew' tag, then add the network annotations [ { \"name\": \"macvlan-conf-eth3\"}, { \"name\": \"macvlan-conf-eth2\", \"default-route\": [\"10.9.1.100\"] } ]","title":"Rules description"},{"location":"common/1.0/abcdesktop.bastion/#list-pods-and-labels-in-abcdesktop-namespace","text":"To list pod in the abcdesktop namespace, run the command export KUBECONFIG=/etc/kubernetes/admin.conf kubectl get pods -n abcdesktop root@kmaster:~# export KUBECONFIG=/etc/kubernetes/admin.conf root@kmaster:~# kubectl get pods -n abcdesktop NAME READY STATUS RESTARTS AGE daemonset-nginx-5dzjc 1/1 Running 0 151m daemonset-pyos-szs8h 1/1 Running 0 151m fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 3/3 Running 0 86m memcached-od-78578c879-vx26h 1/1 Running 0 151m mongodb-od-6568f85897-tgfjb 1/1 Running 0 151m openldap-od-558f7959d5-qz2kg 1/1 Running 0 151m speedtest-od-76d578578d-rl8k8 1/1 Running 0 151m","title":"List pods and labels in abcdesktop namespace"},{"location":"common/1.0/abcdesktop.bastion/#describe-pods-fry","text":"Run the command kubectl describe pods YOUR_POD Replace YOUR_POD by your pod root@kmaster:~# kubectl describe pods fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 -n abcdesktop Name: fry-02579a7f-a464-4cdb-bb79-5d4d4a844308 Namespace: abcdesktop Priority: 0 Node: kmaster/10.0.2.15 Start Time: Mon, 31 Jan 2022 16:14:16 +0000 Labels: access_provider=planet access_userid=FRY access_username=philip_j__fry broadcast_cookie=f7ee45615acce9c5fbed2607d35471264d6c6c14b5cd5778 domain=desktop netpol/ocuser=true pulseaudio_cookie=f7cfdfb7b4227e816f3ad59f9d122fac49674a1a60455951 shipcrew=true type=x11server xauthkey=ad9e3675cb184db9b6c9eee4852a94est-od-76d578578d-rl8k8 The label shipcrew=true is set Annotations: k8s.v1.cni.cncf.io/network-status: [{ \"name\": \"cbr0\", \"interface\": \"eth0\", \"ips\": [ \"10.244.0.12\" ], \"mac\": \"06:17:a7:0c:24:9b\", \"default\": true, \"dns\": {} },{ \"name\": \"abcdesktop/macvlan-conf-eth3\", \"interface\": \"net1\", \"ips\": [ \"192.168.29.12\" ], \"mac\": \"3a:db:a1:33:53:72\", \"dns\": {} },{ \"name\": \"abcdesktop/macvlan-conf-eth2\", \"interface\": \"net2\", \"ips\": [ \"10.9.1.12\" ], \"mac\": \"86:eb:43:fe:db:e7\", \"dns\": {} }] The Annotations k8s.v1.cni.cncf.io/network-status describes the network interfaces inside the pod.","title":"Describe pods fry"},{"location":"common/1.0/abcdesktop.bastion/#look-at-the-pre-installed-network-rules","text":"Run the command kubectl get net-attach-def -n abcdesktop root@kmaster:~# kubectl get net-attach-def -n abcdesktop NAME AGE macvlan-conf-eth2 154m macvlan-conf-eth3 154m Get more details about macvlan-conf-eth3 root@kmaster:~# kubectl describe net-attach-def macvlan-conf-eth3 -n abcdesktop Name: macvlan-conf-eth3 Namespace: abcdesktop Labels: <none> Annotations: <none> API Version: k8s.cni.cncf.io/v1 Kind: NetworkAttachmentDefinition Metadata: Creation Timestamp: 2022-01-31T15:10:38Z Generation: 1 Managed Fields: API Version: k8s.cni.cncf.io/v1 Fields Type: FieldsV1 fieldsV1: f:metadata: f:annotations: .: f:kubectl.kubernetes.io/last-applied-configuration: f:spec: .: f:config: Manager: kubectl-client-side-apply Operation: Update Time: 2022-01-31T15:10:38Z Resource Version: 1008 UID: a5b0d3a0-52c4-42da-887b-8de73cff2b1c Spec: Config: { \"cniVersion\": \"0.3.0\", \"type\": \"macvlan\", \"master\": \"eth3\", \"mode\": \"bridge\", \"ipam\": { \"type\": \"host-local\", \"subnet\": \"192.168.29.0/24\", \"rangeStart\": \"192.168.29.10\", \"rangeEnd\": \"192.168.29.99\", \"gateway\": \"192.168.29.100\" } } Events: <none> macvlan-conf-eth3 is used by the user's pod.","title":"Look at the pre installed network rules"},{"location":"common/1.0/abcdesktop.bastion/#list-multi-policy","text":"To list multi-policy, run the command kubectl get multi-policy -n abcdesktop root@kmaster:~# kubectl get multi-policy -n abcdesktop NAME AGE mnp-permit-shipcrew 3h And get description about the policy mnp-permit-shipcrew apiVersion: k8s.cni.cncf.io/v1beta1 kind: MultiNetworkPolicy metadata: name: mnp-permit-shipcrew namespace: abcdesktop annotations: k8s.v1.cni.cncf.io/policy-for: macvlan-conf-eth3 spec: podSelector: matchLabels: shipcrew: 'true' policyTypes: - Egress egress: - to: - ipBlock: cidr: 192.168.55.21/32 - ipBlock: cidr: 192.168.55.22/32 ports: - protocol: TCP port: 22 If a pod in the abcdesktop namespace, contains a label shipcrew: 'true' set the iptables to permit egress to host 192.168.55.21/32 and 192.168.55.22/32 using protocol TCP destination port 22 .","title":"List multi-policy"},{"location":"common/1.0/abcdesktop.bastion/#dump-the-generated-by-iptables-in-varlibmulti-networkpolicyiptables","text":"Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash list the directories /var/lib/multi-networkpolicy/iptables/ in kmaster root@kmaster:~# ls /var/lib/multi-networkpolicy/iptables/ afe82680-77b4-4bac-ad2b-8be9488402fb A new afe82680-77b4-4bac-ad2b-8be9488402fb exists cat the current.iptables file content in the /var/lib/multi-networkpolicy/iptables/ afe82680-77b4-4bac-ad2b-8be9488402fb root@kmaster:~# cat /var/lib/multi-networkpolicy/iptables/afe82680-77b4-4bac-ad2b-8be9488402fb/current.iptables # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *mangle :PREROUTING ACCEPT [441:57462] :INPUT ACCEPT [441:57462] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [370:150632] :POSTROUTING ACCEPT [367:150476] COMMIT # Completed on Mon Jan 31 16:16:22 2022 # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] :MULTI-0-EGRESS - [0:0] :MULTI-0-EGRESS-0-PORTS - [0:0] :MULTI-0-EGRESS-0-TO - [0:0] :MULTI-EGRESS - [0:0] :MULTI-INGRESS - [0:0] -A INPUT -i net2 -j MULTI-INGRESS -A INPUT -i net1 -j MULTI-INGRESS -A OUTPUT -o net2 -j MULTI-EGRESS -A OUTPUT -o net1 -j MULTI-EGRESS -A MULTI-0-EGRESS -j MARK --set-xmark 0x0/0x30000 -A MULTI-0-EGRESS -j MULTI-0-EGRESS-0-PORTS -A MULTI-0-EGRESS -j MULTI-0-EGRESS-0-TO -A MULTI-0-EGRESS -m mark --mark 0x30000/0x30000 -j RETURN -A MULTI-0-EGRESS -j DROP -A MULTI-0-EGRESS-0-PORTS -o net1 -p tcp -m tcp --dport 22 -j MARK --set-xmark 0x10000/0x10000 -A MULTI-0-EGRESS-0-TO -d 192.168.55.21/32 -o net1 -j MARK --set-xmark 0x20000/0x20000 -A MULTI-0-EGRESS-0-TO -d 192.168.55.22/32 -o net1 -j MARK --set-xmark 0x20000/0x20000 -A MULTI-EGRESS -o net1 -m comment --comment \"policy:mnp-permit-shipcrew net-attach-def:abcdesktop/macvlan-conf-eth3\" -j MULTI-0-EGRESS COMMIT # Completed on Mon Jan 31 16:16:22 2022 # Generated by iptables-save v1.4.21 on Mon Jan 31 16:16:22 2022 *nat","title":"dump the generated by iptables in /var/lib/multi-networkpolicy/iptables/"},{"location":"common/1.0/abcdesktop.bastion/#add-some-applications-to-your-desktop","text":"For abcdesktop a desktop application is a container image. To add an application you just need to pull an container image. Login into your kmaster VAGRANT_VAGRANTFILE=Vagrantfile.kubernetes.bastion vagrant ssh Become root into your kmaster vagrant@kmaster:~$ sudo bash list your docker images root@kmaster:~# docker images REPOSITORY TAG IMAGE ID CREATED SIZE abcdesktopio/oc.pyos dev 6bd8b8d33b73 19 hours ago 1.17GB rancher/mirrored-flannelcni-flannel v0.16.3 8cb5de74f107 3 days ago 59.7MB memcached latest fa6cf68061c2 5 days ago 89.1MB k8s.gcr.io/kube-apiserver v1.23.3 f40be0088a83 6 days ago 135MB k8s.gcr.io/kube-controller-manager v1.23.3 b07520cd7ab7 6 days ago 125MB k8s.gcr.io/kube-scheduler v1.23.3 99a3486be4f2 6 days ago 53.5MB k8s.gcr.io/kube-proxy v1.23.3 9b7cc9982109 6 days ago 112MB abcdesktopio/oc.user.18.04 latest 52176672cf2e 7 days ago 1.79GB abcdesktopio/oc.user.ssh.18.04 dev 52176672cf2e 7 days ago 1.79GB ghcr.io/k8snetworkplumbingwg/multi-networkpolicy-iptables latest 54838d8bbd14 10 days ago 408MB rancher/mirrored-flannelcni-flannel-cni-plugin v1.0.1 ac40ce625740 12 days ago 8.1MB abcdesktopio/oc.nginx dev fe71c8621ef2 12 days ago 506MB abcdesktopio/oc.pulseaudio.18.04 dev d44997a46969 2 months ago 170MB abcdesktopio/oc.pulseaudio.18.04 latest d44997a46969 2 months ago 170MB k8s.gcr.io/etcd 3.5.1-0 25f8c7f3da61 3 months ago 293MB ghcr.io/k8snetworkplumbingwg/multus-cni stable e6cafb5d5aa1 3 months ago 290MB k8s.gcr.io/coredns/coredns v1.8.6 a4ca41631cc7 3 months ago 46.8MB abcdesktopio/oc.cupsd.18.04 dev 095105a59722 4 months ago 745MB abcdesktopio/oc.cupsd.18.04 latest 095105a59722 4 months ago 745MB k8s.gcr.io/pause 3.6 6270bb605e12 5 months ago 683kB rroemhild/test-openldap latest c6b1bec361ca 10 months ago 144MB abcdesktopio/oc.mongo latest 802219537d3b 12 months ago 493MB abcdesktopio/oc.speedtest dev 298a391cfb5b 3 years ago 355MB Add new application images To add an application like Firefox, run the docker pull command : root@kmaster:~# docker pull abcdesktopio/firefox.d:dev docker pull abcdesktopio/firefox.d:dev dev: Pulling from abcdesktopio/firefox.d 7b1a6ab2e44d: Already exists 2371f0a6d5ec: Already exists b55247ebc792: Already exists 38b40dedf719: Already exists a609cdbac5b4: Already exists f2e98da86f69: Already exists 8589cdafb8d3: Already exists f110041cad0c: Already exists 8d2557b365eb: Already exists 0de73c57e07d: Already exists 165ea38f2f53: Already exists 66b43fff8150: Already exists ccc0386d04e3: Already exists 26d822b9fccb: Already exists d489c5be8f43: Already exists c342009660e3: Already exists e2006e25f603: Already exists 612638393a03: Already exists dae51e73d8bc: Already exists 07243e67b561: Pull complete 2ee8a212fe21: Pull complete 19e557a0567c: Pull complete ff417f05521e: Pull complete 539fd422158e: Pull complete ef5cf2280d59: Pull complete 24d2ecc0cc9a: Pull complete 9dc58ab20296: Pull complete aba0cc69761b: Pull complete Digest: sha256:454657f20f7a09d45dc8ac4f4d3263360480c15f69bece280dd06b8d1647ad7f Status: Downloaded newer image for abcdesktopio/firefox.d:dev docker.io/abcdesktopio/firefox.d:dev","title":"Add some applications to your desktop"},{"location":"common/1.0/abcdesktop.bastion/#reload-the-web-browser-page","text":"","title":"Reload the web browser page"},{"location":"common/1.0/abcdesktop.bastion/#connect-your-local-abcdesktop_1","text":"Reload or open your web browser http://[your-ip-hostname]:30443/ Firefox is added to your desktop dock. Start Firefox application No rule has be defined to allow http request from your pod to a web site All http requests are denied The firefox application inherits from the pod's the network rules.","title":"Connect your local abcdesktop"},{"location":"common/1.0/abcdesktop.bastion/#troubleshooting","text":"If you choose to use VMware instead of VirtualBox hypervisor","title":"Troubleshooting"},{"location":"common/1.0/abcdesktop.bastion/#notes-about-the-macvlan-driver","text":"Macvlan allows you to configure sub-interfaces of a parent, physical Ethernet interface, each with its own unique MAC address , and consequently its own IP address. Applications, VMs and containers can then bind to a specific sub-interface to connect directly to the physical network, using their own MAC and IP address.","title":"Notes about the macvlan driver :"},{"location":"common/1.0/abcdesktop.bastion/#macvlan-driver-on-vswitch-vmware","text":"The security policy of a virtual switch includes a MAC address changes option. This option allows virtual machines to receive frames with a Mac Address that is different from the one configured in the VMX. When the Mac address changes option is set to Accept, ESXi accepts requests to change the effective MAC address of a virtual machine to a different address than the initial MAC address. Set the Mac address changes option is set to Accept","title":"macvlan driver on vSwitch VMware"},{"location":"common/1.0/docker_macvlan/","text":"Using docker network for an application Requirements Goals Use a dedicated network for an application. For example bind the application Firefox to a dedicated docker network. This dedicated network can use macvlan, ipvlan or an SRIOV network driver. Architecture When abcdesktop create a docker container, abcdesktop can set a dedicated network for this container. Create a dedicated network for your application On your worker nodes : create a dedicated network interface to bridge the new network interface add the label abcdesktop=true to the network object You have to choose a nework driver for example network driver macvlan ipvlan docker-sriov-plugin Only the name of the network is used by abcdesktop. Create a network with macvlan or ipvlan driver In these two examples : Subnet is 192.168.8.0/24 Gateway is 192.168.8.254 Ip Range is 192.168.8.0/27 Example with macvlan : Create a network abcnetfirefox with the driver macvlan and bridge the network interface eno1 with the vlan 123 docker network create --label type=oc.app -d macvlan --subnet=192.168.8.0/24 --gateway=192.168.8.254 --ip-range=192.168.8.0/27 -o parent=eno1.123 abcnetfirefox Example with ipvlan ipvlan_mode=l2 : Create a network abcnetfirefox with the driver ipvlan with ipvlan_mode=l2 option and bridge the network interface eno1 with the vlan 123. docker network create --label type=oc.app -d ipvlan -o ipvlan_mode=l2 --subnet=192.168.8.0/24 --gateway=192.168.8.254 --ip-range=192.168.8.0/27 -o parent=eno1.123 abcnetfirefox Test your new network ( macvlan or ipvlan ): Make sure that's you can reach the default gateway and the dns server for container. In this example, just start a busybox to : ping the default gateway nslookup to query www.google.com ip address export GATEWAY=192.168.8.254 docker run --rm --network abcnetfirefox busybox ping $GATEWAY # Google\u2019s public DNS server 8.8.8.8 is added docker run --rm --network abcnetfirefox --dns 8.8.8.8 busybox ping www.google.com Applications rules Update your applist.json file and add a specific rule into the firefox application description git clone https://github.com/abcdesktopio/oc.apps.git cd oc.apps Specific rules entry example \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } }, In this example, if the current user token contains the tag label internet when the firefox application use abcnetfirefox and the dns 8.8.8.8 Edit the applist.json file Edit the applist.json file, and add rules to the application firefox for example The new firefox dictionary with rules : { \"cat\": \"office\", \"preruncommands\": [ \"RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections\", \"RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean\", \"COPY composer/init.d/init.firefox /composer/init.d/init.firefox\", \"COPY policies.json /usr/lib/firefox/distribution\", \"COPY /ntlm_auth /usr/bin/ntlm_auth.abcdesktop\", \"RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.abcdesktop\", \"ENV NSS_SDB_USE_CACHE=yes\" ], \"debpackage\": \"\", \"icon\": \"firefox.svg\", \"keyword\": \"firefox,mozilla,web,internet\", \"launch\": \"Navigator.Firefox\", \"name\": \"Firefox\", \"displayname\": \"Firefox\", \"showinview\": \"dock\", \"splash\": \"enable\", \"mem_limit\": \"16gb\", \"oomkilldisable\": true, \"path\": \"/usr/bin/firefox\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"legacyfileextensions\": \"htm;html;xml\", \"fileextensions\": \"htm;html;xml;gif\", \"desktopfile\":\"/usr/share/applications/firefox.desktop\", \"shm_size\": \"2gb\", \"usedefaultapplication\": true, \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } } Save your changes, and run make dockerfile , next docker build Build and update your new firefox application # create the Dockerfile firefox.d make dockerfile # build the new image docker build -f firefox.d -t firefox.d . Check that the oc.rules label in new firefox.d image docker inspect firefox.d The oc.rules label is a string json formated \"oc.rules\": \"{\\\"homedir\\\":{\\\"default\\\":true,\\\"ship\\\":true},\\\"network\\\":{\\\"default\\\":false,\\\"internet\\\":{\\\"name\\\":\\\"abcnetfirefox\\\",\\\"dns\\\":[\\\"8.8.8.8\\\"]}}}\" Add tag the user auth Add a tag internet to the user auth provider Update authprovider in od.config file Update the ldapconfig for planet with the new policies dict 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'internet' }, The complete ldapconfig for planet is ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.7.69' ], 'secure' : False, 'auth_protocol' : { 'ntlm': True, 'cntlm': False, 'kerberos': False, 'citrix': False}, 'citrix_all_regions' : 'Hello, {{ domain }}\\\\{{ user }}:{{ password }}', 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'internet' } } } } } Restart your kubernetes pyos pod, to reload new the od.config configuration file. Use the Philip J. Fry user context. Open a web browser, go to the abcdesktop login page. Login Accounts Login Password Philip J. Fry. fry Hubert J. Farnsworth professor Note: the user Philip J. Fry is member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Note: the user Hubert J. Farnsworth is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Login as the Philip J. Fry user account. During the user login process, pyos tag the user authentification with the 'label': 'internet' Start the new application firefox , the docker network for this application use the abcnetfirefox Run the command docker network inspect abcnetfirefox abcdesktop start a new container \"Name\": \"philip-j--fry-firefox-d2c22d9912fc4a489a1224237af9a3e0\" and bind the abcnetfirefox to user container. [ { \"Name\": \"abcnetfirefox\", \"Id\": \"69c5ac0996226654635377458c044675114d5feb742a8a56d8a228180829d9cd\", \"Created\": \"2021-02-05T16:24:41.781733948+01:00\", \"Scope\": \"local\", \"Driver\": \"macvlan\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"192.168.8.0/24\", \"Gateway\": \"192.168.8.254\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": { \"05f88ee41055b209e7599a455705088cf633f6458313508ce867d13b8d39014a\": { \"Name\": \"philip-j--fry-firefox-d2c22d9912fc4a489a1224237af9a3e0\", \"EndpointID\": \"ae0271ed73aa5478ac364444b29342278b82bc710bd4e4eeb64a51d7eeec4d9c\", \"MacAddress\": \"02:42:a1:69:d0:82\", \"IPv4Address\": \"192.168.8.1/24\", \"IPv6Address\": \"\" } }, \"Options\": { \"parent\": \"eno1.106\" }, \"Labels\": { \"type\": \"oc.app\" } } ] Close the firefox application. Logoff, to remove the user pod Philip J. Fry . Use the `Hubert J. Farnsworth user context. Login as the Hubert J. Farnsworth user account. Note: the user Hubert J. Farnsworth is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Start the new application firefox , the docker network for this application do NOT use the abcnetfirefox Run the command docker network inspect abcnetfirefox abcnetfirefox description : docker network inspect abcnetfirefox [ { \"Name\": \"abcnetfirefox\", \"Id\": \"69c5ac0996226654635377458c044675114d5feb742a8a56d8a228180829d9cd\", \"Created\": \"2021-02-05T16:24:41.781733948+01:00\", \"Scope\": \"local\", \"Driver\": \"macvlan\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"192.168.8.0/24\", \"Gateway\": \"192.168.8.254\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": {}, \"Options\": { \"parent\": \"eno1.106\" }, \"Labels\": { \"type\": \"oc.app\" } } ] The new firefox container doesn't use the docker network abcnetfirefox , because the Hubert J. Farnsworth user account is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com The network is disabled by default. Inspect the Hubert J. Farnsworth firefox container \"NetworkSettings\": { \"Bridge\": \"\", \"SandboxID\": \"\", \"HairpinMode\": false, \"LinkLocalIPv6Address\": \"\", \"LinkLocalIPv6PrefixLen\": 0, \"Ports\": {}, \"SandboxKey\": \"\", \"SecondaryIPAddresses\": null, \"SecondaryIPv6Addresses\": null, \"EndpointID\": \"\", \"Gateway\": \"\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"IPAddress\": \"\", \"IPPrefixLen\": 0, \"IPv6Gateway\": \"\", \"MacAddress\": \"\", \"Networks\": {} } The network access is disable for this application \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } In this case, only users with the label tag internet , can bind the network name abcnetfirefox . Enable network for Hubert J. Farnsworth Update the application firefox rules Now it's time to permit network access to Update the applist.json file : Specific rules entry example \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": true, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } }, The new firefox dictionary with network rules set with \"default\": true : { \"cat\": \"office\", \"preruncommands\": [ \"RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections\", \"RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean\", \"COPY composer/init.d/init.firefox /composer/init.d/init.firefox\", \"COPY policies.json /usr/lib/firefox/distribution\", \"COPY /ntlm_auth /usr/bin/ntlm_auth.abcdesktop\", \"RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.abcdesktop\", \"ENV NSS_SDB_USE_CACHE=yes\" ], \"debpackage\": \"\", \"icon\": \"firefox.svg\", \"keyword\": \"firefox,mozilla,web,internet\", \"launch\": \"Navigator.Firefox\", \"name\": \"Firefox\", \"displayname\": \"Firefox\", \"showinview\": \"dock\", \"splash\": \"enable\", \"mem_limit\": \"16gb\", \"oomkilldisable\": true, \"path\": \"/usr/bin/firefox\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"legacyfileextensions\": \"htm;html;xml\", \"fileextensions\": \"htm;html;xml;gif\", \"desktopfile\":\"/usr/share/applications/firefox.desktop\", \"shm_size\": \"2gb\", \"usedefaultapplication\": true, \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": true, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } } Save your changes, and run make dockerfile , next docker build Build and update your new firefox application # create the Dockerfile firefox.d make dockerfile # build the new image docker build -f firefox.d -t firefox.d . Check that the oc.rules label in new firefox.d image docker inspect firefox.d The oc.rules label is a string json formated \"oc.rules\": \"{\\\"homedir\\\":{\\\"default\\\":true,\\\"ship\\\":true},\\\"network\\\":{\\\"default\\\":true,\\\"internet\\\":{\\\"name\\\":\\\"abcnetfirefox\\\",\\\"dns\\\":[\\\"8.8.8.8\\\"]}}}\", Request the abcdesktop core service to update the application cache data Replace MY_FQDN by your own hostname export MY_FQDN=localhost curl http://$MY_FQDN/API/manager/buildapplist You do not need to logoff the Hubert J. Farnsworth , just close Firefox application and start it again. The new firefox container use the default network. Now default user has a network access, and member of cn=ship_crew,ou=people,dc=planetexpress,dc=com use the abcnetfirefox network. Webhook events create and destroy application A rule support a specific bash command to notify external security equipment like firewalls, by sending create and destroy events. \"rules\": { \"homedir\": { \"default\": false, \"ship\": true }, \"network\": { \"default\": false, \"ship\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ], \"webhook\": { \"create\": \"/usr/bin/curl 'http://firewall.domain.local/update?action=create&key={{ key }}&name={{ name }}&ip={{ container_ip }}'\", \"destroy\": \"/usr/bin/curl 'http://firewall.domain.local/update?action=destroy&key={{ key }}&name={{ name }}&ip={{ container_ip }}'\" } } } } When a new docker container is created, the control plane pyos execute the command /usr/bin/curl 'http://firewall.domain.local/update?action=create&key={{ key }}&name={{ name }}&ip={{ container_ip }} When a new docker container is destoyed, the control plane pyos call the url /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&key={{ key }}&name={{ name }}&ip={{ container_ip }}' Each {{ $label }} is a mustached value. Label name description example container_ip container ip addr 192.168.8.130 provider authentification provider name planet providertype authentification provider type ldap userid authentification provider user id fry name username Philip J. Fry sha_id sha of the container image sha256%3A5c754563b357bfde4a3762728c686fe0001d10e43835b9468d5218e663b844e8 id name of the application image abcdesktopio/firefox-esr.d:dev launch WM_CLASS of the X11 application Navigator.Firefox icon icon file name firefox.svg keyword docker image label keywords firefox mozilla web internet cat docker image label category office displayname docker image label displayname Firefox-esr path binary path of the application /usr/bin/firefox-esr desktopfile desktop filename of the application firefox.desktop executablefilename binary file name of the application firefox-esr locale user current locale settings en_US Events : create event: The control plane pyos replace the mustached url string /usr/bin/curl 'http://firewall.domain.local/update?action=create&name={{ name }}&ip={{ container_ip }}' as /usr/bin/curl 'http://firewall.domain.local/update?action=create&name=Philip%20J.%20Fry&ip=192.168.8.130' destroy event: The control plane pyos replace the mustached url string /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&name={{ name }}&ip={{ container_ip }}' as /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&name=Philip%20J.%20Fry&ip=192.168.8.130' desktop.webhook options in od.config file url encoding parameters To encode url parameters use the option desktop.webhookencodeparams . Set desktop.webhookencodeparams to True to encode label name. The default value is False additional dict datas Additional datas can be set using the desktop.webhookdict option in od.config file desktop.webhookdict: { 'api_key': 'supersecret', 'firewall_manage_ip': '161.105.208.129' } The command line /usr/bin/curl 'http://{{ firewall_manage_ip }}/update?action=destroy&key={{ api_key }}&name={{ name }}&ip={{ container_ip }}' becomes /usr/bin/curl 'http://161.105.208.129/update?action=destroy&key=supersecret&name={{ name }}&ip={{ container_ip }}'","title":"Bind a specific docker network for an application"},{"location":"common/1.0/docker_macvlan/#using-docker-network-for-an-application","text":"","title":"Using docker network for an application"},{"location":"common/1.0/docker_macvlan/#requirements","text":"","title":"Requirements"},{"location":"common/1.0/docker_macvlan/#goals","text":"Use a dedicated network for an application. For example bind the application Firefox to a dedicated docker network. This dedicated network can use macvlan, ipvlan or an SRIOV network driver.","title":"Goals"},{"location":"common/1.0/docker_macvlan/#architecture","text":"When abcdesktop create a docker container, abcdesktop can set a dedicated network for this container.","title":"Architecture"},{"location":"common/1.0/docker_macvlan/#create-a-dedicated-network-for-your-application","text":"On your worker nodes : create a dedicated network interface to bridge the new network interface add the label abcdesktop=true to the network object You have to choose a nework driver for example network driver macvlan ipvlan docker-sriov-plugin Only the name of the network is used by abcdesktop. Create a network with macvlan or ipvlan driver In these two examples : Subnet is 192.168.8.0/24 Gateway is 192.168.8.254 Ip Range is 192.168.8.0/27","title":"Create a dedicated network for your application"},{"location":"common/1.0/docker_macvlan/#example-with-macvlan","text":"Create a network abcnetfirefox with the driver macvlan and bridge the network interface eno1 with the vlan 123 docker network create --label type=oc.app -d macvlan --subnet=192.168.8.0/24 --gateway=192.168.8.254 --ip-range=192.168.8.0/27 -o parent=eno1.123 abcnetfirefox","title":"Example with macvlan :"},{"location":"common/1.0/docker_macvlan/#example-with-ipvlan-ipvlan_model2","text":"Create a network abcnetfirefox with the driver ipvlan with ipvlan_mode=l2 option and bridge the network interface eno1 with the vlan 123. docker network create --label type=oc.app -d ipvlan -o ipvlan_mode=l2 --subnet=192.168.8.0/24 --gateway=192.168.8.254 --ip-range=192.168.8.0/27 -o parent=eno1.123 abcnetfirefox","title":"Example with ipvlan ipvlan_mode=l2 :"},{"location":"common/1.0/docker_macvlan/#test-your-new-network-macvlan-or-ipvlan","text":"Make sure that's you can reach the default gateway and the dns server for container. In this example, just start a busybox to : ping the default gateway nslookup to query www.google.com ip address export GATEWAY=192.168.8.254 docker run --rm --network abcnetfirefox busybox ping $GATEWAY # Google\u2019s public DNS server 8.8.8.8 is added docker run --rm --network abcnetfirefox --dns 8.8.8.8 busybox ping www.google.com","title":"Test your new network (macvlan or ipvlan):"},{"location":"common/1.0/docker_macvlan/#applications-rules","text":"Update your applist.json file and add a specific rule into the firefox application description git clone https://github.com/abcdesktopio/oc.apps.git cd oc.apps Specific rules entry example \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } }, In this example, if the current user token contains the tag label internet when the firefox application use abcnetfirefox and the dns 8.8.8.8","title":"Applications rules"},{"location":"common/1.0/docker_macvlan/#edit-the-applistjson-file","text":"Edit the applist.json file, and add rules to the application firefox for example The new firefox dictionary with rules : { \"cat\": \"office\", \"preruncommands\": [ \"RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections\", \"RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean\", \"COPY composer/init.d/init.firefox /composer/init.d/init.firefox\", \"COPY policies.json /usr/lib/firefox/distribution\", \"COPY /ntlm_auth /usr/bin/ntlm_auth.abcdesktop\", \"RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.abcdesktop\", \"ENV NSS_SDB_USE_CACHE=yes\" ], \"debpackage\": \"\", \"icon\": \"firefox.svg\", \"keyword\": \"firefox,mozilla,web,internet\", \"launch\": \"Navigator.Firefox\", \"name\": \"Firefox\", \"displayname\": \"Firefox\", \"showinview\": \"dock\", \"splash\": \"enable\", \"mem_limit\": \"16gb\", \"oomkilldisable\": true, \"path\": \"/usr/bin/firefox\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"legacyfileextensions\": \"htm;html;xml\", \"fileextensions\": \"htm;html;xml;gif\", \"desktopfile\":\"/usr/share/applications/firefox.desktop\", \"shm_size\": \"2gb\", \"usedefaultapplication\": true, \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } } Save your changes, and run make dockerfile , next docker build Build and update your new firefox application # create the Dockerfile firefox.d make dockerfile # build the new image docker build -f firefox.d -t firefox.d . Check that the oc.rules label in new firefox.d image docker inspect firefox.d The oc.rules label is a string json formated \"oc.rules\": \"{\\\"homedir\\\":{\\\"default\\\":true,\\\"ship\\\":true},\\\"network\\\":{\\\"default\\\":false,\\\"internet\\\":{\\\"name\\\":\\\"abcnetfirefox\\\",\\\"dns\\\":[\\\"8.8.8.8\\\"]}}}\"","title":"Edit the applist.json file"},{"location":"common/1.0/docker_macvlan/#add-tag-the-user-auth","text":"Add a tag internet to the user auth provider","title":"Add tag the user auth"},{"location":"common/1.0/docker_macvlan/#update-authprovider-in-odconfig-file","text":"Update the ldapconfig for planet with the new policies dict 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'internet' }, The complete ldapconfig for planet is ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ '192.168.7.69' ], 'secure' : False, 'auth_protocol' : { 'ntlm': True, 'cntlm': False, 'kerberos': False, 'citrix': False}, 'citrix_all_regions' : 'Hello, {{ domain }}\\\\{{ user }}:{{ password }}', 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-ship': { 'conditions' : [ { 'memberOf': 'cn=ship_crew,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'internet' } } } } } Restart your kubernetes pyos pod, to reload new the od.config configuration file.","title":"Update authprovider in od.config file"},{"location":"common/1.0/docker_macvlan/#use-the-philip-j-fry-user-context","text":"Open a web browser, go to the abcdesktop login page. Login Accounts Login Password Philip J. Fry. fry Hubert J. Farnsworth professor Note: the user Philip J. Fry is member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Note: the user Hubert J. Farnsworth is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Login as the Philip J. Fry user account. During the user login process, pyos tag the user authentification with the 'label': 'internet' Start the new application firefox , the docker network for this application use the abcnetfirefox Run the command docker network inspect abcnetfirefox abcdesktop start a new container \"Name\": \"philip-j--fry-firefox-d2c22d9912fc4a489a1224237af9a3e0\" and bind the abcnetfirefox to user container. [ { \"Name\": \"abcnetfirefox\", \"Id\": \"69c5ac0996226654635377458c044675114d5feb742a8a56d8a228180829d9cd\", \"Created\": \"2021-02-05T16:24:41.781733948+01:00\", \"Scope\": \"local\", \"Driver\": \"macvlan\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"192.168.8.0/24\", \"Gateway\": \"192.168.8.254\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": { \"05f88ee41055b209e7599a455705088cf633f6458313508ce867d13b8d39014a\": { \"Name\": \"philip-j--fry-firefox-d2c22d9912fc4a489a1224237af9a3e0\", \"EndpointID\": \"ae0271ed73aa5478ac364444b29342278b82bc710bd4e4eeb64a51d7eeec4d9c\", \"MacAddress\": \"02:42:a1:69:d0:82\", \"IPv4Address\": \"192.168.8.1/24\", \"IPv6Address\": \"\" } }, \"Options\": { \"parent\": \"eno1.106\" }, \"Labels\": { \"type\": \"oc.app\" } } ] Close the firefox application. Logoff, to remove the user pod Philip J. Fry .","title":"Use the Philip J. Fry user context."},{"location":"common/1.0/docker_macvlan/#use-the-hubert-j-farnsworth-user-context","text":"Login as the Hubert J. Farnsworth user account. Note: the user Hubert J. Farnsworth is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com Start the new application firefox , the docker network for this application do NOT use the abcnetfirefox Run the command docker network inspect abcnetfirefox abcnetfirefox description : docker network inspect abcnetfirefox [ { \"Name\": \"abcnetfirefox\", \"Id\": \"69c5ac0996226654635377458c044675114d5feb742a8a56d8a228180829d9cd\", \"Created\": \"2021-02-05T16:24:41.781733948+01:00\", \"Scope\": \"local\", \"Driver\": \"macvlan\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"192.168.8.0/24\", \"Gateway\": \"192.168.8.254\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": {}, \"Options\": { \"parent\": \"eno1.106\" }, \"Labels\": { \"type\": \"oc.app\" } } ] The new firefox container doesn't use the docker network abcnetfirefox , because the Hubert J. Farnsworth user account is NOT member of cn=ship_crew,ou=people,dc=planetexpress,dc=com The network is disabled by default. Inspect the Hubert J. Farnsworth firefox container \"NetworkSettings\": { \"Bridge\": \"\", \"SandboxID\": \"\", \"HairpinMode\": false, \"LinkLocalIPv6Address\": \"\", \"LinkLocalIPv6PrefixLen\": 0, \"Ports\": {}, \"SandboxKey\": \"\", \"SecondaryIPAddresses\": null, \"SecondaryIPv6Addresses\": null, \"EndpointID\": \"\", \"Gateway\": \"\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"IPAddress\": \"\", \"IPPrefixLen\": 0, \"IPv6Gateway\": \"\", \"MacAddress\": \"\", \"Networks\": {} } The network access is disable for this application \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": false, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } In this case, only users with the label tag internet , can bind the network name abcnetfirefox .","title":"Use the `Hubert J. Farnsworth user context."},{"location":"common/1.0/docker_macvlan/#enable-network-for-hubert-j-farnsworth","text":"Update the application firefox rules Now it's time to permit network access to Update the applist.json file : Specific rules entry example \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": true, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } }, The new firefox dictionary with network rules set with \"default\": true : { \"cat\": \"office\", \"preruncommands\": [ \"RUN DEBIAN_FRONTEND=noninteractive echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections\", \"RUN apt-get update && apt-get install --no-install-recommends --yes ttf-mscorefonts-installer ttf-bitstream-vera ttf-dejavu ttf-xfree86-nonfree && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes winbind firefox $(apt-cache search firefox-locale | awk '{print $1 }') && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes flashplugin-installer ubuntu-restricted-extras libavc1394-0 && apt-get clean\", \"RUN apt-get update && apt-get install --no-install-recommends --yes libasound2-plugins libgail-common libgtk2.0-bin chromium-codecs-ffmpeg-extra gstreamer1.0-libav gstreamer1.0-plugins-ugly gstreamer1.0-vaapi libavcodec-extra && apt-get clean\", \"COPY composer/init.d/init.firefox /composer/init.d/init.firefox\", \"COPY policies.json /usr/lib/firefox/distribution\", \"COPY /ntlm_auth /usr/bin/ntlm_auth.abcdesktop\", \"RUN chown root:root /usr/bin/ntlm_auth.desktop && chmod 111 /usr/bin/ntlm_auth.abcdesktop\", \"ENV NSS_SDB_USE_CACHE=yes\" ], \"debpackage\": \"\", \"icon\": \"firefox.svg\", \"keyword\": \"firefox,mozilla,web,internet\", \"launch\": \"Navigator.Firefox\", \"name\": \"Firefox\", \"displayname\": \"Firefox\", \"showinview\": \"dock\", \"splash\": \"enable\", \"mem_limit\": \"16gb\", \"oomkilldisable\": true, \"path\": \"/usr/bin/firefox\", \"template\": \"abcdesktopio/oc.template.gtk\", \"mimetype\": \"text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;video/webm;application/x-xpinstall;\", \"legacyfileextensions\": \"htm;html;xml\", \"fileextensions\": \"htm;html;xml;gif\", \"desktopfile\":\"/usr/share/applications/firefox.desktop\", \"shm_size\": \"2gb\", \"usedefaultapplication\": true, \"rules\": { \"homedir\": { \"default\": true, \"ship\": true }, \"network\": { \"default\": true, \"internet\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ] } } } } Save your changes, and run make dockerfile , next docker build Build and update your new firefox application # create the Dockerfile firefox.d make dockerfile # build the new image docker build -f firefox.d -t firefox.d . Check that the oc.rules label in new firefox.d image docker inspect firefox.d The oc.rules label is a string json formated \"oc.rules\": \"{\\\"homedir\\\":{\\\"default\\\":true,\\\"ship\\\":true},\\\"network\\\":{\\\"default\\\":true,\\\"internet\\\":{\\\"name\\\":\\\"abcnetfirefox\\\",\\\"dns\\\":[\\\"8.8.8.8\\\"]}}}\", Request the abcdesktop core service to update the application cache data Replace MY_FQDN by your own hostname export MY_FQDN=localhost curl http://$MY_FQDN/API/manager/buildapplist You do not need to logoff the Hubert J. Farnsworth , just close Firefox application and start it again. The new firefox container use the default network. Now default user has a network access, and member of cn=ship_crew,ou=people,dc=planetexpress,dc=com use the abcnetfirefox network.","title":"Enable network for Hubert J. Farnsworth"},{"location":"common/1.0/docker_macvlan/#webhook-events-create-and-destroy-application","text":"A rule support a specific bash command to notify external security equipment like firewalls, by sending create and destroy events. \"rules\": { \"homedir\": { \"default\": false, \"ship\": true }, \"network\": { \"default\": false, \"ship\": { \"name\": \"abcnetfirefox\", \"dns\": [ \"8.8.8.8\" ], \"webhook\": { \"create\": \"/usr/bin/curl 'http://firewall.domain.local/update?action=create&key={{ key }}&name={{ name }}&ip={{ container_ip }}'\", \"destroy\": \"/usr/bin/curl 'http://firewall.domain.local/update?action=destroy&key={{ key }}&name={{ name }}&ip={{ container_ip }}'\" } } } } When a new docker container is created, the control plane pyos execute the command /usr/bin/curl 'http://firewall.domain.local/update?action=create&key={{ key }}&name={{ name }}&ip={{ container_ip }} When a new docker container is destoyed, the control plane pyos call the url /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&key={{ key }}&name={{ name }}&ip={{ container_ip }}' Each {{ $label }} is a mustached value. Label name description example container_ip container ip addr 192.168.8.130 provider authentification provider name planet providertype authentification provider type ldap userid authentification provider user id fry name username Philip J. Fry sha_id sha of the container image sha256%3A5c754563b357bfde4a3762728c686fe0001d10e43835b9468d5218e663b844e8 id name of the application image abcdesktopio/firefox-esr.d:dev launch WM_CLASS of the X11 application Navigator.Firefox icon icon file name firefox.svg keyword docker image label keywords firefox mozilla web internet cat docker image label category office displayname docker image label displayname Firefox-esr path binary path of the application /usr/bin/firefox-esr desktopfile desktop filename of the application firefox.desktop executablefilename binary file name of the application firefox-esr locale user current locale settings en_US","title":"Webhook events create and destroy application"},{"location":"common/1.0/docker_macvlan/#events","text":"","title":"Events :"},{"location":"common/1.0/docker_macvlan/#create-event","text":"The control plane pyos replace the mustached url string /usr/bin/curl 'http://firewall.domain.local/update?action=create&name={{ name }}&ip={{ container_ip }}' as /usr/bin/curl 'http://firewall.domain.local/update?action=create&name=Philip%20J.%20Fry&ip=192.168.8.130'","title":"create event:"},{"location":"common/1.0/docker_macvlan/#destroy-event","text":"The control plane pyos replace the mustached url string /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&name={{ name }}&ip={{ container_ip }}' as /usr/bin/curl 'http://firewall.domain.local/update?action=destroy&name=Philip%20J.%20Fry&ip=192.168.8.130'","title":"destroy event:"},{"location":"common/1.0/docker_macvlan/#desktopwebhook-options-in-odconfig-file","text":"","title":"desktop.webhook options in od.config file"},{"location":"common/1.0/docker_macvlan/#url-encoding-parameters","text":"To encode url parameters use the option desktop.webhookencodeparams . Set desktop.webhookencodeparams to True to encode label name. The default value is False","title":"url encoding parameters"},{"location":"common/1.0/docker_macvlan/#additional-dict-datas","text":"Additional datas can be set using the desktop.webhookdict option in od.config file desktop.webhookdict: { 'api_key': 'supersecret', 'firewall_manage_ip': '161.105.208.129' } The command line /usr/bin/curl 'http://{{ firewall_manage_ip }}/update?action=destroy&key={{ api_key }}&name={{ name }}&ip={{ container_ip }}' becomes /usr/bin/curl 'http://161.105.208.129/update?action=destroy&key=supersecret&name={{ name }}&ip={{ container_ip }}'","title":"additional dict datas"},{"location":"common/1.0/userdatapersistence/","text":"User data persistence in release 1.x configuration Requirements Use a Kubernetes abcdesktop instance Goals keep user's data after a logoff Create /mnt/abcdesktop directory Create a directory /mnt/abcdesktop mkdir -p /mnt/abcdesktop abcdesktop uses a PersistentVolume to store user data. Remove previous PersistentVolume and PersistentVolumeClaim kubectl delete pvc persistentvolumeclaim-home-directory -n abcdesktop kubectl delete pv pv-volume-home-directory -n abcdesktop You have to delete user's pod too. Make sure that all user's pod have been removed. Create the PersistentVolume pv-volume-home-directory kubectl create -f - <<EOF apiVersion: v1 kind: PersistentVolume metadata: name: pv-volume-home-directory namespace: abcdesktop labels: type: local spec: storageClassName: storage-local-abcdesktop capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany hostPath: path: '/mnt/abcdesktop' EOF You should read on stdout : persistentvolume/pv-volume-home-directory created Create the PersistentVolumeClaim persistentvolumeclaim-home-directory kubectl create -f - <<EOF kind: PersistentVolumeClaim apiVersion: v1 metadata: name: persistentvolumeclaim-home-directory namespace: abcdesktop spec: storageClassName: storage-local-abcdesktop accessModes: - ReadWriteMany resources: requests: storage: 3Gi EOF You should read on stdout : persistentvolumeclaim/persistentvolumeclaim-home-directory created Update abcdesktop.yaml file Change od.config file Two options define the user homedirectory : desktop.homedirectorytype and desktop.persistentvolumeclaim Update desktop.homedirectorytype Set the desktop.homedirectorytype to value 'persistentVolumeClaim' desktop.homedirectorytype: 'persistentVolumeClaim' Update desktop.persistentvolumeclaim Set the desktop.persistentvolumeclaim to the name of the persistentVolumeClaim to use. In this example the name of the persistentvolumeclaim is persistentvolumeclaim-home-directory desktop.persistentvolumeclaim: 'persistentvolumeclaim-home-directory' Update desktop.pod Add the init entry in desktop.pod 'init': { 'image': 'busybox', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'pullpolicy': 'IfNotPresent', 'command': [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] } The init entry defines the init container for the user's pod. The command runs by the init container, fixes the owner of the home directory to userid to 4096 and the groupid to 4096 . The init command is chown 4096:4096 /home/balloon /home/balloon/* Pulseaudio audio service does not start if the home directory not accessible or not own by the current user. desktop.pod : { 'graphical' : { 'image': 'abcdesktopio/oc.user.20.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'waitportbin' : '/composer/node/wait-port/node_modules/.bin/wait-port', 'resources': { 'requests': { 'memory': \"320Mi\", 'cpu': \"250m\" }, 'limits' : { 'memory': \"1Gi\", 'cpu': \"1000m\" } }, 'securityContext': { 'allowPrivilegeEscalation': True, 'runAsUser': 4096 }, 'shareProcessNamespace': True, 'secrets_requirement' : [ 'abcdesktop/vnc', 'abcdesktop/kerberos'] }, 'printer' : { 'image': 'abcdesktopio/oc.cupsd.18.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 0 }, 'resources': { 'requests': { 'memory': \"64Mi\", 'cpu': \"125m\" }, 'limits' : { 'memory': \"512Mi\", 'cpu': \"500m\" } }, 'acl': { 'permit': [ 'all' ] } }, 'filer' : { 'image': 'abcdesktopio/oc.filer:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] } }, 'storage' : { 'image': 'k8s.gcr.io/pause:3.2', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"32Mi\", 'cpu': \"100m\" }, 'limits' : { 'memory': \"128Mi\", 'cpu': \"250m\" } } }, 'sound': { 'image': 'abcdesktopio/oc.pulseaudio.22.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"8Mi\", 'cpu': \"50m\" }, 'limits' : { 'memory': \"64Mi\", 'cpu': \"250m\" } } }, 'init': { 'image': 'busybox', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'pullpolicy': 'IfNotPresent', 'command': [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] }} Restart your pyos daemon Restart your pyos daemon, to make sure that the new parameters will be use to start the user container.","title":"User data persistence"},{"location":"common/1.0/userdatapersistence/#user-data-persistence-in-release-1x-configuration","text":"","title":"User data persistence in release 1.x configuration"},{"location":"common/1.0/userdatapersistence/#requirements","text":"Use a Kubernetes abcdesktop instance","title":"Requirements"},{"location":"common/1.0/userdatapersistence/#goals","text":"keep user's data after a logoff","title":"Goals"},{"location":"common/1.0/userdatapersistence/#create-mntabcdesktop-directory","text":"Create a directory /mnt/abcdesktop mkdir -p /mnt/abcdesktop abcdesktop uses a PersistentVolume to store user data.","title":"Create /mnt/abcdesktop directory"},{"location":"common/1.0/userdatapersistence/#remove-previous-persistentvolume-and-persistentvolumeclaim","text":"kubectl delete pvc persistentvolumeclaim-home-directory -n abcdesktop kubectl delete pv pv-volume-home-directory -n abcdesktop You have to delete user's pod too. Make sure that all user's pod have been removed.","title":"Remove previous PersistentVolume and PersistentVolumeClaim"},{"location":"common/1.0/userdatapersistence/#create-the-persistentvolume-pv-volume-home-directory","text":"kubectl create -f - <<EOF apiVersion: v1 kind: PersistentVolume metadata: name: pv-volume-home-directory namespace: abcdesktop labels: type: local spec: storageClassName: storage-local-abcdesktop capacity: storage: 10Gi volumeMode: Filesystem accessModes: - ReadWriteMany hostPath: path: '/mnt/abcdesktop' EOF You should read on stdout : persistentvolume/pv-volume-home-directory created","title":"Create the PersistentVolume pv-volume-home-directory"},{"location":"common/1.0/userdatapersistence/#create-the-persistentvolumeclaim-persistentvolumeclaim-home-directory","text":"kubectl create -f - <<EOF kind: PersistentVolumeClaim apiVersion: v1 metadata: name: persistentvolumeclaim-home-directory namespace: abcdesktop spec: storageClassName: storage-local-abcdesktop accessModes: - ReadWriteMany resources: requests: storage: 3Gi EOF You should read on stdout : persistentvolumeclaim/persistentvolumeclaim-home-directory created","title":"Create the PersistentVolumeClaim persistentvolumeclaim-home-directory"},{"location":"common/1.0/userdatapersistence/#update-abcdesktopyaml-file","text":"","title":"Update abcdesktop.yaml file"},{"location":"common/1.0/userdatapersistence/#change-odconfig-file","text":"Two options define the user homedirectory : desktop.homedirectorytype and desktop.persistentvolumeclaim","title":"Change od.config file"},{"location":"common/1.0/userdatapersistence/#update-desktophomedirectorytype","text":"Set the desktop.homedirectorytype to value 'persistentVolumeClaim' desktop.homedirectorytype: 'persistentVolumeClaim'","title":"Update desktop.homedirectorytype"},{"location":"common/1.0/userdatapersistence/#update-desktoppersistentvolumeclaim","text":"Set the desktop.persistentvolumeclaim to the name of the persistentVolumeClaim to use. In this example the name of the persistentvolumeclaim is persistentvolumeclaim-home-directory desktop.persistentvolumeclaim: 'persistentvolumeclaim-home-directory'","title":"Update desktop.persistentvolumeclaim"},{"location":"common/1.0/userdatapersistence/#update-desktoppod","text":"Add the init entry in desktop.pod 'init': { 'image': 'busybox', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'pullpolicy': 'IfNotPresent', 'command': [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] } The init entry defines the init container for the user's pod. The command runs by the init container, fixes the owner of the home directory to userid to 4096 and the groupid to 4096 . The init command is chown 4096:4096 /home/balloon /home/balloon/* Pulseaudio audio service does not start if the home directory not accessible or not own by the current user. desktop.pod : { 'graphical' : { 'image': 'abcdesktopio/oc.user.20.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'waitportbin' : '/composer/node/wait-port/node_modules/.bin/wait-port', 'resources': { 'requests': { 'memory': \"320Mi\", 'cpu': \"250m\" }, 'limits' : { 'memory': \"1Gi\", 'cpu': \"1000m\" } }, 'securityContext': { 'allowPrivilegeEscalation': True, 'runAsUser': 4096 }, 'shareProcessNamespace': True, 'secrets_requirement' : [ 'abcdesktop/vnc', 'abcdesktop/kerberos'] }, 'printer' : { 'image': 'abcdesktopio/oc.cupsd.18.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 0 }, 'resources': { 'requests': { 'memory': \"64Mi\", 'cpu': \"125m\" }, 'limits' : { 'memory': \"512Mi\", 'cpu': \"500m\" } }, 'acl': { 'permit': [ 'all' ] } }, 'filer' : { 'image': 'abcdesktopio/oc.filer:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] } }, 'storage' : { 'image': 'k8s.gcr.io/pause:3.2', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"32Mi\", 'cpu': \"100m\" }, 'limits' : { 'memory': \"128Mi\", 'cpu': \"250m\" } } }, 'sound': { 'image': 'abcdesktopio/oc.pulseaudio.22.04:dev', 'pullpolicy': 'IfNotPresent', 'enable': True, 'securityContext': { 'runAsUser': 4096 }, 'acl': { 'permit': [ 'all' ] }, 'resources': { 'requests': { 'memory': \"8Mi\", 'cpu': \"50m\" }, 'limits' : { 'memory': \"64Mi\", 'cpu': \"250m\" } } }, 'init': { 'image': 'busybox', 'enable': True, 'acl': { 'permit': [ 'all' ] }, 'pullpolicy': 'IfNotPresent', 'command': [ 'sh', '-c', 'chown 4096:4096 /home/balloon' ] }}","title":"Update desktop.pod"},{"location":"common/1.0/userdatapersistence/#restart-your-pyos-daemon","text":"Restart your pyos daemon, to make sure that the new parameters will be use to start the user container.","title":"Restart your pyos daemon"},{"location":"common/3.0/mount_nfs_tag/","text":"Define rules to mount a nfs volume inside user pod Only supported in abcdesktop release 3.0 An nfs volume allows an existing NFS (Network File System) share to be mounted into a Pod. NFS volume can be pre-populated with data, and can be shared between pods. NFS can be mounted by multiple writers simultaneously. You must have your own NFS server running with the share exported before you can use it. Update the od.config file Update the od.config to add a label to user add a desktop rules to match the label Add a label in the auth provider In this example, we add a label nfsuser as a condition to mount nfs resource In the auth provider add a dummy condition or a memberOf condition. All types of conditions are supported, the goal is only to get a label. Update the od.config file and look for the default ldapconfig dictionnary Add a dummy condition ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'dc=planetexpress,dc=com', 'users_ou' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap.abcdesktop.svc.cluster.local:30389' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-dummy': { 'conditions' : [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'nfsuser' } } } } } } Or Add a memberOf condition ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'dc=planetexpress,dc=com', 'users_ou' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap.abcdesktop.svc.cluster.local:30389' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-nfsuser': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'nfsuser' } } } } } Add a rule in the desktop.policies In this example, we define entries : nfsserver is 192.168.7.101 (can also be a FQDH) path is /volume1/isostore mountPath is /mnt/iso The mount command become like: mount -t nfs 192.168.7.101:/volume1/isostore /mnt/iso Update the desktop.policies dictionnary and add a new key rules . In the new rules define a new entry nfsuser . The name of the entry MUST match a user label tag, else the mount point is not created. In this example the label is defined as nfsuser , but you can set differents values. Then set nfs descriptions as you can read in kubernetes nfs volume desktop.policies: { 'acls' : {}, 'rules': { 'volumes': { 'nfsuser': { 'type': 'nfs', 'name': 'isostore', 'server': '192.168.7.101', 'path': '/volume1/isostore', 'mountPath': '/mnt/iso', 'readOnly': True } } } } Apply the new od.config file Save your local changes in od.config , and update the new configmap abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop Restart pyos daemonset Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop Create a new desktop for Hermes Conrad and list nfs files Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io pod. http://localhost:30443 Login with a user Hermes Conrad for example. Hermes Conrad is member of admin_staff . Check that the label nfsuser is listed Run a web shell to list the /mnt/iso directory content You can define many rules from LDAP groups. To get more informations about rules, read the authentification rules section","title":"Mount a nfs resource inside a user desktop"},{"location":"common/3.0/mount_nfs_tag/#define-rules-to-mount-a-nfs-volume-inside-user-pod","text":"Only supported in abcdesktop release 3.0 An nfs volume allows an existing NFS (Network File System) share to be mounted into a Pod. NFS volume can be pre-populated with data, and can be shared between pods. NFS can be mounted by multiple writers simultaneously. You must have your own NFS server running with the share exported before you can use it.","title":"Define rules to mount a nfs volume inside user pod"},{"location":"common/3.0/mount_nfs_tag/#update-the-odconfig-file","text":"Update the od.config to add a label to user add a desktop rules to match the label","title":"Update the od.config file"},{"location":"common/3.0/mount_nfs_tag/#add-a-label-in-the-auth-provider","text":"In this example, we add a label nfsuser as a condition to mount nfs resource In the auth provider add a dummy condition or a memberOf condition. All types of conditions are supported, the goal is only to get a label. Update the od.config file and look for the default ldapconfig dictionnary","title":"Add a label in the auth provider"},{"location":"common/3.0/mount_nfs_tag/#add-a-dummy-condition","text":"ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'dc=planetexpress,dc=com', 'users_ou' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap.abcdesktop.svc.cluster.local:30389' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-dummy': { 'conditions' : [ { 'boolean': True, 'expected' : True } ], 'expected' : True, 'label': 'nfsuser' } } } } } }","title":"Add a dummy condition"},{"location":"common/3.0/mount_nfs_tag/#or-add-a-memberof-condition","text":"ldapconfig : { 'planet': { 'default' : True, 'ldap_timeout' : 15, 'ldap_basedn' : 'dc=planetexpress,dc=com', 'users_ou' : 'ou=people,dc=planetexpress,dc=com', 'servers' : [ 'ldap://openldap.abcdesktop.svc.cluster.local:30389' ], 'serviceaccount': { 'login': 'cn=admin,dc=planetexpress,dc=com', 'password': 'GoodNewsEveryone' }, 'policies': { 'acls': None, 'rules' : { 'rule-nfsuser': { 'conditions' : [ { 'memberOf': 'cn=admin_staff,ou=people,dc=planetexpress,dc=com', 'expected' : True } ], 'expected' : True, 'label': 'nfsuser' } } } } }","title":"Or Add a memberOf condition"},{"location":"common/3.0/mount_nfs_tag/#add-a-rule-in-the-desktoppolicies","text":"In this example, we define entries : nfsserver is 192.168.7.101 (can also be a FQDH) path is /volume1/isostore mountPath is /mnt/iso The mount command become like: mount -t nfs 192.168.7.101:/volume1/isostore /mnt/iso Update the desktop.policies dictionnary and add a new key rules . In the new rules define a new entry nfsuser . The name of the entry MUST match a user label tag, else the mount point is not created. In this example the label is defined as nfsuser , but you can set differents values. Then set nfs descriptions as you can read in kubernetes nfs volume desktop.policies: { 'acls' : {}, 'rules': { 'volumes': { 'nfsuser': { 'type': 'nfs', 'name': 'isostore', 'server': '192.168.7.101', 'path': '/volume1/isostore', 'mountPath': '/mnt/iso', 'readOnly': True } } } }","title":"Add a rule in the desktop.policies"},{"location":"common/3.0/mount_nfs_tag/#apply-the-new-odconfig-file","text":"Save your local changes in od.config , and update the new configmap abcdesktop-config kubectl delete configmap abcdesktop-config -n abcdesktop kubectl create --from-file=od.config -n abcdesktop","title":"Apply the new od.config file"},{"location":"common/3.0/mount_nfs_tag/#restart-pyos-daemonset","text":"Restart pyos daemonset kubectl rollout restart daemonset daemonset-pyos -n abcdesktop","title":"Restart pyos daemonset"},{"location":"common/3.0/mount_nfs_tag/#create-a-new-desktop-for-hermes-conrad-and-list-nfs-files","text":"Open the url http://localhost:30443 , in your web browser, to start a simple abcdesktop.io pod. http://localhost:30443 Login with a user Hermes Conrad for example. Hermes Conrad is member of admin_staff . Check that the label nfsuser is listed Run a web shell to list the /mnt/iso directory content You can define many rules from LDAP groups. To get more informations about rules, read the authentification rules section","title":"Create a new desktop for Hermes Conrad and list nfs files"},{"location":"common/3.0/multiplegroupsfeature/","text":"RFC 2307: the multiple groups features Let talk about a common features with multiple groups and user securityContext on pods context Use ldap auth like in sample config ou=people,dc=planetexpress,dc=com Use groups gidNumber and uidNumber Use filesystem access right accounts description defined a user in the LDAP series The ldif set : organizationalUnit people : ou=people,dc=planetexpress,dc=com organizationalUnit groups : ou=groups,dc=planetexpress,dc=com Create a posixAccount : cn=hermes,ou=people,dc=planetexpress,dc=com gidNumber: 1036 uid: hermes uidNumber: 1035 Create a posixGroup for hermes : cn=hermes,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: hermes gidNumber: 1036 Create a posixGroup : cn=accountant,ou=groups,dc=planetexpress,dc=com cn: accountant gidNumber: 18430 memberUid: hermes Create a posixGroup cn=humans,ou=groups,dc=planetexpress,dc=com gidNumber: 20467 memberUid: fry memberUid: hermes Inside the user pod, the unix group file contains : cat /etc/group hermes:x:1036: humans:x:20467:hermes,fry accountant:x:18430:hermes This is correct. The user's pod is defined with a securityContext 'securityContext': { 'runAsUser': 1035, 'runAsGroup': 1036, 'supplementalGroups': [20467, 18430] } This is correct. supplementalGroups defines the others groups from LDAP Inside the user pod run the id command hermes:~$ id uid=1035(hermes) gid=1036(hermes) groups=1036(hermes),18430(accountant),20467(humans) hermes:~$ groups hermes accountant humans hermes:~$ This is correct. Create new file on host The default home directory in od.config is a volume hostPath set to /tmp desktop.homedirectorytype: 'hostPath' desktop.hostPathRoot: '/tmp' On your host server, using a root account, create a file humansfile with restricted access to member of humans group. cd /mnt/hermes-conrad echo 'hello' > humansfile chown 0:20467 humansfile chmod 070 humansfile Check the owner and group ls -la humansfile ----rwx--- 1 root 20467 6 nov. 23 17:16 humansfile Check inside the user pod check that hermes account can to write data in file humansfile , because hermes is member of humans group. hermes:~$ ls -la humansfile ----rwx--- 1 root humans 6 Nov 23 16:16 humansfile hermes:~$ echo 'hello from hermes' >> humansfile hermes:~$ more humansfile hello hello from hermes hermes:~$ This is correct. We describe a common features with multiple groups and user securityContext on pods and abcdesktop support multiple groups with posixGroup define in RFC2307. ldif dump To get more details about the ldif and ldap datas, you can download the ldif file planetexpress . version: 1 dn: dc=planetexpress,dc=com objectClass: dcObject objectClass: organization objectClass: top dc: planetexpress o: Planet Express, Inc. dn: ou=people,dc=planetexpress,dc=com objectClass: organizationalUnit objectClass: top ou: people description: Planet Express crew dn: cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com objectClass: inetOrgPerson objectClass: organizationalPerson objectClass: person objectClass: posixAccount objectClass: top cn: Hermes Conrad gidNumber: 1036 homeDirectory: /home/hermes sn: Conrad uid: hermes uidNumber: 1035 description: Human employeeType: Accountant employeeType: Bureaucrat givenName: Hermes mail: hermes@planetexpress.com ou: Office Management dn: ou=groups,dc=planetexpress,dc=com objectClass: organizationalUnit objectClass: top ou: groups dn: cn=fry,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: fry gidNumber: 1025 memberUid: fry dn: cn=humans,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: humans gidNumber: 20467 memberUid: fry memberUid: hermes dn: cn=hermes,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: hermes gidNumber: 1036 dn: cn=accountant,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: accountant gidNumber: 18430 memberUid: hermes","title":"RFC 2307 multiple groups and user securityContext on pod"},{"location":"common/3.0/multiplegroupsfeature/#rfc-2307-the-multiple-groups-features","text":"Let talk about a common features with multiple groups and user securityContext on pods","title":"RFC 2307: the multiple groups features"},{"location":"common/3.0/multiplegroupsfeature/#context","text":"Use ldap auth like in sample config ou=people,dc=planetexpress,dc=com Use groups gidNumber and uidNumber Use filesystem access right","title":"context"},{"location":"common/3.0/multiplegroupsfeature/#accounts-description","text":"defined a user in the LDAP series The ldif set : organizationalUnit people : ou=people,dc=planetexpress,dc=com organizationalUnit groups : ou=groups,dc=planetexpress,dc=com Create a posixAccount : cn=hermes,ou=people,dc=planetexpress,dc=com gidNumber: 1036 uid: hermes uidNumber: 1035 Create a posixGroup for hermes : cn=hermes,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: hermes gidNumber: 1036 Create a posixGroup : cn=accountant,ou=groups,dc=planetexpress,dc=com cn: accountant gidNumber: 18430 memberUid: hermes Create a posixGroup cn=humans,ou=groups,dc=planetexpress,dc=com gidNumber: 20467 memberUid: fry memberUid: hermes Inside the user pod, the unix group file contains : cat /etc/group hermes:x:1036: humans:x:20467:hermes,fry accountant:x:18430:hermes This is correct. The user's pod is defined with a securityContext 'securityContext': { 'runAsUser': 1035, 'runAsGroup': 1036, 'supplementalGroups': [20467, 18430] } This is correct. supplementalGroups defines the others groups from LDAP Inside the user pod run the id command hermes:~$ id uid=1035(hermes) gid=1036(hermes) groups=1036(hermes),18430(accountant),20467(humans) hermes:~$ groups hermes accountant humans hermes:~$ This is correct.","title":"accounts description"},{"location":"common/3.0/multiplegroupsfeature/#create-new-file-on-host","text":"The default home directory in od.config is a volume hostPath set to /tmp desktop.homedirectorytype: 'hostPath' desktop.hostPathRoot: '/tmp' On your host server, using a root account, create a file humansfile with restricted access to member of humans group. cd /mnt/hermes-conrad echo 'hello' > humansfile chown 0:20467 humansfile chmod 070 humansfile Check the owner and group ls -la humansfile ----rwx--- 1 root 20467 6 nov. 23 17:16 humansfile Check inside the user pod check that hermes account can to write data in file humansfile , because hermes is member of humans group. hermes:~$ ls -la humansfile ----rwx--- 1 root humans 6 Nov 23 16:16 humansfile hermes:~$ echo 'hello from hermes' >> humansfile hermes:~$ more humansfile hello hello from hermes hermes:~$ This is correct. We describe a common features with multiple groups and user securityContext on pods and abcdesktop support multiple groups with posixGroup define in RFC2307.","title":"Create new file on host"},{"location":"common/3.0/multiplegroupsfeature/#ldif-dump","text":"To get more details about the ldif and ldap datas, you can download the ldif file planetexpress . version: 1 dn: dc=planetexpress,dc=com objectClass: dcObject objectClass: organization objectClass: top dc: planetexpress o: Planet Express, Inc. dn: ou=people,dc=planetexpress,dc=com objectClass: organizationalUnit objectClass: top ou: people description: Planet Express crew dn: cn=Hermes Conrad,ou=people,dc=planetexpress,dc=com objectClass: inetOrgPerson objectClass: organizationalPerson objectClass: person objectClass: posixAccount objectClass: top cn: Hermes Conrad gidNumber: 1036 homeDirectory: /home/hermes sn: Conrad uid: hermes uidNumber: 1035 description: Human employeeType: Accountant employeeType: Bureaucrat givenName: Hermes mail: hermes@planetexpress.com ou: Office Management dn: ou=groups,dc=planetexpress,dc=com objectClass: organizationalUnit objectClass: top ou: groups dn: cn=fry,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: fry gidNumber: 1025 memberUid: fry dn: cn=humans,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: humans gidNumber: 20467 memberUid: fry memberUid: hermes dn: cn=hermes,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: hermes gidNumber: 1036 dn: cn=accountant,ou=groups,dc=planetexpress,dc=com objectClass: posixGroup objectClass: top cn: accountant gidNumber: 18430 memberUid: hermes","title":"ldif dump"},{"location":"core/memcached/","text":"Memcached The memcached container comes from the public docker registry. This service is attend to the netback network. memcached store pods and containers message during the create process. create desktop create desktop message Messages stored into memcache status user message OK 'Looking for your desktop' OK 'Looking for your desktop done' OK 'Building desktop' OK 'Starting network services, it will take a while...' OK 'Network services started.' OK 'Starting desktop graphical service %ds / %d' % (nCount,nCountMax) OK 'Starting desktop spawner service %ds / %d' % (nCount,nCountMax) OK 'Desktop services are ready after %d s' Error 'createDesktop error - myOrchestrator.createDesktop %s'","title":"Memcached"},{"location":"core/memcached/#memcached","text":"The memcached container comes from the public docker registry. This service is attend to the netback network. memcached store pods and containers message during the create process.","title":"Memcached"},{"location":"core/memcached/#create-desktop","text":"","title":"create desktop"},{"location":"core/memcached/#create-desktop-message","text":"Messages stored into memcache status user message OK 'Looking for your desktop' OK 'Looking for your desktop done' OK 'Building desktop' OK 'Starting network services, it will take a while...' OK 'Network services started.' OK 'Starting desktop graphical service %ds / %d' % (nCount,nCountMax) OK 'Starting desktop spawner service %ds / %d' % (nCount,nCountMax) OK 'Desktop services are ready after %d s' Error 'createDesktop error - myOrchestrator.createDesktop %s'","title":"create desktop message"},{"location":"core/mongodb/","text":"Mongodb Mongodb is an open-source document database that provides high performance, high availability, and automatic scaling. The mongodb container comes from the public docker registry. This service is attend to the netback network. Collections abcdesktop.io uses the colections mongodb to store webrtc call history login history dock web state dock state The dock state is stored as an array of application name. The dock state is stored when the user changes it (for exemple add or remove an application inside the dock zone ). The collection's name is the userid. The key's name is 'dock' [ \"keyboard\", \"frontendjs.filemanager\", \"Mail.Thunderbird\", \"libreoffice.libreoffice-calc\", \"libreoffice.libreoffice-writer\", \"Navigator.Firefox\", \"gimp.Gimp\", \"gnome-terminal.Gnome-terminal\" ] loginHistory Login History is an object collection. One collection is created for each user. The collection's name is the userid. The javascript code can only read and NEVER write data to the loginHistory collection. The object's format is : { \"picture\":\"https://scontent.xx.fbcdn.net/v/t1.0-1/p480x480/1452008_10202217750222019_1258804247_n.jpg?oh=a96b2290e63e1e81525ede1a5b073853&oe=59184A75\", \"sub\":\"10208942501856324\", \"ipaddr\":\"181.125.208.3, 10.255.0.3\", \"provider\":\"facebook\", \"date\":\"2017-01-12 11:19:57.946554\", \"useragent\":\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36\", \"_id\":\"5877665d0790160b0d59efd0\", \"name\":\"Alexandre Devely\"} _id : is the mongodb id sub : is the userid ipaddr : is the client ip address provider : authenticated provider date : date formated useragent : user browser description name : the user name method The method getCollection, is a ligth way to get a collection on the fron-end side. For exemple this method is use by whoami.js to obtain the login's history using the key 'loginHistory'. getCollection('loginHistory', function(msg) { if (msg.status === 200) { var history = msg.result; loginHistory = history; buildHtmlTable(history); } })","title":"Mongodb"},{"location":"core/mongodb/#mongodb","text":"Mongodb is an open-source document database that provides high performance, high availability, and automatic scaling. The mongodb container comes from the public docker registry. This service is attend to the netback network.","title":"Mongodb"},{"location":"core/mongodb/#collections","text":"abcdesktop.io uses the colections mongodb to store webrtc call history login history dock web state","title":"Collections"},{"location":"core/mongodb/#dock-state","text":"The dock state is stored as an array of application name. The dock state is stored when the user changes it (for exemple add or remove an application inside the dock zone ). The collection's name is the userid. The key's name is 'dock' [ \"keyboard\", \"frontendjs.filemanager\", \"Mail.Thunderbird\", \"libreoffice.libreoffice-calc\", \"libreoffice.libreoffice-writer\", \"Navigator.Firefox\", \"gimp.Gimp\", \"gnome-terminal.Gnome-terminal\" ]","title":"dock state"},{"location":"core/mongodb/#loginhistory","text":"Login History is an object collection. One collection is created for each user. The collection's name is the userid. The javascript code can only read and NEVER write data to the loginHistory collection. The object's format is : { \"picture\":\"https://scontent.xx.fbcdn.net/v/t1.0-1/p480x480/1452008_10202217750222019_1258804247_n.jpg?oh=a96b2290e63e1e81525ede1a5b073853&oe=59184A75\", \"sub\":\"10208942501856324\", \"ipaddr\":\"181.125.208.3, 10.255.0.3\", \"provider\":\"facebook\", \"date\":\"2017-01-12 11:19:57.946554\", \"useragent\":\"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36\", \"_id\":\"5877665d0790160b0d59efd0\", \"name\":\"Alexandre Devely\"} _id : is the mongodb id sub : is the userid ipaddr : is the client ip address provider : authenticated provider date : date formated useragent : user browser description name : the user name","title":"loginHistory"},{"location":"core/mongodb/#method","text":"The method getCollection, is a ligth way to get a collection on the fron-end side. For exemple this method is use by whoami.js to obtain the login's history using the key 'loginHistory'. getCollection('loginHistory', function(msg) { if (msg.status === 200) { var history = msg.result; loginHistory = history; buildHtmlTable(history); } })","title":"method"},{"location":"core/nginx/","text":"Nginx oc.nginx Nginx is used as a reverse proxy server for HTTP, HTTPS protocols, as well as a load balancer, HTTP cache, and a web server (origin server). Nginx routing Nginx Configuration Read the nginx nginx.conf configuration file Read the nginx default web site configuration file Read the route.conf configuration file, use to route HTTP request Read the proxy.conf configuration file, use to proxy HTTP request web site The static files (html, css, js) are stored in the local /var/webModules directory. main reverse proxy moauth|fauth|gauth|oauth|autologin|API|status are routed to od.py http://$my_proxy:$api_service_tcp_port; /spawner is routed to nodejs spawner service http://$target:$spawner_service_tcp_port; /websockify is routed to websocket http://$target:$ws_tcp_bridge_tcp_port/; /u8_1_11025 is routed to pulseaudio sound service http://$target:$pulseaudio_http_port/listen/source/u8_1_11025.monitor; /filer is routed to nodejs filer service http://$target:8080 /broadcast is routed to nodejs broadcast service http://$target:$broadcast_tcp_port; LUA scripts The /etc/nginx/get.targetmap.lua read the jwt_token and return the ip address or the pod's fqdn, using the jwt_desktop_signing_public_key and the jwt_desktop_payload_private_key It uses a targetmap (dict) as first cache level. lua_shared_dict targetmap 1m; Read the lua script get.targetmap.lua to get details jwt token data and payload encryption.","title":"Nginx"},{"location":"core/nginx/#nginx-ocnginx","text":"Nginx is used as a reverse proxy server for HTTP, HTTPS protocols, as well as a load balancer, HTTP cache, and a web server (origin server).","title":"Nginx oc.nginx"},{"location":"core/nginx/#nginx-routing","text":"","title":"Nginx routing"},{"location":"core/nginx/#nginx-configuration","text":"Read the nginx nginx.conf configuration file Read the nginx default web site configuration file Read the route.conf configuration file, use to route HTTP request Read the proxy.conf configuration file, use to proxy HTTP request","title":"Nginx Configuration"},{"location":"core/nginx/#web-site","text":"The static files (html, css, js) are stored in the local /var/webModules directory.","title":"web site"},{"location":"core/nginx/#main-reverse-proxy","text":"moauth|fauth|gauth|oauth|autologin|API|status are routed to od.py http://$my_proxy:$api_service_tcp_port; /spawner is routed to nodejs spawner service http://$target:$spawner_service_tcp_port; /websockify is routed to websocket http://$target:$ws_tcp_bridge_tcp_port/; /u8_1_11025 is routed to pulseaudio sound service http://$target:$pulseaudio_http_port/listen/source/u8_1_11025.monitor; /filer is routed to nodejs filer service http://$target:8080 /broadcast is routed to nodejs broadcast service http://$target:$broadcast_tcp_port;","title":"main reverse proxy"},{"location":"core/nginx/#lua-scripts","text":"The /etc/nginx/get.targetmap.lua read the jwt_token and return the ip address or the pod's fqdn, using the jwt_desktop_signing_public_key and the jwt_desktop_payload_private_key It uses a targetmap (dict) as first cache level. lua_shared_dict targetmap 1m; Read the lua script get.targetmap.lua to get details jwt token data and payload encryption.","title":"LUA scripts"},{"location":"core/ocuser/","text":"The POD User After the login process, if no associated pod is all ready running, a new user pod is started. This pod starts at least a container with the graphical image. Inside the POD User The pod user runs by default a container with the graphical image : the oc.user.18.04. A pod can also runs sound container image, and a printer container. These options are defined in the od.config configuration file [ section desktop.soundimage and desktop.printerimage ]. Processes running inside the user container All processes are running as the user named balloon , because none of theme need to run as root . The userid and the guid are 4096 . Supervisord Supervisor is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems. All process running inside the user container, are started by supervisord. /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf Supervisor is the parent of all running process docker-entrypoi---supervisord-+-Xvnc |-node---10*[{node}] |-4*[nodejs---10*[{nodejs}]] |-nodejs---6*[{nodejs}] |-nodejs-+-bash---pstree | `-11*[{nodejs}] |-openbox `-xsettingsd TigerVNC Xvnc TigerVNC is a high-performance, platform-neutral implementation of VNC ( Virtual Network Computing ), a client/server application that allows users to launch and interact with graphical applications on remote machines. TigerVNC provides the levels of performance necessary to run 3D and video applications, and it attempts to maintain a common look and feel and re-use components, where possible, across the various platforms that it supports. TigerVNC also provides extensions for advanced authentication methods and TLS encryption. Starts parameters command=Xvnc :0 -geometry 3840x2160 -SendPrimary=0 -depth 24 -rfbunixpath /tmp/.x11vnc -pn -rfbauth /composer/run/.vnc/passwd``` The default DISPLAY is :0. Xvnc listen on unix socket file /tmp/.x11vnc . Openbox Openbox is the window manager, it supports extensive standards support. Openbox is patched with few line to send SIG_USR1 and SIG_USR2 messages to internal spawner service. This patch is only required to send message (Create/Close) to the abcdesktop.io web front. This patch add notification when X11/window change : The notify patch send signals SIGUSR1 and SIGUSR2 to a process (pid) #define SIG_MANAGED_WINDOW SIGUSR1 #define SIG_UNMANAGED_WINDOW SIGUSR2 SIGUSR1: when a new window is created SIGUSR2: when a window is closed Openbox is started by supervisord using the command : command=/usr/bin/openbox --sm-disable --config-file /etc/X11/openbox/rc.xml --startup /composer/openbox/autostart.sh ws-tcp-bridge ws-tcp-bridge A websocket to tcp proxy server, using nodejs which bridges websockets and tcp servers in either direction. ws-tcp-bridge is started by supervisord using the command : /composer/node/ws-tcp-bridge/ws-tcp-bridge --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc Spawner-service.js spawner-service.js is a daemon written in nodejs, this daemon listen for messages on the tcp port 8001. spawner-service offers methods to interact with the container and the X11 server : launch: start a new application inside the container [ use for builtin applications ] filesearch: search file by keywords activate: activate a window raise: raise a window minimize: minimize a window close: close a window getwindowslist: get window list activatewindow: activate a window closewindow minimizewindow raisewindow info: get container information clipboardsync: Sync primary clipboard to gtk default clipboard getbroadcastwindowslist: broadcast the window list to all connected users getappforfile: get the application key for a filename getmimeforfile: get the mime type for a filename echo: return an echo string spawner-service.js is started by supervisord using the command : command=nodejs /composer/node/spawner-service/spawner-service.js Printer-service.js Printer-service.js waits for a file in /home/balloon/.printer-queue directory. Printer-service.js use broadcastevent to notify the web browser to download new files to print. Printer-service.js is started by supervisord using the command : command=nodejs /composer/node/printer-service/printer-service.js Broadcast-service.js Broadcast-service.js allows to broadcast messages between all user sharing the same session. Broadcast-service.js is started by supervisord using the command : command=nodejs /composer/node/broadcast-service/broadcast-service.js File-service.js File-service.js is a upload/download service to tranfert files between the browser and the user home directory. File-service.js supports the HTTP method POST to uploadFile and GET to respond data file. File-service.js is used for printer-service.js to download PDF printed files. File-service.js use the tcp port 8080. http.createServer(function(req, res) { if (req.method === 'POST') { uploadFile( req, res ); } else if (req.method === 'GET') { respondFile( req, res ); } }).listen(8080, function() { console.log('Listening for requests'); }); File-service.js is started by supervisord using the command : command=nodejs /composer/node/file-service/file-service.js Pulseaudio PulseAudio is a sound system for POSIX, and is a proxy for sound applications. It allows you to do advanced operations on your sound data as it passes between applications. Pulseaudio is use as server to forward sound between X11 applications and the user browser. It supports also virtual local sound. file etc/pulse/default.pa load-module module-native-protocol-unix load-module module-always-sink load-module module-native-protocol-tcp Pulseaudio is started by supervisord using the command : command=/usr/bin/pulseaudio Xsettingsd Xsettingsd is a daemon that implements the XSETTINGS specification. Xsettingsd is use to run GTK+ applications, to configure things such as themes, font antialiasing/hinting, and UI sound effects without we using the GNOME desktop environment. Xsettingsd set the default GTK theme and color pallette: Net/ThemeName \"Numix-Flatstudio\" Net/IconThemeName \"Numix-Light\" Gtk/ColorPalette \"black:white:gray50:red:purple:blue:light blue:green:yellow:orange:lavender:brown:goldenrod4:dodger blue:pink:light green:gray10:gray30:gray75:gray90\" Xsettingsd is started by supervisord using the command. command=/usr/bin/xsettingsd -c /home/balloon/.xsettings Build the user container image The image oc.user.XX.YY is based from the oc.software.XX.YY witch came from oc.ubuntu.XX.YY. For example : * The image oc.user.18.04 is based from the oc.software.18.04 witch came from oc.ubuntu.18.04. * The image oc.user.20.04 is based from the oc.software.20.04 witch came from oc.ubuntu.20.04. * The image oc.user.21.04 is based from the oc.software.21.04 witch came from oc.ubuntu.21.04. +-------------------+ | oc.user.18.04 | (abcdesktop.io custom software component) +---------+---------+ | +---------+---------+ | oc.software.18.04 | (abcdesktop.io ubuntu software component) +---------+---------+ | +---------+---------+ | oc.ubuntu.18.04 | (abcdesktop.io ubuntu service) +-------------------+ | +---------+---------+ | ubuntu:18.04 | (official ubuntu images from dockerhub) +-------------------+ To build the image oc.user container from scratch, you need to build there 3 images. Build oc.ubuntu.18.04 first, next oc.software.18.04, and finish by oc.user.18.04. This is done by the Makefile command. docker build -t oc.ubuntu.18.04 -f oc.ubuntu.18.04 . docker build -t oc.software.18.04 -f oc.software.18.04 . docker build -t oc.user.18.04 -f oc.user.18.04 . To do it automaticly, clone composer/dockerbuild and run the Makefile git clone https://github.com/abcdesktopio/oc.user.git make Dockerfile oc.ubuntu.XX.YY. oc.ubuntu.XX.YY is a Dockerfile, it starts 'FROM ubuntu:XX.YY' and installs core services and libs: nodejs: use by services tiger VNC: X11 server supervisor: service manager xsettingsd: for X11 params pulseaudio: fo sound openbox: the windows manager cups and cups-pdf: for printing support Dockerfile oc.software.XX.YY oc.software.XX.YY is a Dockerfile, it starts 'FROM oc.ubuntu.XX.YY' and installs software components: gnome-terminal xclip Dockerfile oc.user.XX.YY oc.user.XX.YY is a Dockerfile, it starts 'FROM oc.software.XX.YY' and installs user software components: Install nodejs dev # Add nodejs service RUN cd /composer/node/broadcast-service && npm install RUN cd /composer/node/file-service && npm install RUN cd /composer/node/printer-service && npm install RUN cd /composer/node/spawner-service && npm install \\ RUN cd /composer/node/spawner-service/node_modules/geoip-lite && npm run-script updatedb RUN cd /composer/node/angular-filemanager-nodejs-bridge && npm install RUN cd /composer/node/livesound-service && npm install Create the balloon user RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER Change default permission to run cupsd # change acces right for printer support RUN addgroup $BUSER lpadmin RUN mkdir /var/run/cups RUN chown -R $BUSER:$BUSER /var/spool/cups && \\ chown -R $BUSER:$BUSER /var/spool/cups-pdf && \\ chown -R $BUSER:$BUSER /var/log/cups && \\ chown -R $BUSER:$BUSER /var/cache/cups && \\ chown -R $BUSER:$BUSER /etc/cups/printers.conf && \\ chown -R $BUSER:$BUSER /var/run/cups/ Set the exposed tcp port Datas to these tcp ports are routed by nginx PULSEAUDIO_HTTP_PORT 4714 WS_TCP_BRIDGE_SERVICE_TCP_PORT 6081 RESERVED_FOR_NEXT_VERSION 29780 XTERM_TCP_PORT 29781 FILE_SERVICE_TCP_PORT 29783 BROADCAST_SERVICE_TCP_PORT 29784 RESERVED FOR CUPSD 29785 SPAWNER_SERVICE_TCP_PORT 29786","title":"User"},{"location":"core/ocuser/#the-pod-user","text":"After the login process, if no associated pod is all ready running, a new user pod is started. This pod starts at least a container with the graphical image.","title":"The POD User"},{"location":"core/ocuser/#inside-the-pod-user","text":"The pod user runs by default a container with the graphical image : the oc.user.18.04. A pod can also runs sound container image, and a printer container. These options are defined in the od.config configuration file [ section desktop.soundimage and desktop.printerimage ].","title":"Inside the POD User"},{"location":"core/ocuser/#processes-running-inside-the-user-container","text":"All processes are running as the user named balloon , because none of theme need to run as root . The userid and the guid are 4096 .","title":"Processes running inside the user container"},{"location":"core/ocuser/#supervisord","text":"Supervisor is a client/server system that allows its users to monitor and control a number of processes on UNIX-like operating systems. All process running inside the user container, are started by supervisord. /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf Supervisor is the parent of all running process docker-entrypoi---supervisord-+-Xvnc |-node---10*[{node}] |-4*[nodejs---10*[{nodejs}]] |-nodejs---6*[{nodejs}] |-nodejs-+-bash---pstree | `-11*[{nodejs}] |-openbox `-xsettingsd","title":"Supervisord"},{"location":"core/ocuser/#tigervnc-xvnc","text":"TigerVNC is a high-performance, platform-neutral implementation of VNC ( Virtual Network Computing ), a client/server application that allows users to launch and interact with graphical applications on remote machines. TigerVNC provides the levels of performance necessary to run 3D and video applications, and it attempts to maintain a common look and feel and re-use components, where possible, across the various platforms that it supports. TigerVNC also provides extensions for advanced authentication methods and TLS encryption. Starts parameters command=Xvnc :0 -geometry 3840x2160 -SendPrimary=0 -depth 24 -rfbunixpath /tmp/.x11vnc -pn -rfbauth /composer/run/.vnc/passwd``` The default DISPLAY is :0. Xvnc listen on unix socket file /tmp/.x11vnc .","title":"TigerVNC Xvnc"},{"location":"core/ocuser/#openbox","text":"Openbox is the window manager, it supports extensive standards support. Openbox is patched with few line to send SIG_USR1 and SIG_USR2 messages to internal spawner service. This patch is only required to send message (Create/Close) to the abcdesktop.io web front. This patch add notification when X11/window change : The notify patch send signals SIGUSR1 and SIGUSR2 to a process (pid) #define SIG_MANAGED_WINDOW SIGUSR1 #define SIG_UNMANAGED_WINDOW SIGUSR2 SIGUSR1: when a new window is created SIGUSR2: when a window is closed Openbox is started by supervisord using the command : command=/usr/bin/openbox --sm-disable --config-file /etc/X11/openbox/rc.xml --startup /composer/openbox/autostart.sh","title":"Openbox"},{"location":"core/ocuser/#ws-tcp-bridge","text":"ws-tcp-bridge A websocket to tcp proxy server, using nodejs which bridges websockets and tcp servers in either direction. ws-tcp-bridge is started by supervisord using the command : /composer/node/ws-tcp-bridge/ws-tcp-bridge --method=ws2tcp --lport 6081 --rhost=unix:/tmp/.x11vnc","title":"ws-tcp-bridge"},{"location":"core/ocuser/#spawner-servicejs","text":"spawner-service.js is a daemon written in nodejs, this daemon listen for messages on the tcp port 8001. spawner-service offers methods to interact with the container and the X11 server : launch: start a new application inside the container [ use for builtin applications ] filesearch: search file by keywords activate: activate a window raise: raise a window minimize: minimize a window close: close a window getwindowslist: get window list activatewindow: activate a window closewindow minimizewindow raisewindow info: get container information clipboardsync: Sync primary clipboard to gtk default clipboard getbroadcastwindowslist: broadcast the window list to all connected users getappforfile: get the application key for a filename getmimeforfile: get the mime type for a filename echo: return an echo string spawner-service.js is started by supervisord using the command : command=nodejs /composer/node/spawner-service/spawner-service.js","title":"Spawner-service.js"},{"location":"core/ocuser/#printer-servicejs","text":"Printer-service.js waits for a file in /home/balloon/.printer-queue directory. Printer-service.js use broadcastevent to notify the web browser to download new files to print. Printer-service.js is started by supervisord using the command : command=nodejs /composer/node/printer-service/printer-service.js","title":"Printer-service.js"},{"location":"core/ocuser/#broadcast-servicejs","text":"Broadcast-service.js allows to broadcast messages between all user sharing the same session. Broadcast-service.js is started by supervisord using the command : command=nodejs /composer/node/broadcast-service/broadcast-service.js","title":"Broadcast-service.js"},{"location":"core/ocuser/#file-servicejs","text":"File-service.js is a upload/download service to tranfert files between the browser and the user home directory. File-service.js supports the HTTP method POST to uploadFile and GET to respond data file. File-service.js is used for printer-service.js to download PDF printed files. File-service.js use the tcp port 8080. http.createServer(function(req, res) { if (req.method === 'POST') { uploadFile( req, res ); } else if (req.method === 'GET') { respondFile( req, res ); } }).listen(8080, function() { console.log('Listening for requests'); }); File-service.js is started by supervisord using the command : command=nodejs /composer/node/file-service/file-service.js","title":"File-service.js"},{"location":"core/ocuser/#pulseaudio","text":"PulseAudio is a sound system for POSIX, and is a proxy for sound applications. It allows you to do advanced operations on your sound data as it passes between applications. Pulseaudio is use as server to forward sound between X11 applications and the user browser. It supports also virtual local sound. file etc/pulse/default.pa load-module module-native-protocol-unix load-module module-always-sink load-module module-native-protocol-tcp Pulseaudio is started by supervisord using the command : command=/usr/bin/pulseaudio","title":"Pulseaudio"},{"location":"core/ocuser/#xsettingsd","text":"Xsettingsd is a daemon that implements the XSETTINGS specification. Xsettingsd is use to run GTK+ applications, to configure things such as themes, font antialiasing/hinting, and UI sound effects without we using the GNOME desktop environment. Xsettingsd set the default GTK theme and color pallette: Net/ThemeName \"Numix-Flatstudio\" Net/IconThemeName \"Numix-Light\" Gtk/ColorPalette \"black:white:gray50:red:purple:blue:light blue:green:yellow:orange:lavender:brown:goldenrod4:dodger blue:pink:light green:gray10:gray30:gray75:gray90\" Xsettingsd is started by supervisord using the command. command=/usr/bin/xsettingsd -c /home/balloon/.xsettings","title":"Xsettingsd"},{"location":"core/ocuser/#build-the-user-container-image","text":"The image oc.user.XX.YY is based from the oc.software.XX.YY witch came from oc.ubuntu.XX.YY. For example : * The image oc.user.18.04 is based from the oc.software.18.04 witch came from oc.ubuntu.18.04. * The image oc.user.20.04 is based from the oc.software.20.04 witch came from oc.ubuntu.20.04. * The image oc.user.21.04 is based from the oc.software.21.04 witch came from oc.ubuntu.21.04. +-------------------+ | oc.user.18.04 | (abcdesktop.io custom software component) +---------+---------+ | +---------+---------+ | oc.software.18.04 | (abcdesktop.io ubuntu software component) +---------+---------+ | +---------+---------+ | oc.ubuntu.18.04 | (abcdesktop.io ubuntu service) +-------------------+ | +---------+---------+ | ubuntu:18.04 | (official ubuntu images from dockerhub) +-------------------+ To build the image oc.user container from scratch, you need to build there 3 images. Build oc.ubuntu.18.04 first, next oc.software.18.04, and finish by oc.user.18.04. This is done by the Makefile command. docker build -t oc.ubuntu.18.04 -f oc.ubuntu.18.04 . docker build -t oc.software.18.04 -f oc.software.18.04 . docker build -t oc.user.18.04 -f oc.user.18.04 . To do it automaticly, clone composer/dockerbuild and run the Makefile git clone https://github.com/abcdesktopio/oc.user.git make","title":"Build the user container image"},{"location":"core/ocuser/#dockerfile-ocubuntuxxyy","text":"oc.ubuntu.XX.YY is a Dockerfile, it starts 'FROM ubuntu:XX.YY' and installs core services and libs: nodejs: use by services tiger VNC: X11 server supervisor: service manager xsettingsd: for X11 params pulseaudio: fo sound openbox: the windows manager cups and cups-pdf: for printing support","title":"Dockerfile oc.ubuntu.XX.YY."},{"location":"core/ocuser/#dockerfile-ocsoftwarexxyy","text":"oc.software.XX.YY is a Dockerfile, it starts 'FROM oc.ubuntu.XX.YY' and installs software components: gnome-terminal xclip","title":"Dockerfile oc.software.XX.YY"},{"location":"core/ocuser/#dockerfile-ocuserxxyy","text":"oc.user.XX.YY is a Dockerfile, it starts 'FROM oc.software.XX.YY' and installs user software components:","title":"Dockerfile oc.user.XX.YY"},{"location":"core/ocuser/#install-nodejs-dev","text":"# Add nodejs service RUN cd /composer/node/broadcast-service && npm install RUN cd /composer/node/file-service && npm install RUN cd /composer/node/printer-service && npm install RUN cd /composer/node/spawner-service && npm install \\ RUN cd /composer/node/spawner-service/node_modules/geoip-lite && npm run-script updatedb RUN cd /composer/node/angular-filemanager-nodejs-bridge && npm install RUN cd /composer/node/livesound-service && npm install","title":"Install nodejs dev"},{"location":"core/ocuser/#create-the-balloon-user","text":"RUN groupadd --gid 4096 $BUSER RUN useradd --create-home --shell /bin/bash --uid 4096 -g $BUSER --groups lpadmin,sudo $BUSER","title":"Create the balloon user"},{"location":"core/ocuser/#change-default-permission-to-run-cupsd","text":"# change acces right for printer support RUN addgroup $BUSER lpadmin RUN mkdir /var/run/cups RUN chown -R $BUSER:$BUSER /var/spool/cups && \\ chown -R $BUSER:$BUSER /var/spool/cups-pdf && \\ chown -R $BUSER:$BUSER /var/log/cups && \\ chown -R $BUSER:$BUSER /var/cache/cups && \\ chown -R $BUSER:$BUSER /etc/cups/printers.conf && \\ chown -R $BUSER:$BUSER /var/run/cups/","title":"Change default permission to run cupsd"},{"location":"core/ocuser/#set-the-exposed-tcp-port","text":"Datas to these tcp ports are routed by nginx PULSEAUDIO_HTTP_PORT 4714 WS_TCP_BRIDGE_SERVICE_TCP_PORT 6081 RESERVED_FOR_NEXT_VERSION 29780 XTERM_TCP_PORT 29781 FILE_SERVICE_TCP_PORT 29783 BROADCAST_SERVICE_TCP_PORT 29784 RESERVED FOR CUPSD 29785 SPAWNER_SERVICE_TCP_PORT 29786","title":"Set the exposed tcp port"},{"location":"core/pyos/","text":"pyos oc.pyos is the application server for abcdesktop.io. oc.pyos is the abcdesktop control plane that configures and shuts down user desktops. This repository oc.pyos is the container of pyos. os.py is python script based on cherrypy framework and listen tcp port 8000. os.py daemon waits for json request from the javascript web client scripts, and implements methods : 'login' : Request a login session, create a new user container if it does not exist. 'getkeyinfo' : Return the public key from a provider 'logout' : logout the container 'logs' : return logs from a started container 'getapplist' : return all avalaible applications 'install' : [ deprecated ] install a package 'share' : send a auth token to the email to share the desktop 'support' : send a support request 'restart' : retart the user container 'ocrun' : start a application 'ocstop' : stop the container 'whoami' : return a JSON object whoami 'set' : set a key value 'get' : get value from a key 'setcollection' : add value to a collection 'getcollection' : get all values from a collection","title":"Pyos"},{"location":"core/pyos/#pyos","text":"oc.pyos is the application server for abcdesktop.io. oc.pyos is the abcdesktop control plane that configures and shuts down user desktops. This repository oc.pyos is the container of pyos. os.py is python script based on cherrypy framework and listen tcp port 8000. os.py daemon waits for json request from the javascript web client scripts, and implements methods : 'login' : Request a login session, create a new user container if it does not exist. 'getkeyinfo' : Return the public key from a provider 'logout' : logout the container 'logs' : return logs from a started container 'getapplist' : return all avalaible applications 'install' : [ deprecated ] install a package 'share' : send a auth token to the email to share the desktop 'support' : send a support request 'restart' : retart the user container 'ocrun' : start a application 'ocstop' : stop the container 'whoami' : return a JSON object whoami 'set' : set a key value 'get' : get value from a key 'setcollection' : add value to a collection 'getcollection' : get all values from a collection","title":"pyos"},{"location":"core/speedtest/","text":"SpeedTest The speedtest container comes from the public docker registry. LibreTest SpeedTest LibreSpeed/SpeedTest is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. LibreSpeed/SpeedTest works with no Flash, no Java, no Websocket.","title":"Speedtest"},{"location":"core/speedtest/#speedtest","text":"The speedtest container comes from the public docker registry.","title":"SpeedTest"},{"location":"core/speedtest/#libretest-speedtest","text":"LibreSpeed/SpeedTest is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. LibreSpeed/SpeedTest works with no Flash, no Java, no Websocket.","title":"LibreTest SpeedTest"},{"location":"services/file-service/","text":"File service v1.0.0 Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu. A sample API Base URLs: / Default get__ GET / Get file from the home directory Example responses 403 Response Responses Status Meaning Description Schema 403 Forbidden none Inline 404 Not Found none Inline 500 Internal Server Error none Inline Response Schema Status Code 403 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 404 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 500 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data any false none none This operation does not require authentication post__ POST / Upload a file at a given path Body parameter Example responses 200 Response Responses Status Meaning Description Schema 200 OK none Inline 403 Forbidden none Inline 500 Internal Server Error none Inline Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 403 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 500 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none This operation does not require authentication delete__ DELETE / Remove a given file wich is present in home directory Body parameter { \"myFilename\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb myFilename body string true none Example responses 200 Response Responses Status Meaning Description Schema 200 OK none Inline 400 Bad Request none Inline 403 Forbidden none Inline 404 Not Found none Inline 500 Internal Server Error none Inline Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 400 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 403 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 404 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 500 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data strin false none none This operation does not require authentication get__directory_list GET /directory/list List files in a given directory Parameters Name In Type Required Description directoryName query string true none Responses Status Meaning Description Schema default Default Default response None This operation does not require authentication","title":"File-service"},{"location":"services/file-service/#get__","text":"GET / Get file from the home directory Example responses 403 Response","title":"get__"},{"location":"services/file-service/#post__","text":"POST / Upload a file at a given path Body parameter Example responses 200 Response","title":"post__"},{"location":"services/file-service/#delete__","text":"DELETE / Remove a given file wich is present in home directory Body parameter { \"myFilename\": \"string\" }","title":"delete__"},{"location":"services/file-service/#get__directory_list","text":"GET /directory/list List files in a given directory","title":"get__directory_list"},{"location":"services/spawner-service/","text":"Spawner service v1.0.0 Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu. A sample API Base URLs: / Default get__version GET /version Get User container version Example responses 200 Response { \"date\": null, \"commit\": \"string\", \"version\": \"string\" } Responses Status Meaning Description Schema 200 OK none Inline 404 Not Found none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb date Date false none none \u00bb commit string false none none \u00bb version string false none none Status Code 404 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none This operation does not require authentication post__launch POST /launch Used to run builtin application process Body parameter { \"command\": \"string\", \"args\": [ \"string\" ] } Parameters Name In Type Required Description body body object false none \u00bb command body string true none \u00bb args body [string] false none Example responses 200 Response { \"code\": 0, \"data\": {} } Responses Status Meaning Description Schema 200 OK none launch 500 Internal Server Error none InternalError This operation does not require authentication post__setAudioQuality POST /setAudioQuality Set the audio quality Body parameter { \"sink\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb sink body string true none Example responses 200 Response { \"code\": 0, \"data\": {} } Responses Status Meaning Description Schema 200 OK none processResult 500 Internal Server Error none InternalError This operation does not require authentication post__playAudioSample POST /playAudioSample Play a sample audio Example responses 200 Response { \"code\": 0, \"data\": {} } Responses Status Meaning Description Schema 200 OK none processResult 500 Internal Server Error none InternalError This operation does not require authentication put__configurePulse PUT /configurePulse Configure pulse audio for Janus Body parameter { \"destinationIp\": \"string\", \"port\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb destinationIp body string true none \u00bb port body string true none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__broadcastwindowslist POST /broadcastwindowslist Emit a broadcast with window list as data Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__clipboardsync POST /clipboardsync Synchronize X11 and gtk clipboard Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__setDesktop POST /setDesktop Store a data as json file in desktop Body parameter { \"key\": \"string\", \"value\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb key body string true none \u00bb value body string true none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication get__getDesktop GET /getDesktop Get a data stored as json file Parameters Name In Type Required Description key query string true none Example responses 200 Response { \"code\": 0, \"data\": {} } Responses Status Meaning Description Schema 200 OK none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data object false none none This operation does not require authentication get__getmimeforfile GET /getmimeforfile Get a mime for a given filename Parameters Name In Type Required Description filename query string true none Example responses 200 Response { \"data\": {} } Responses Status Meaning Description Schema 200 OK none MIME 500 Internal Server Error none InternalError This operation does not require authentication get__filesearch GET /filesearch Used for list files by dock Parameters Name In Type Required Description maxfile query integer false none keywords query string true none Example responses 200 Response { \"code\": 0, \"data\": [ { \"file\": \"string\", \"mime\": \"string\" } ] } Responses Status Meaning Description Schema 200 OK none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data [object] false none none \u00bb\u00bb file string false none none \u00bb\u00bb mime string false none none This operation does not require authentication post__generateDesktopFiles POST /generateDesktopFiles Build desktop files to run containerized applications Body parameter { \"list\": [ { \"mimetype\": \"string\", \"path\": \"string\", \"executablefilename\": \"string\", \"icon\": \"string\", \"name\": \"string\", \"launch\": \"string\" } ] } Parameters Name In Type Required Description body body object false none \u00bb list body [object] true none \u00bb\u00bb mimetype body string false none \u00bb\u00bb path body string false none \u00bb\u00bb executablefilename body string false none \u00bb\u00bb icon body string false none \u00bb\u00bb name body string false none \u00bb\u00bb launch body string false none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication get__getappforfile GET /getappforfile Allow to get the app necessary Example responses 200 Response { \"code\": 0, \"data\": [ { \"command\": \"string\", \"args\": \"string\" } ] } Responses Status Meaning Description Schema 200 OK none AppForFile 500 Internal Server Error none InternalError This operation does not require authentication get__about GET /about Get system informations Example responses 200 Response { \"hostname\": \"string\", \"ipaddr\": \"string\", \"plateform\": \"string\", \"arch\": \"string\", \"release\": \"string\", \"cpu\": \"string\", \"clientipaddr\": \"string\", \"country\": \"string\", \"language\": \"string\", \"build\": \"string\", \"POD_NAMESPACE\": \"string\", \"POD_NAME\": \"string\", \"NODE_NAME\": \"string\", \"POD_IP\": \"string\", \"KUBERNETES_SERVICE_HOST\": \"string\" } Responses Status Meaning Description Schema 200 OK none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb hostname string false none none \u00bb ipaddr string false none none \u00bb plateform string false none none \u00bb arch string false none none \u00bb release string false none none \u00bb cpu string false none none \u00bb clientipaddr string false none none \u00bb country string false none none \u00bb language string false none none \u00bb build string false none none \u00bb POD_NAMESPACE string false none none \u00bb POD_NAME string false none none \u00bb NODE_NAME string false none none \u00bb POD_IP string false none none \u00bb KUBERNETES_SERVICE_HOST string false none none This operation does not require authentication get__getSettings GET /getSettings Get configuration for settings window Example responses 200 Response { \"code\": 0, \"data\": [ { \"tab\": \"string\", \"enabled\": true } ] } Responses Status Meaning Description Schema 200 OK none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data [any] false none none \u00bb\u00bb tab string false none none \u00bb\u00bb enabled boolean false none none This operation does not require authentication post__setBackgroundColor POST /setBackgroundColor Change the background color Body parameter { \"color\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb color body string true none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__setBackgroundImage POST /setBackgroundImage Set the background image Body parameter { \"imgName\": \"string\" } Parameters Name In Type Required Description body body object false none \u00bb imgName body string true none Example responses 200 Response { \"code\": 0, \"data\": { \"color\": \"string\", \"subData\": { \"code\": 0, \"data\": \"string\" } } } Responses Status Meaning Description Schema 200 OK none Inline 404 Not Found none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data object false none none \u00bb\u00bb color string false none none \u00bb\u00bb subData Success false none All operations completed with success \u00bb\u00bb\u00bb code integer false none none \u00bb\u00bb\u00bb data string false none none Status Code 404 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none This operation does not require authentication post__setDefaultImage POST /setDefaultImage Set the default image as background Example responses 200 Response Responses Status Meaning Description Schema 200 OK none Inline 404 Not Found none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none Status Code 404 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data string false none none This operation does not require authentication get__getwindowslist GET /getwindowslist Get window list Example responses 200 Response Responses Status Meaning Description Schema 200 OK none Inline 500 Internal Server Error none InternalError Response Schema Status Code 200 Name Type Required Restrictions Description \u00bb code integer false none none \u00bb data [any] false none none \u00bb\u00bb id integer false none none \u00bb\u00bb pid integer false none none \u00bb\u00bb wm_class string false none none \u00bb\u00bb title string false none none \u00bb\u00bb machine_name string false none none This operation does not require authentication post__activatewindows POST /activatewindows Activate windows Body parameter { \"windowsid\": [ 0 ] } Parameters Name In Type Required Description body body object false none \u00bb windowsid body [integer] true none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__closewindows POST /closewindows Close windows Body parameter { \"windowsid\": [ 0 ] } Parameters Name In Type Required Description body body object false none \u00bb windowsid body [integer] true none Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication post__placeAllWindows POST /placeAllWindows Place and resize all windows Example responses 200 Response { \"code\": 0, \"data\": \"string\" } Responses Status Meaning Description Schema 200 OK none Success 500 Internal Server Error none InternalError This operation does not require authentication Schemas InternalError { \"code\": 0, \"data\": \"string\" } Properties Name Type Required Restrictions Description code integer false none none data string false none none Success { \"code\": 0, \"data\": \"string\" } All operations completed with success Properties Name Type Required Restrictions Description code integer false none none data string false none none processResult { \"code\": 0, \"data\": {} } Properties Name Type Required Restrictions Description code integer false none none data object false none none launch { \"code\": 0, \"data\": {} } Properties Name Type Required Restrictions Description code integer false none none data object false none none MIME { \"data\": {} } Properties Name Type Required Restrictions Description data object false none none AppForFile { \"code\": 0, \"data\": [ { \"command\": \"string\", \"args\": \"string\" } ] } Properties Name Type Required Restrictions Description code integer false none none data [object] false none none \u00bb command string false none none \u00bb args string false none none","title":"Spawner-service"},{"location":"services/spawner-service/#get__version","text":"GET /version Get User container version Example responses 200 Response { \"date\": null, \"commit\": \"string\", \"version\": \"string\" }","title":"get__version"},{"location":"services/spawner-service/#post__launch","text":"POST /launch Used to run builtin application process Body parameter { \"command\": \"string\", \"args\": [ \"string\" ] }","title":"post__launch"},{"location":"services/spawner-service/#post__setaudioquality","text":"POST /setAudioQuality Set the audio quality Body parameter { \"sink\": \"string\" }","title":"post__setAudioQuality"},{"location":"services/spawner-service/#post__playaudiosample","text":"POST /playAudioSample Play a sample audio Example responses 200 Response { \"code\": 0, \"data\": {} }","title":"post__playAudioSample"},{"location":"services/spawner-service/#put__configurepulse","text":"PUT /configurePulse Configure pulse audio for Janus Body parameter { \"destinationIp\": \"string\", \"port\": \"string\" }","title":"put__configurePulse"},{"location":"services/spawner-service/#post__broadcastwindowslist","text":"POST /broadcastwindowslist Emit a broadcast with window list as data Example responses 200 Response { \"code\": 0, \"data\": \"string\" }","title":"post__broadcastwindowslist"},{"location":"services/spawner-service/#post__clipboardsync","text":"POST /clipboardsync Synchronize X11 and gtk clipboard Example responses 200 Response { \"code\": 0, \"data\": \"string\" }","title":"post__clipboardsync"},{"location":"services/spawner-service/#post__setdesktop","text":"POST /setDesktop Store a data as json file in desktop Body parameter { \"key\": \"string\", \"value\": \"string\" }","title":"post__setDesktop"},{"location":"services/spawner-service/#get__getdesktop","text":"GET /getDesktop Get a data stored as json file","title":"get__getDesktop"},{"location":"services/spawner-service/#get__getmimeforfile","text":"GET /getmimeforfile Get a mime for a given filename","title":"get__getmimeforfile"},{"location":"services/spawner-service/#get__filesearch","text":"GET /filesearch Used for list files by dock","title":"get__filesearch"},{"location":"services/spawner-service/#post__generatedesktopfiles","text":"POST /generateDesktopFiles Build desktop files to run containerized applications Body parameter { \"list\": [ { \"mimetype\": \"string\", \"path\": \"string\", \"executablefilename\": \"string\", \"icon\": \"string\", \"name\": \"string\", \"launch\": \"string\" } ] }","title":"post__generateDesktopFiles"},{"location":"services/spawner-service/#get__getappforfile","text":"GET /getappforfile Allow to get the app necessary Example responses 200 Response { \"code\": 0, \"data\": [ { \"command\": \"string\", \"args\": \"string\" } ] }","title":"get__getappforfile"},{"location":"services/spawner-service/#get__about","text":"GET /about Get system informations Example responses 200 Response { \"hostname\": \"string\", \"ipaddr\": \"string\", \"plateform\": \"string\", \"arch\": \"string\", \"release\": \"string\", \"cpu\": \"string\", \"clientipaddr\": \"string\", \"country\": \"string\", \"language\": \"string\", \"build\": \"string\", \"POD_NAMESPACE\": \"string\", \"POD_NAME\": \"string\", \"NODE_NAME\": \"string\", \"POD_IP\": \"string\", \"KUBERNETES_SERVICE_HOST\": \"string\" }","title":"get__about"},{"location":"services/spawner-service/#get__getsettings","text":"GET /getSettings Get configuration for settings window Example responses 200 Response { \"code\": 0, \"data\": [ { \"tab\": \"string\", \"enabled\": true } ] }","title":"get__getSettings"},{"location":"services/spawner-service/#post__setbackgroundcolor","text":"POST /setBackgroundColor Change the background color Body parameter { \"color\": \"string\" }","title":"post__setBackgroundColor"},{"location":"services/spawner-service/#post__setbackgroundimage","text":"POST /setBackgroundImage Set the background image Body parameter { \"imgName\": \"string\" }","title":"post__setBackgroundImage"},{"location":"services/spawner-service/#post__setdefaultimage","text":"POST /setDefaultImage Set the default image as background Example responses 200 Response","title":"post__setDefaultImage"},{"location":"services/spawner-service/#get__getwindowslist","text":"GET /getwindowslist Get window list Example responses 200 Response","title":"get__getwindowslist"},{"location":"services/spawner-service/#post__activatewindows","text":"POST /activatewindows Activate windows Body parameter { \"windowsid\": [ 0 ] }","title":"post__activatewindows"},{"location":"services/spawner-service/#post__closewindows","text":"POST /closewindows Close windows Body parameter { \"windowsid\": [ 0 ] }","title":"post__closewindows"},{"location":"services/spawner-service/#post__placeallwindows","text":"POST /placeAllWindows Place and resize all windows Example responses 200 Response { \"code\": 0, \"data\": \"string\" }","title":"post__placeAllWindows"},{"location":"services/spawner-service/#schemas","text":"","title":"Schemas"},{"location":"services/spawner-service/#properties","text":"Name Type Required Restrictions Description code integer false none none data string false none none","title":"Properties"},{"location":"services/spawner-service/#properties_1","text":"Name Type Required Restrictions Description code integer false none none data string false none none","title":"Properties"},{"location":"services/spawner-service/#properties_2","text":"Name Type Required Restrictions Description code integer false none none data object false none none","title":"Properties"},{"location":"services/spawner-service/#properties_3","text":"Name Type Required Restrictions Description code integer false none none data object false none none","title":"Properties"},{"location":"services/spawner-service/#properties_4","text":"Name Type Required Restrictions Description data object false none none","title":"Properties"},{"location":"services/spawner-service/#properties_5","text":"Name Type Required Restrictions Description code integer false none none data [object] false none none \u00bb command string false none none \u00bb args string false none none","title":"Properties"},{"location":"setup/kubernetes_flexvolume/","text":"CIFS Flexvolume Plugin for Kubernetes Driver for CIFS (SMB, Samba, Windows Share) network filesystems as Kubernetes volumes . abcdesktop team is not the authors of the CIFS Flexvolume Plugin for kubernetes. This file is an update from the original source file https://raw.githubusercontent.com/fstab/cifs/ . The original source code is https://github.com/fstab/cifs The author is Fabian St\u00e4ber . The update is part for abcdesktop.io This article is just an update from Fabian St\u00e4ber work. Background Docker containers running in Kubernetes have an ephemeral file system: Once a container is terminated, all files are gone. In order to store persistent data in Kubernetes, you need to mount a Persistent Volume into your container. Kubernetes has built-in support for network filesystems found in the most common cloud providers, like Amazon's EBS , Microsoft's Azure disk , etc. However, some cloud hosting services, like the Hetzner cloud , provide network storage using the CIFS (SMB, Samba, Windows Share) protocol, which is not natively supported in Kubernetes. Fortunately, Kubernetes provides Flexvolume , which is a plugin mechanism enabling users to write their own drivers. There are a few flexvolume drivers for CIFS out there, but for different reasons none of them seemed to work for me. So Fabian St\u00e4ber wrote this driver. Installing The flexvolume plugin is a single shell script named cifs . This shell script must be available on the Kubernetes master and on each of the Kubernetes nodes. By default, Kubernetes searches for third party volume plugins in /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ . The plugin directory can be configured with the kubelet's --volume-plugin-dir parameter, run ps aux | grep kubelet to learn the location of the plugin directory on your system (see [#1][9]). The cifs script must be located in a subdirectory named abcdesktop~cifs/ . The directory name abcdesktop~cifs/ will be mapped to the Flexvolume driver name abcdesktop/cifs . On the Kubernetes master and on each Kubernetes node run the following commands: VOLUME_PLUGIN_DIR=\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\" mkdir -p \"$VOLUME_PLUGIN_DIR/abcdesktop~cifs\" cd \"$VOLUME_PLUGIN_DIR/abcdesktop~cifs\" curl -L -O https://raw.githubusercontent.com/abcdesktop/cifs/main/cifs chmod 755 cifs The cifs script requires a few executables to be available on each host system: mount.cifs , on Ubuntu this is in the cifs-utils package. jq , on Ubuntu this is in the jq package. mountpoint , on Ubuntu this is in the util-linux package. base64 , on Ubuntu this is in the coreutils package. apt-get install cifs-utils jq util-linux coreutils To check if the installation was successful, run the following command: VOLUME_PLUGIN_DIR=\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\" $VOLUME_PLUGIN_DIR/abcdestkop~cifs/cifs init It should output a JSON string containing \"status\": \"Success\" . This command is also run by Kubernetes itself when the cifs plugin is detected on the file system. Update your od.config file In this example, we use a Microsoft Active Directory as a LDAP Server. CIFS is supported with kubernetes configuration, CIFS is not supported in docker non-cluster mode Add a new policy to add a label TAG during the user's authentification process. # Add an explicit authmanagers authmanagers: { 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } } } # add the configuration reference for adconfig adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'policies' : { 'acls': None, 'rules' : { 'rule-domainuser' : { 'conditions' : [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label' : 'domainuser' } } } } } } } } In this example : To verify that a user is member of DOMAIN USER group, we check that the user's primaryGroupID is equal to 513 If the primaryGroupID is equal to 513 the authentification process add the label domainuser Then in the same od.config file, add rules to the desktop object to match this label domainuser desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } }, 'acls' : {} } In this example : If the user's label is equal domainuser , then the user attribut homeDir is mounted to the homeDirectory by the CIFS flexvolume plugin. Testing Apply new configuration file kubectl apply -f abcdesktop.yml Open you abcdesktop website and fill the authentation form with your Microsoft Active Direcotry Service or Samba server credentials. Run authentification on the Microsoft Active Direcotry Service or on your Samba server Start the File Manager application. In this example, the homeDir is set to U: , the mount entry become the letter U . Click on the homeDir to read the CIFS ressource data. In this example, the shared ressource //192.168.7.101/alex contains a file ```NAS-file.ods' Troubleshooting Logs files are stored in host directory /var/log/abcdesktop/cifs # ls -la /var/log/abcdesktop/cifs total 36 drwxr-xr-x 2 root root 4096 janv. 28 16:39 . drwxr-xr-x 3 root root 4096 d\u00e9c. 1 12:00 .. -rw-r--r-- 1 root root 288 janv. 28 16:39 alex.log -rw-r--r-- 1 root root 832 janv. 28 16:39 cifs.log -rw-r--r-- 1 root root 1264 d\u00e9c. 1 14:25 error.alex.json -rw-r--r-- 1 root root 834 d\u00e9c. 1 14:25 error.alex.log -rw-r--r-- 1 root root 50 janv. 28 16:39 mount.counter -rw-r--r-- 1 root root 44 d\u00e9c. 22 12:20 umount.counter Check the file sAMAccountName.log, cifs.log If there is an error, look at the error.$sAMAccountName.json and error.$sAMAccountName.log Example -rw-r--r-- 1 root root 1264 d\u00e9c. 1 14:25 error.alex.json -rw-r--r-- 1 root root 834 d\u00e9c. 1 14:25 error.alex.log Run mount command mount In this example : 192.168.7.101 is the IP Address of the NAS server //192.168.7.101/alex is the shared ressource alex is the sAMAccountName # mount | grep 192.168.7.101 //192.168.7.101/alex on /var/lib/kubelet/pods/b7530cc0-6903-458a-a133-d8a8450e3af4/volumes/abcdesktop~cifs/flexvol-cifs-homedir-alex type cifs (rw,relatime,vers=1.0,cache=strict,username=alex,uid=4096,forceuid,gid=4096,forcegid,addr=192.168.7.101,soft,unix,posixpaths,serverino,mapposix,acl,rsize=1048576,wsize=1048576,bsize=1048576,echo_interval=60,actimeo=1) Check that the kubernetes secrets exist kubectl get secrets -n abcdesktop NAME TYPE DATA AGE abcdesktopjwtdesktoppayload Opaque 2 65d abcdesktopjwtdesktopsigning Opaque 2 65d abcdesktopjwtusersigning Opaque 2 65d auth-cifs-alex-flexvol-cifs-homedir abcdesktop/cifs 4 10m auth-ldif-alex abcdesktop/ldif 11 10m","title":"Setup CIFS Volume"},{"location":"setup/kubernetes_flexvolume/#cifs-flexvolume-plugin-for-kubernetes","text":"Driver for CIFS (SMB, Samba, Windows Share) network filesystems as Kubernetes volumes . abcdesktop team is not the authors of the CIFS Flexvolume Plugin for kubernetes. This file is an update from the original source file https://raw.githubusercontent.com/fstab/cifs/ . The original source code is https://github.com/fstab/cifs The author is Fabian St\u00e4ber . The update is part for abcdesktop.io This article is just an update from Fabian St\u00e4ber work.","title":"CIFS Flexvolume Plugin for Kubernetes"},{"location":"setup/kubernetes_flexvolume/#background","text":"Docker containers running in Kubernetes have an ephemeral file system: Once a container is terminated, all files are gone. In order to store persistent data in Kubernetes, you need to mount a Persistent Volume into your container. Kubernetes has built-in support for network filesystems found in the most common cloud providers, like Amazon's EBS , Microsoft's Azure disk , etc. However, some cloud hosting services, like the Hetzner cloud , provide network storage using the CIFS (SMB, Samba, Windows Share) protocol, which is not natively supported in Kubernetes. Fortunately, Kubernetes provides Flexvolume , which is a plugin mechanism enabling users to write their own drivers. There are a few flexvolume drivers for CIFS out there, but for different reasons none of them seemed to work for me. So Fabian St\u00e4ber wrote this driver.","title":"Background"},{"location":"setup/kubernetes_flexvolume/#installing","text":"The flexvolume plugin is a single shell script named cifs . This shell script must be available on the Kubernetes master and on each of the Kubernetes nodes. By default, Kubernetes searches for third party volume plugins in /usr/libexec/kubernetes/kubelet-plugins/volume/exec/ . The plugin directory can be configured with the kubelet's --volume-plugin-dir parameter, run ps aux | grep kubelet to learn the location of the plugin directory on your system (see [#1][9]). The cifs script must be located in a subdirectory named abcdesktop~cifs/ . The directory name abcdesktop~cifs/ will be mapped to the Flexvolume driver name abcdesktop/cifs . On the Kubernetes master and on each Kubernetes node run the following commands: VOLUME_PLUGIN_DIR=\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\" mkdir -p \"$VOLUME_PLUGIN_DIR/abcdesktop~cifs\" cd \"$VOLUME_PLUGIN_DIR/abcdesktop~cifs\" curl -L -O https://raw.githubusercontent.com/abcdesktop/cifs/main/cifs chmod 755 cifs The cifs script requires a few executables to be available on each host system: mount.cifs , on Ubuntu this is in the cifs-utils package. jq , on Ubuntu this is in the jq package. mountpoint , on Ubuntu this is in the util-linux package. base64 , on Ubuntu this is in the coreutils package. apt-get install cifs-utils jq util-linux coreutils To check if the installation was successful, run the following command: VOLUME_PLUGIN_DIR=\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec\" $VOLUME_PLUGIN_DIR/abcdestkop~cifs/cifs init It should output a JSON string containing \"status\": \"Success\" . This command is also run by Kubernetes itself when the cifs plugin is detected on the file system.","title":"Installing"},{"location":"setup/kubernetes_flexvolume/#update-your-odconfig-file","text":"In this example, we use a Microsoft Active Directory as a LDAP Server. CIFS is supported with kubernetes configuration, CIFS is not supported in docker non-cluster mode Add a new policy to add a label TAG during the user's authentification process. # Add an explicit authmanagers authmanagers: { 'explicit': { 'show_domains': True, 'default_domain': 'AD', 'providers': { 'AD': { 'config_ref': 'adconfig', 'enabled': True } } } } # add the configuration reference for adconfig adconfig : { 'AD': { 'default' : True, 'ldap_timeout' : 15, 'ldap_protocol' : 'ldap', 'ldap_basedn' : 'DC=ad,DC=domain,DC=local', 'ldap_fqdn' : '_ldap._tcp.ad.domain.local', 'domain' : 'AD', 'domain_fqdn' : 'AD.DOMAIN.LOCAL', 'servers' : [ '192.168.7.12' ], 'kerberos_realm': 'AD.DOMAIN.LOCAL', 'policies' : { 'acls': None, 'rules' : { 'rule-domainuser' : { 'conditions' : [ { 'primarygroupid': '513', 'expected' : True } ], 'expected' : True, 'label' : 'domainuser' } } } } } } } } In this example : To verify that a user is member of DOMAIN USER group, we check that the user's primaryGroupID is equal to 513 If the primaryGroupID is equal to 513 the authentification process add the label domainuser Then in the same od.config file, add rules to the desktop object to match this label domainuser desktop.policies: { 'rules': { 'volumes': { 'domainuser': { 'type': 'cifs', 'name': 'homedirectory', 'volumename': 'homedir' } } }, 'acls' : {} } In this example : If the user's label is equal domainuser , then the user attribut homeDir is mounted to the homeDirectory by the CIFS flexvolume plugin.","title":"Update your od.config file"},{"location":"setup/kubernetes_flexvolume/#testing","text":"","title":"Testing"},{"location":"setup/kubernetes_flexvolume/#apply-new-configuration-file","text":"kubectl apply -f abcdesktop.yml Open you abcdesktop website and fill the authentation form with your Microsoft Active Direcotry Service or Samba server credentials. Run authentification on the Microsoft Active Direcotry Service or on your Samba server Start the File Manager application. In this example, the homeDir is set to U: , the mount entry become the letter U . Click on the homeDir to read the CIFS ressource data. In this example, the shared ressource //192.168.7.101/alex contains a file ```NAS-file.ods'","title":"Apply new configuration file"},{"location":"setup/kubernetes_flexvolume/#troubleshooting","text":"Logs files are stored in host directory /var/log/abcdesktop/cifs # ls -la /var/log/abcdesktop/cifs total 36 drwxr-xr-x 2 root root 4096 janv. 28 16:39 . drwxr-xr-x 3 root root 4096 d\u00e9c. 1 12:00 .. -rw-r--r-- 1 root root 288 janv. 28 16:39 alex.log -rw-r--r-- 1 root root 832 janv. 28 16:39 cifs.log -rw-r--r-- 1 root root 1264 d\u00e9c. 1 14:25 error.alex.json -rw-r--r-- 1 root root 834 d\u00e9c. 1 14:25 error.alex.log -rw-r--r-- 1 root root 50 janv. 28 16:39 mount.counter -rw-r--r-- 1 root root 44 d\u00e9c. 22 12:20 umount.counter Check the file sAMAccountName.log, cifs.log If there is an error, look at the error.$sAMAccountName.json and error.$sAMAccountName.log Example -rw-r--r-- 1 root root 1264 d\u00e9c. 1 14:25 error.alex.json -rw-r--r-- 1 root root 834 d\u00e9c. 1 14:25 error.alex.log Run mount command mount In this example : 192.168.7.101 is the IP Address of the NAS server //192.168.7.101/alex is the shared ressource alex is the sAMAccountName # mount | grep 192.168.7.101 //192.168.7.101/alex on /var/lib/kubelet/pods/b7530cc0-6903-458a-a133-d8a8450e3af4/volumes/abcdesktop~cifs/flexvol-cifs-homedir-alex type cifs (rw,relatime,vers=1.0,cache=strict,username=alex,uid=4096,forceuid,gid=4096,forcegid,addr=192.168.7.101,soft,unix,posixpaths,serverino,mapposix,acl,rsize=1048576,wsize=1048576,bsize=1048576,echo_interval=60,actimeo=1) Check that the kubernetes secrets exist kubectl get secrets -n abcdesktop NAME TYPE DATA AGE abcdesktopjwtdesktoppayload Opaque 2 65d abcdesktopjwtdesktopsigning Opaque 2 65d abcdesktopjwtusersigning Opaque 2 65d auth-cifs-alex-flexvol-cifs-homedir abcdesktop/cifs 4 10m auth-ldif-alex abcdesktop/ldif 11 10m","title":"Troubleshooting"},{"location":"setup/kubernetes_networkpolicies/","text":"Network Policy group File need to be written","title":"Setup Network policy"},{"location":"setup/kubernetes_networkpolicies/#network-policy-group","text":"File need to be written","title":"Network Policy group"}]}